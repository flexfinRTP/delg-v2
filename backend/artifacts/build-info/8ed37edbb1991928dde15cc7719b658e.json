{"id":"8ed37edbb1991928dde15cc7719b658e","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Counters.sol\";\nimport \"../../utils/Checkpoints.sol\";\nimport \"../../utils/cryptography/EIP712.sol\";\nimport \"./IVotes.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_beforeTokenTransfer}).\n *\n * _Available since v4.5._\n */\nabstract contract Votes is IVotes, Context, EIP712 {\n    using Checkpoints for Checkpoints.History;\n    using Counters for Counters.Counter;\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegation;\n    mapping(address => Checkpoints.History) private _delegateCheckpoints;\n    Checkpoints.History private _totalCheckpoints;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        return _delegateCheckpoints[account].getAtProbablyRecentBlock(blockNumber);\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"Votes: block not yet mined\");\n        return _totalCheckpoints.getAtProbablyRecentBlock(blockNumber);\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegation[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegation[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        if (from == address(0)) {\n            _totalCheckpoints.push(_add, amount);\n        }\n        if (to == address(0)) {\n            _totalCheckpoints.push(_subtract, amount);\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(\n        address from,\n        address to,\n        uint256 amount\n    ) private {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _delegateCheckpoints[from].push(_subtract, amount);\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _delegateCheckpoints[to].push(_add, amount);\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev Returns an address nonce.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev Returns the contract's {EIP712} domain separator.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/draft-ERC721Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/draft-ERC721Votes.sol)\n\npragma solidity ^0.8.0;\n\n// ERC721Votes was marked as draft due to the EIP-712 dependency.\n// EIP-712 is Final as of 2022-08-11. This file is deprecated.\n\nimport \"./ERC721Votes.sol\";\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _burn(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\n\n        if (batchSize > 1) {\n            // Will only trigger during construction. Batch transferring (minting) is not available afterwards.\n            revert(\"ERC721Enumerable: consecutive transfers not supported\");\n        }\n\n        uint256 tokenId = firstTokenId;\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../governance/utils/Votes.sol\";\n\n/**\n * @dev Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts\n * as 1 vote unit.\n *\n * Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost\n * on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of\n * the votes in governance decisions, or they can delegate to themselves to be their own representative.\n *\n * _Available since v4.5._\n */\nabstract contract ERC721Votes is ERC721, Votes {\n    /**\n     * @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        _transferVotingUnits(from, to, batchSize);\n        super._afterTokenTransfer(from, to, firstTokenId, batchSize);\n    }\n\n    /**\n     * @dev Returns the balance of `account`.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (utils/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SafeCast.sol\";\n\n/**\n * @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n *\n * _Available since v4.5._\n */\nlibrary Checkpoints {\n    struct History {\n        Checkpoint[] _checkpoints;\n    }\n\n    struct Checkpoint {\n        uint32 _blockNumber;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n     * block, the requested block number must be in the past, excluding the current block.\n     */\n    function getAtBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n     * checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n     * checkpoints.\n     */\n    function getAtProbablyRecentBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n     *\n     * Returns previous value and new value.\n     */\n    function push(History storage self, uint256 value) internal returns (uint256, uint256) {\n        return _insert(self._checkpoints, SafeCast.toUint32(block.number), SafeCast.toUint224(value));\n    }\n\n    /**\n     * @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n     * be set to `op(latest, delta)`.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        History storage self,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) internal returns (uint256, uint256) {\n        return push(self, op(latest(self), delta));\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(History storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(History storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint32 _blockNumber,\n            uint224 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._blockNumber, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(History storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._blockNumber <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._blockNumber == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint({_blockNumber: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint({_blockNumber: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage self, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint with key lower or equal than the search key.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint32 _key,\n            uint224 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._key <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint224[] storage self, uint256 pos)\n        private\n        pure\n        returns (Checkpoint224 storage result)\n    {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint with key lower or equal than the search key.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint96 _key,\n            uint160 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._key <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint160[] storage self, uint256 pos)\n        private\n        pure\n        returns (Checkpoint160 storage result)\n    {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-712 is Final as of 2022-08-11. This file is deprecated.\n\nimport \"./EIP712.sol\";\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/DelFactory.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/draft-ERC721Votes.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\n\ncontract DelFactory is ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    constructor()ERC721(\"DEL License\",\"DEL\"){\n    }\n\n\n    function mintNFT(address recipient, string memory tokenURI)\n        public onlyOwner\n        returns (uint256)\n    {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _safeMint(recipient, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n\n        return newItemId;\n    }\n}\n    "}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[4566],"ERC165":[5357],"IAccessControl":[388],"IERC165":[5369],"Math":[6234],"Strings":[4815]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":4567,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":4816,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":5358,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4566,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":5357,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,5357,5369,388,4566],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":315,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":315,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[5356],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5356,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":315,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":315,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":315,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3791:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3801:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3830:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4815_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":4814,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3989:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4043:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4116:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4108:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4123:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"4088:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4815_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"4088:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4088:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3868:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3844:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3844:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":315,"src":"3718:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4461:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4478:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4485:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4478:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4471:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4203:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4387:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4434:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4408:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4400:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4452:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4451:9:0"},"scope":315,"src":"4378:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"4906:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4927:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4933:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4916:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4916:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"4916:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4513:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4886:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4886:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4877:8:0"},"nodeType":"ModifierInvocation","src":"4877:28:0"}],"name":"grantRole","nameLocation":"4812:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4868:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4830:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4822:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4822:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4844:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4836:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4821:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4906:0:0"},"scope":315,"src":"4803:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5332:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5354:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5360:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5342:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5342:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5342:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4954:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5325:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5312:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5312:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5303:8:0"},"nodeType":"ModifierInvocation","src":"5303:28:0"}],"name":"revokeRole","nameLocation":"5237:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5294:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5256:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5270:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5262:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5332:0:0"},"scope":315,"src":"5228:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"5989:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"6018:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6018:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6032:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5999:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5999:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"5999:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6093:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6093:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6093:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5381:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5921:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"5980:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"5942:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5934:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5934:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"5956:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5933:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5989:0:0"},"scope":315,"src":"5912:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"6879:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6900:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6906:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"6889:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6889:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"6889:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6132:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6820:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6839:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6831:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6853:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6845:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6845:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6830:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6879:0:0"},"scope":315,"src":"6811:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7119:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7137:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7129:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7129:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7170:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7157:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7157:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7129:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7185:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7192:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7185:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7185:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7210:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7185:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7185:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7251:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7257:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7276:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7234:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7234:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7229:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"6927:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7055:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7077:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7069:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7091:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7083:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7083:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7119:0:0"},"scope":315,"src":"7046:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7529:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7543:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7558:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7539:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7568:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7582:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7589:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7582:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7582:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7582:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7614:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7582:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7582:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7649:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7655:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"7664:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7664:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7637:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7637:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7632:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7299:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7470:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7489:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7503:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7495:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7495:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7480:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7529:0:0"},"scope":315,"src":"7461:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"7934:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"7962:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7948:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7948:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"7944:149:0","trueBody":{"id":311,"nodeType":"Block","src":"7972:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7986:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7993:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7986:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7986:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8018:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7986:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"7986:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8054:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"8069:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8069:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8042:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8042:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8037:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7700:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7874:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"7894:4:0","nodeType":"VariableDeclaration","scope":314,"src":"7886:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7886:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"7908:7:0","nodeType":"VariableDeclaration","scope":314,"src":"7900:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"7900:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7885:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"7934:0:0"},"scope":315,"src":"7865:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1806:6295:0","usedErrors":[]}],"src":"108:7994:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[4566],"Ownable":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":502,"sourceUnit":4567,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":393,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4566,"src":"683:7:2"},"id":394,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501,4566],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":396,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":501,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":402,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":402,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":402,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":411,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":412,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":501,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":415,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":418,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":420,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":426,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":425,"id":427,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":501,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":442,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":501,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"1885:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:2","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":449,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1895:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1895:30:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1495:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":457,"implemented":true,"kind":"function","modifiers":[{"id":447,"kind":"modifierInvocation","modifierName":{"id":446,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1875:9:2"},"nodeType":"ModifierInvocation","src":"1875:9:2"}],"name":"renounceOwnership","nameLocation":"1840:17:2","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"1857:2:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1885:0:2"},"scope":501,"src":"1831:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":479,"nodeType":"Block","src":"2151:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2169:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"2161:73:2"},{"expression":{"arguments":[{"id":476,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2244:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"2244:28:2"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1938:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":480,"implemented":true,"kind":"function","modifiers":[{"id":463,"kind":"modifierInvocation","modifierName":{"id":462,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"2141:9:2"},"nodeType":"ModifierInvocation","src":"2141:9:2"}],"name":"transferOwnership","nameLocation":"2090:17:2","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:2","nodeType":"VariableDeclaration","scope":480,"src":"2108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2151:0:2"},"scope":501,"src":"2081:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"2496:124:2","statements":[{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:2","nodeType":"VariableDeclaration","scope":499,"src":"2506:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"id":488,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:2"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2541:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":491,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":493,"nodeType":"ExpressionStatement","src":"2541:17:2"},{"eventCall":{"arguments":[{"id":495,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2594:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2604:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2573:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"EmitStatement","src":"2568:45:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2285:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:2","nodeType":"VariableDeclaration","scope":500,"src":"2461:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2496:0:2"},"scope":501,"src":"2433:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":502,"src":"654:1968:2","usedErrors":[]}],"src":"102:2521:2"},"id":2},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[579]},"id":580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"135:132:3","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":579,"linearizedBaseContracts":[579],"name":"IVotes","nameLocation":"278:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"291:71:3","text":" @dev Emitted when an account changes their delegate."},"id":513,"name":"DelegateChanged","nameLocation":"373:15:3","nodeType":"EventDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:3","nodeType":"VariableDeclaration","scope":513,"src":"389:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":509,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:3","nodeType":"VariableDeclaration","scope":513,"src":"416:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":511,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:3","nodeType":"VariableDeclaration","scope":513,"src":"446:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:3"},"src":"367:107:3"},{"anonymous":false,"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"480:124:3","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":522,"name":"DelegateVotesChanged","nameLocation":"615:20:3","nodeType":"EventDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:3","nodeType":"VariableDeclaration","scope":522,"src":"636:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:3","nodeType":"VariableDeclaration","scope":522,"src":"662:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":520,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:3","nodeType":"VariableDeclaration","scope":522,"src":"687:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:3"},"src":"609:98:3"},{"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"713:79:3","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"account","nameLocation":"823:7:3","nodeType":"VariableDeclaration","scope":530,"src":"815:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:3"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"855:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:3"},"scope":579,"src":"797:67:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"870:114:3","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":540,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"998:12:3","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"account","nameLocation":"1019:7:3","nodeType":"VariableDeclaration","scope":540,"src":"1011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"blockNumber","nameLocation":"1036:11:3","nodeType":"VariableDeclaration","scope":540,"src":"1028:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:38:3"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"1072:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:9:3"},"scope":579,"src":"989:92:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"1087:365:3","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":548,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1466:18:3","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"blockNumber","nameLocation":"1493:11:3","nodeType":"VariableDeclaration","scope":548,"src":"1485:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:21:3"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":548,"src":"1529:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1528:9:3"},"scope":579,"src":"1457:81:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"1544:71:3","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":556,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1629:9:3","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"account","nameLocation":"1647:7:3","nodeType":"VariableDeclaration","scope":556,"src":"1639:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:17:3"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":556,"src":"1679:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:3"},"scope":579,"src":"1620:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"1694:71:3","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":562,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1779:8:3","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"delegatee","nameLocation":"1796:9:3","nodeType":"VariableDeclaration","scope":562,"src":"1788:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:19:3"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"1815:0:3"},"scope":579,"src":"1770:46:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"1822:67:3","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":578,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1903:13:3","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"delegatee","nameLocation":"1934:9:3","nodeType":"VariableDeclaration","scope":578,"src":"1926:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"nonce","nameLocation":"1961:5:3","nodeType":"VariableDeclaration","scope":578,"src":"1953:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"expiry","nameLocation":"1984:6:3","nodeType":"VariableDeclaration","scope":578,"src":"1976:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"v","nameLocation":"2006:1:3","nodeType":"VariableDeclaration","scope":578,"src":"2000:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":570,"name":"uint8","nodeType":"ElementaryTypeName","src":"2000:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"r","nameLocation":"2025:1:3","nodeType":"VariableDeclaration","scope":578,"src":"2017:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"s","nameLocation":"2044:1:3","nodeType":"VariableDeclaration","scope":578,"src":"2036:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1916:135:3"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"2060:0:3"},"scope":579,"src":"1894:167:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":580,"src":"268:1795:3","usedErrors":[]}],"src":"110:1954:3"},"id":3},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[4544],"Context":[4566],"Counters":[4640],"ECDSA":[5176],"EIP712":[5330],"IVotes":[579],"Math":[6234],"SafeCast":[7775],"Strings":[4815],"Votes":[1033]},"id":1034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":581,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1034,"sourceUnit":4567,"src":"134:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../utils/Counters.sol","id":583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1034,"sourceUnit":4641,"src":"168:34:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","file":"../../utils/Checkpoints.sol","id":584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1034,"sourceUnit":4545,"src":"203:37:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1034,"sourceUnit":5331,"src":"241:45:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"./IVotes.sol","id":586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1034,"sourceUnit":580,"src":"287:22:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":588,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":579,"src":"1697:6:4"},"id":589,"nodeType":"InheritanceSpecifier","src":"1697:6:4"},{"baseName":{"id":590,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4566,"src":"1705:7:4"},"id":591,"nodeType":"InheritanceSpecifier","src":"1705:7:4"},{"baseName":{"id":592,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":5330,"src":"1714:6:4"},"id":593,"nodeType":"InheritanceSpecifier","src":"1714:6:4"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"311:1358:4","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_beforeTokenTransfer}).\n _Available since v4.5._"},"fullyImplemented":false,"id":1033,"linearizedBaseContracts":[1033,5330,4566,579],"name":"Votes","nameLocation":"1688:5:4","nodeType":"ContractDefinition","nodes":[{"id":597,"libraryName":{"id":594,"name":"Checkpoints","nodeType":"IdentifierPath","referencedDeclaration":4544,"src":"1733:11:4"},"nodeType":"UsingForDirective","src":"1727:42:4","typeName":{"id":596,"nodeType":"UserDefinedTypeName","pathNode":{"id":595,"name":"Checkpoints.History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"1749:19:4"},"referencedDeclaration":3183,"src":"1749:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}}},{"id":601,"libraryName":{"id":598,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":4640,"src":"1780:8:4"},"nodeType":"UsingForDirective","src":"1774:36:4","typeName":{"id":600,"nodeType":"UserDefinedTypeName","pathNode":{"id":599,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"1793:16:4"},"referencedDeclaration":4572,"src":"1793:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":true,"id":606,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1841:20:4","nodeType":"VariableDeclaration","scope":1033,"src":"1816:127:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1882:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":603,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1872:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1872:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":610,"mutability":"mutable","name":"_delegation","nameLocation":"1986:11:4","nodeType":"VariableDeclaration","scope":1033,"src":"1950:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":609,"keyType":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1950:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":615,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2051:20:4","nodeType":"VariableDeclaration","scope":1033,"src":"2003:68:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$3183_storage_$","typeString":"mapping(address => struct Checkpoints.History)"},"typeName":{"id":614,"keyType":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2003:39:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$3183_storage_$","typeString":"mapping(address => struct Checkpoints.History)"},"valueType":{"id":613,"nodeType":"UserDefinedTypeName","pathNode":{"id":612,"name":"Checkpoints.History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"2022:19:4"},"referencedDeclaration":3183,"src":"2022:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}}},"visibility":"private"},{"constant":false,"id":618,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2105:17:4","nodeType":"VariableDeclaration","scope":1033,"src":"2077:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History"},"typeName":{"id":617,"nodeType":"UserDefinedTypeName","pathNode":{"id":616,"name":"Checkpoints.History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"2077:19:4"},"referencedDeclaration":3183,"src":"2077:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"private"},{"constant":false,"id":623,"mutability":"mutable","name":"_nonces","nameLocation":"2174:7:4","nodeType":"VariableDeclaration","scope":1033,"src":"2129:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4572_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":622,"keyType":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2129:36:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4572_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"2148:16:4"},"referencedDeclaration":4572,"src":"2148:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"baseFunctions":[530],"body":{"id":638,"nodeType":"Block","src":"2354:62:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":632,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2371:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$3183_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":634,"indexExpression":{"id":633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"2392:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2371:29:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":3437,"src":"2371:36:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$3183_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2371:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":631,"id":637,"nodeType":"Return","src":"2364:45:4"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"2188:79:4","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":639,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2281:8:4","nodeType":"FunctionDefinition","overrides":{"id":628,"nodeType":"OverrideSpecifier","overrides":[],"src":"2327:8:4"},"parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"account","nameLocation":"2298:7:4","nodeType":"VariableDeclaration","scope":639,"src":"2290:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:17:4"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":639,"src":"2345:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2344:9:4"},"scope":1033,"src":"2272:144:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[540],"body":{"id":657,"nodeType":"Block","src":"2735:91:4","statements":[{"expression":{"arguments":[{"id":654,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2807:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":650,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2752:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$3183_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":652,"indexExpression":{"id":651,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2773:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2752:29:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"getAtProbablyRecentBlock","nodeType":"MemberAccess","referencedDeclaration":3345,"src":"2752:54:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$3183_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) view returns (uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2752:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":649,"id":656,"nodeType":"Return","src":"2745:74:4"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"2422:201:4","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":658,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"2637:12:4","nodeType":"FunctionDefinition","overrides":{"id":646,"nodeType":"OverrideSpecifier","overrides":[],"src":"2708:8:4"},"parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"2658:7:4","nodeType":"VariableDeclaration","scope":658,"src":"2650:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"2650:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"blockNumber","nameLocation":"2675:11:4","nodeType":"VariableDeclaration","scope":658,"src":"2667:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2649:38:4"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"2726:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2725:9:4"},"scope":1033,"src":"2628:198:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[548],"body":{"id":680,"nodeType":"Block","src":"3385:154:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"3403:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":669,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3417:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3417:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3403:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3431:28:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69","typeString":"literal_string \"Votes: block not yet mined\""},"value":"Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83c09804cf777c619c7ba082380b263866073c54e541883e3b7cb00a4aa7fe69","typeString":"literal_string \"Votes: block not yet mined\""}],"id":667,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3395:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3395:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"3395:65:4"},{"expression":{"arguments":[{"id":677,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"3520:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":675,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3477:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"getAtProbablyRecentBlock","nodeType":"MemberAccess","referencedDeclaration":3345,"src":"3477:42:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$3183_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) view returns (uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3477:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":666,"id":679,"nodeType":"Return","src":"3470:62:4"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"2832:452:4","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3298:18:4","nodeType":"FunctionDefinition","overrides":{"id":663,"nodeType":"OverrideSpecifier","overrides":[],"src":"3358:8:4"},"parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"blockNumber","nameLocation":"3325:11:4","nodeType":"VariableDeclaration","scope":681,"src":"3317:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3316:21:4"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"3376:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:9:4"},"scope":1033,"src":"3289:250:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":691,"nodeType":"Block","src":"3683:50:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":687,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3700:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":3437,"src":"3700:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$3183_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3700:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":686,"id":690,"nodeType":"Return","src":"3693:33:4"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"3545:66:4","text":" @dev Returns the current total supply of votes."},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"3625:15:4","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"3640:2:4"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":692,"src":"3674:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3674:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3673:9:4"},"scope":1033,"src":"3616:117:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[556],"body":{"id":705,"nodeType":"Block","src":"3898:44:4","statements":[{"expression":{"baseExpression":{"id":701,"name":"_delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"3915:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":703,"indexExpression":{"id":702,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3927:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3915:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":700,"id":704,"nodeType":"Return","src":"3908:27:4"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"3739:71:4","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":706,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"3824:9:4","nodeType":"FunctionDefinition","overrides":{"id":697,"nodeType":"OverrideSpecifier","overrides":[],"src":"3871:8:4"},"parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"account","nameLocation":"3842:7:4","nodeType":"VariableDeclaration","scope":706,"src":"3834:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"3834:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3833:17:4"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"3889:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"3889:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3888:9:4"},"scope":1033,"src":"3815:127:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[562],"body":{"id":723,"nodeType":"Block","src":"4085:86:4","statements":[{"assignments":[714],"declarations":[{"constant":false,"id":714,"mutability":"mutable","name":"account","nameLocation":"4103:7:4","nodeType":"VariableDeclaration","scope":723,"src":"4095:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"4095:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":717,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":715,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4113:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4113:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4095:30:4"},{"expression":{"arguments":[{"id":719,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"4145:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4154:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":718,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"4135:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4135:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"4135:29:4"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"3948:71:4","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"4033:8:4","nodeType":"FunctionDefinition","overrides":{"id":711,"nodeType":"OverrideSpecifier","overrides":[],"src":"4076:8:4"},"parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"delegatee","nameLocation":"4050:9:4","nodeType":"VariableDeclaration","scope":724,"src":"4042:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"4042:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4041:19:4"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"4085:0:4"},"scope":1033,"src":"4024:147:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[578],"body":{"id":783,"nodeType":"Block","src":"4431:382:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":742,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4449:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4449:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":744,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4468:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4449:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a207369676e61747572652065787069726564","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4476:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","typeString":"literal_string \"Votes: signature expired\""},"value":"Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","typeString":"literal_string \"Votes: signature expired\""}],"id":741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4441:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4441:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"4441:62:4"},{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"signer","nameLocation":"4521:6:4","nodeType":"VariableDeclaration","scope":783,"src":"4513:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"4513:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":768,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":757,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4595:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":758,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4617:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":759,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4628:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":760,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4635:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":755,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4584:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4584:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4584:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":754,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4574:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":753,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"4557:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4557:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":764,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"4658:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":765,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"4673:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":766,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"4688:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":751,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"4530:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5176_$","typeString":"type(library ECDSA)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":5116,"src":"4530:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4530:169:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4513:186:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4717:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":772,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4736:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":771,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"4726:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4726:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4717:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a20696e76616c6964206e6f6e6365","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4745:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","typeString":"literal_string \"Votes: invalid nonce\""},"value":"Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","typeString":"literal_string \"Votes: invalid nonce\""}],"id":769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4709:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4709:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"ExpressionStatement","src":"4709:59:4"},{"expression":{"arguments":[{"id":779,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4788:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4796:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"4778:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4778:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"ExpressionStatement","src":"4778:28:4"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4177:67:4","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":784,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"4258:13:4","nodeType":"FunctionDefinition","overrides":{"id":739,"nodeType":"OverrideSpecifier","overrides":[],"src":"4422:8:4"},"parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"delegatee","nameLocation":"4289:9:4","nodeType":"VariableDeclaration","scope":784,"src":"4281:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"4281:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"nonce","nameLocation":"4316:5:4","nodeType":"VariableDeclaration","scope":784,"src":"4308:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"4308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"expiry","nameLocation":"4339:6:4","nodeType":"VariableDeclaration","scope":784,"src":"4331:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4331:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"v","nameLocation":"4361:1:4","nodeType":"VariableDeclaration","scope":784,"src":"4355:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":732,"name":"uint8","nodeType":"ElementaryTypeName","src":"4355:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"r","nameLocation":"4380:1:4","nodeType":"VariableDeclaration","scope":784,"src":"4372:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4372:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"s","nameLocation":"4399:1:4","nodeType":"VariableDeclaration","scope":784,"src":"4391:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4391:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4271:135:4"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"4431:0:4"},"scope":1033,"src":"4249:564:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":818,"nodeType":"Block","src":"5063:241:4","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"oldDelegate","nameLocation":"5081:11:4","nodeType":"VariableDeclaration","scope":818,"src":"5073:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":797,"initialValue":{"arguments":[{"id":795,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5105:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":794,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5095:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5095:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5073:40:4"},{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":798,"name":"_delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5123:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5135:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5123:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":801,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"5146:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5123:32:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":803,"nodeType":"ExpressionStatement","src":"5123:32:4"},{"eventCall":{"arguments":[{"id":805,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5187:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5196:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"5209:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":804,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5171:15:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5171:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":809,"nodeType":"EmitStatement","src":"5166:53:4"},{"expression":{"arguments":[{"id":811,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5248:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"5261:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":814,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5288:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":813,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"5272:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5272:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"5229:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5229:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"5229:68:4"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"4819:167:4","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"5000:9:4","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"account","nameLocation":"5018:7:4","nodeType":"VariableDeclaration","scope":819,"src":"5010:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"delegatee","nameLocation":"5035:9:4","nodeType":"VariableDeclaration","scope":819,"src":"5027:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"5027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5009:36:4"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"5063:0:4"},"scope":1033,"src":"4991:313:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"5657:266:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"5671:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5687:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5679:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:4","typeDescriptions":{}}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5679:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5671:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"IfStatement","src":"5667:85:4","trueBody":{"id":842,"nodeType":"Block","src":"5691:61:4","statements":[{"expression":{"arguments":[{"id":838,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5728:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":839,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5734:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":835,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"5705:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"5705:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$3183_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5705:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":841,"nodeType":"ExpressionStatement","src":"5705:36:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5765:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5779:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5771:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"5771:7:4","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5771:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5765:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"5761:88:4","trueBody":{"id":857,"nodeType":"Block","src":"5783:66:4","statements":[{"expression":{"arguments":[{"id":853,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"5820:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":854,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5831:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":850,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"5797:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"5797:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$3183_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5797:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":856,"nodeType":"ExpressionStatement","src":"5797:41:4"}]}},{"expression":{"arguments":[{"arguments":[{"id":861,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"5887:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":860,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5877:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5877:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5904:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":863,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5894:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5894:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5909:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"5858:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5858:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"5858:58:4"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"5310:223:4","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"5547:20:4","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"from","nameLocation":"5585:4:4","nodeType":"VariableDeclaration","scope":870,"src":"5577:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"to","nameLocation":"5607:2:4","nodeType":"VariableDeclaration","scope":870,"src":"5599:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"5599:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"amount","nameLocation":"5627:6:4","nodeType":"VariableDeclaration","scope":870,"src":"5619:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"5619:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5567:72:4"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"5657:0:4"},"scope":1033,"src":"5538:385:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"6117:502:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6131:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6139:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6131:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":883,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6145:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6154:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6145:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6131:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":940,"nodeType":"IfStatement","src":"6127:486:4","trueBody":{"id":939,"nodeType":"Block","src":"6157:456:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":887,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6175:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6191:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6183:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"6183:7:4","typeDescriptions":{}}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6183:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6175:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":912,"nodeType":"IfStatement","src":"6171:215:4","trueBody":{"id":911,"nodeType":"Block","src":"6195:191:4","statements":[{"assignments":[894,896],"declarations":[{"constant":false,"id":894,"mutability":"mutable","name":"oldValue","nameLocation":"6222:8:4","nodeType":"VariableDeclaration","scope":911,"src":"6214:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6214:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"newValue","nameLocation":"6240:8:4","nodeType":"VariableDeclaration","scope":911,"src":"6232:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[{"id":901,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"6284:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6295:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":897,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6252:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$3183_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":899,"indexExpression":{"id":898,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6273:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6252:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"6252:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$3183_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6252:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6213:89:4"},{"eventCall":{"arguments":[{"id":906,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6346:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6352:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":908,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"6362:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":905,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6325:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6325:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"EmitStatement","src":"6320:51:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6403:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6417:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6409:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"6409:7:4","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6409:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6403:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":938,"nodeType":"IfStatement","src":"6399:204:4","trueBody":{"id":937,"nodeType":"Block","src":"6421:182:4","statements":[{"assignments":[920,922],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"oldValue","nameLocation":"6448:8:4","nodeType":"VariableDeclaration","scope":937,"src":"6440:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"newValue","nameLocation":"6466:8:4","nodeType":"VariableDeclaration","scope":937,"src":"6458:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"6458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":930,"initialValue":{"arguments":[{"id":927,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6508:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6514:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":923,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6478:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_History_$3183_storage_$","typeString":"mapping(address => struct Checkpoints.History storage ref)"}},"id":925,"indexExpression":{"id":924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6499:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6478:24:4","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage","typeString":"struct Checkpoints.History storage ref"}},"id":926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3407,"src":"6478:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$3183_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$3183_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6478:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6439:82:4"},{"eventCall":{"arguments":[{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6565:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":933,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6569:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":934,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"6579:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":931,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6544:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6544:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"EmitStatement","src":"6539:49:4"}]}}]}}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"5929:75:4","text":" @dev Moves delegated votes from one delegate to another."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"6018:18:4","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"from","nameLocation":"6054:4:4","nodeType":"VariableDeclaration","scope":942,"src":"6046:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"6046:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"to","nameLocation":"6076:2:4","nodeType":"VariableDeclaration","scope":942,"src":"6068:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"6068:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"amount","nameLocation":"6096:6:4","nodeType":"VariableDeclaration","scope":942,"src":"6088:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"6088:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6036:72:4"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"6117:0:4"},"scope":1033,"src":"6009:610:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":955,"nodeType":"Block","src":"6692:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6709:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":952,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6713:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6709:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":950,"id":954,"nodeType":"Return","src":"6702:12:4"}]},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"6634:4:4","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"a","nameLocation":"6647:1:4","nodeType":"VariableDeclaration","scope":956,"src":"6639:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"6639:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"b","nameLocation":"6658:1:4","nodeType":"VariableDeclaration","scope":956,"src":"6650:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"6650:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6638:22:4"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"6683:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"6683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6682:9:4"},"scope":1033,"src":"6625:96:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":969,"nodeType":"Block","src":"6799:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6816:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6820:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6816:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":964,"id":968,"nodeType":"Return","src":"6809:12:4"}]},"id":970,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"6736:9:4","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"a","nameLocation":"6754:1:4","nodeType":"VariableDeclaration","scope":970,"src":"6746:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"6746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"b","nameLocation":"6765:1:4","nodeType":"VariableDeclaration","scope":970,"src":"6757:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"6757:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6745:22:4"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":970,"src":"6790:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6790:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6789:9:4"},"scope":1033,"src":"6727:101:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":998,"nodeType":"Block","src":"7019:126:4","statements":[{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"nonce","nameLocation":"7054:5:4","nodeType":"VariableDeclaration","scope":998,"src":"7029:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":981,"nodeType":"UserDefinedTypeName","pathNode":{"id":980,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"7029:16:4"},"referencedDeclaration":4572,"src":"7029:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":986,"initialValue":{"baseExpression":{"id":983,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"7062:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4572_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":985,"indexExpression":{"id":984,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"7070:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7062:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7029:47:4"},{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":987,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"7086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":988,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"7096:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":4584,"src":"7096:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$4572_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4572_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7096:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7086:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ExpressionStatement","src":"7086:25:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":993,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"7121:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":4598,"src":"7121:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$4572_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$4572_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7121:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"7121:17:4"}]},"documentation":{"id":971,"nodeType":"StructuredDocumentation","src":"6834:103:4","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"6951:9:4","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"owner","nameLocation":"6969:5:4","nodeType":"VariableDeclaration","scope":999,"src":"6961:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"6961:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6960:15:4"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"current","nameLocation":"7010:7:4","nodeType":"VariableDeclaration","scope":999,"src":"7002:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"7002:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7001:17:4"},"scope":1033,"src":"6942:203:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"7274:48:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1007,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"7291:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$4572_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1009,"indexExpression":{"id":1008,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"7299:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7291:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage","typeString":"struct Counters.Counter storage ref"}},"id":1010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":4584,"src":"7291:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$4572_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4572_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7291:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1006,"id":1012,"nodeType":"Return","src":"7284:31:4"}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"7151:49:4","text":" @dev Returns an address nonce."},"functionSelector":"7ecebe00","id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"7214:6:4","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"owner","nameLocation":"7229:5:4","nodeType":"VariableDeclaration","scope":1014,"src":"7221:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"7221:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7220:15:4"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"7265:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"7265:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7264:9:4"},"scope":1033,"src":"7205:117:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1023,"nodeType":"Block","src":"7519:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1020,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"7536:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7536:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1019,"id":1022,"nodeType":"Return","src":"7529:27:4"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"7328:73:4","text":" @dev Returns the contract's {EIP712} domain separator."},"functionSelector":"3644e515","id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"7468:16:4","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"7484:2:4"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"7510:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7510:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7509:9:4"},"scope":1033,"src":"7459:104:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"7569:72:4","text":" @dev Must return the voting units held by an account."},"id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"7655:15:4","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"7671:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"7671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7670:9:4"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"7711:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"7711:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7710:9:4"},"scope":1033,"src":"7646:74:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1034,"src":"1670:6052:4","usedErrors":[]}],"src":"109:7614:4"},"id":4},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[4566],"Pausable":[1141]},"id":1142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1035,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1142,"sourceUnit":4567,"src":"130:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1038,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4566,"src":"632:7:5"},"id":1039,"nodeType":"InheritanceSpecifier","src":"632:7:5"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"162:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1141,"linearizedBaseContracts":[1141,4566],"name":"Pausable","nameLocation":"620:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"646:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"id":1044,"name":"Paused","nameLocation":"730:6:5","nodeType":"EventDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:5","nodeType":"VariableDeclaration","scope":1044,"src":"737:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:5"},"src":"724:30:5"},{"anonymous":false,"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"760:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"id":1049,"name":"Unpaused","nameLocation":"841:8:5","nodeType":"EventDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:5","nodeType":"VariableDeclaration","scope":1049,"src":"850:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:5"},"src":"835:32:5"},{"constant":false,"id":1051,"mutability":"mutable","name":"_paused","nameLocation":"886:7:5","nodeType":"VariableDeclaration","scope":1141,"src":"873:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1050,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1059,"nodeType":"Block","src":"986:32:5","statements":[{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1055,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"996:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"ExpressionStatement","src":"996:15:5"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"900:67:5","text":" @dev Initializes the contract in unpaused state."},"id":1060,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"983:2:5"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"986:0:5"},"scope":1141,"src":"972:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1067,"nodeType":"Block","src":"1229:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1063,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"1239:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"1239:19:5"},{"id":1066,"nodeType":"PlaceholderStatement","src":"1268:1:5"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"1024:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1068,"name":"whenNotPaused","nameLocation":"1213:13:5","nodeType":"ModifierDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"1226:2:5"},"src":"1204:72:5","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"1476:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1071,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"1486:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"1486:16:5"},{"id":1074,"nodeType":"PlaceholderStatement","src":"1512:1:5"}]},"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"1282:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1076,"name":"whenPaused","nameLocation":"1463:10:5","nodeType":"ModifierDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[],"src":"1473:2:5"},"src":"1454:66:5","virtual":false,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"1668:31:5","statements":[{"expression":{"id":1082,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1685:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1081,"id":1083,"nodeType":"Return","src":"1678:14:5"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"1526:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:5","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"1630:2:5"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"1662:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:5"},"scope":1141,"src":"1615:84:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1096,"nodeType":"Block","src":"1818:55:5","statements":[{"expression":{"arguments":[{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1090,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"1837:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":1089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"1828:38:5"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"1705:57:5","text":" @dev Throws if the contract is paused."},"id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:5","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1793:2:5"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"1818:0:5"},"scope":1141,"src":"1767:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"1993:58:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1102,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2011:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":1101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"2003:41:5"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"1879:61:5","text":" @dev Throws if the contract is not paused."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:5","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"1968:2:5"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"1993:0:5"},"scope":1141,"src":"1945:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1123,"nodeType":"Block","src":"2235:66:5","statements":[{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1114,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2245:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"nodeType":"ExpressionStatement","src":"2245:14:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"2281:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1118,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2274:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"EmitStatement","src":"2269:25:5"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"2057:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1124,"implemented":true,"kind":"function","modifiers":[{"id":1112,"kind":"modifierInvocation","modifierName":{"id":1111,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":1068,"src":"2221:13:5"},"nodeType":"ModifierInvocation","src":"2221:13:5"}],"name":"_pause","nameLocation":"2195:6:5","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"2201:2:5"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"2235:0:5"},"scope":1141,"src":"2186:115:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"2481:69:5","statements":[{"expression":{"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1130,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2491:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1133,"nodeType":"ExpressionStatement","src":"2491:15:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1135,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"2530:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1134,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2521:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"EmitStatement","src":"2516:27:5"}]},"documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"2307:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1140,"implemented":true,"kind":"function","modifiers":[{"id":1128,"kind":"modifierInvocation","modifierName":{"id":1127,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"2470:10:5"},"nodeType":"ModifierInvocation","src":"2470:10:5"}],"name":"_unpause","nameLocation":"2442:8:5","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[],"src":"2450:2:5"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[],"src":"2481:0:5"},"scope":1141,"src":"2433:117:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1142,"src":"602:1950:5","usedErrors":[]}],"src":"105:2448:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[3173],"Context":[4566],"ERC165":[5357],"ERC721":[2086],"IERC165":[5369],"IERC721":[2202],"IERC721Metadata":[2840],"IERC721Receiver":[2220],"Math":[6234],"Strings":[4815]},"id":2087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1143,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":2203,"src":"132:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":2221,"src":"156:31:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":2841,"src":"188:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":3174,"src":"231:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":4567,"src":"265:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":4816,"src":"299:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":5358,"src":"333:46:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1152,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4566,"src":"647:7:6"},"id":1153,"nodeType":"InheritanceSpecifier","src":"647:7:6"},{"baseName":{"id":1154,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":5357,"src":"656:6:6"},"id":1155,"nodeType":"InheritanceSpecifier","src":"656:6:6"},{"baseName":{"id":1156,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2202,"src":"664:7:6"},"id":1157,"nodeType":"InheritanceSpecifier","src":"664:7:6"},{"baseName":{"id":1158,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"673:15:6"},"id":1159,"nodeType":"InheritanceSpecifier","src":"673:15:6"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"381:246:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2086,"linearizedBaseContracts":[2086,2840,2202,5357,5369,4566],"name":"ERC721","nameLocation":"637:6:6","nodeType":"ContractDefinition","nodes":[{"id":1162,"libraryName":{"id":1160,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":3173,"src":"701:7:6"},"nodeType":"UsingForDirective","src":"695:26:6","typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1165,"libraryName":{"id":1163,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":4815,"src":"732:7:6"},"nodeType":"UsingForDirective","src":"726:26:6","typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1167,"mutability":"mutable","name":"_name","nameLocation":"791:5:6","nodeType":"VariableDeclaration","scope":2086,"src":"776:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1166,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:6","nodeType":"VariableDeclaration","scope":2086,"src":"823:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1173,"mutability":"mutable","name":"_owners","nameLocation":"934:7:6","nodeType":"VariableDeclaration","scope":2086,"src":"898:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1172,"keyType":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1177,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:6","nodeType":"VariableDeclaration","scope":2086,"src":"992:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1176,"keyType":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1181,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:6","nodeType":"VariableDeclaration","scope":2086,"src":"1093:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1180,"keyType":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1187,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:6","nodeType":"VariableDeclaration","scope":2086,"src":"1199:71:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1186,"keyType":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1185,"keyType":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1184,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1203,"nodeType":"Block","src":"1446:57:6","statements":[{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1195,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"1456:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1196,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1464:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1198,"nodeType":"ExpressionStatement","src":"1456:13:6"},{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1199,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1200,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"1489:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1202,"nodeType":"ExpressionStatement","src":"1479:17:6"}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"1277:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1204,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"name_","nameLocation":"1416:5:6","nodeType":"VariableDeclaration","scope":1204,"src":"1402:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1189,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:6","nodeType":"VariableDeclaration","scope":1204,"src":"1423:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:6"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"1446:0:6"},"scope":2086,"src":"1390:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5356,5368],"body":{"id":1234,"nodeType":"Block","src":"1678:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1707:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1217,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"1727:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2202_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2202_$","typeString":"type(contract IERC721)"}],"id":1216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2202","typeString":"type(contract IERC721)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1221,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1763:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1223,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"1783:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2840_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2840_$","typeString":"type(contract IERC721Metadata)"}],"id":1222,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2840","typeString":"type(contract IERC721Metadata)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1230,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1851:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1228,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2086_$","typeString":"type(contract super ERC721)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5356,"src":"1827:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1214,"id":1233,"nodeType":"Return","src":"1688:175:6"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"1509:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1235,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:6","nodeType":"FunctionDefinition","overrides":{"id":1211,"nodeType":"OverrideSpecifier","overrides":[{"id":1209,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":5357,"src":"1646:6:6"},{"id":1210,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5369,"src":"1654:7:6"}],"src":"1637:25:6"},"parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:6","nodeType":"VariableDeclaration","scope":1235,"src":"1597:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1206,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:6"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"1672:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1212,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:6"},"scope":2086,"src":"1570:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2127],"body":{"id":1258,"nodeType":"Block","src":"2010:123:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"2028:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:6","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"2020:73:6"},{"expression":{"baseExpression":{"id":1254,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"2110:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1256,"indexExpression":{"id":1255,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"2120:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1243,"id":1257,"nodeType":"Return","src":"2103:23:6"}]},"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"1876:48:6","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:6","nodeType":"FunctionDefinition","overrides":{"id":1240,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:6"},"parameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"owner","nameLocation":"1956:5:6","nodeType":"VariableDeclaration","scope":1259,"src":"1948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:6"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"2001:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:6"},"scope":2086,"src":"1929:204:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2135],"body":{"id":1286,"nodeType":"Block","src":"2271:138:6","statements":[{"assignments":[1269],"declarations":[{"constant":false,"id":1269,"mutability":"mutable","name":"owner","nameLocation":"2289:5:6","nodeType":"VariableDeclaration","scope":1286,"src":"2281:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1273,"initialValue":{"arguments":[{"id":1271,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"2306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2297:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1275,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2332:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:6","typeDescriptions":{}}},"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"ExpressionStatement","src":"2324:56:6"},{"expression":{"id":1284,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2397:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1267,"id":1285,"nodeType":"Return","src":"2390:12:6"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"2139:46:6","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:6","nodeType":"FunctionDefinition","overrides":{"id":1264,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:6"},"parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:6","nodeType":"VariableDeclaration","scope":1287,"src":"2207:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:6"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"2262:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:6"},"scope":2086,"src":"2190:219:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2825],"body":{"id":1296,"nodeType":"Block","src":"2540:29:6","statements":[{"expression":{"id":1294,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2557:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1293,"id":1295,"nodeType":"Return","src":"2550:12:6"}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"2415:51:6","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:6","nodeType":"FunctionDefinition","overrides":{"id":1290,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:6"},"parameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"2484:2:6"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"2525:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1291,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:6"},"scope":2086,"src":"2471:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2831],"body":{"id":1306,"nodeType":"Block","src":"2704:31:6","statements":[{"expression":{"id":1304,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2721:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1303,"id":1305,"nodeType":"Return","src":"2714:14:6"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"2575:53:6","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:6","nodeType":"FunctionDefinition","overrides":{"id":1300,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:6"},"parameters":{"id":1299,"nodeType":"ParameterList","parameters":[],"src":"2648:2:6"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"2689:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1301,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:6"},"scope":2086,"src":"2633:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2839],"body":{"id":1345,"nodeType":"Block","src":"2889:188:6","statements":[{"expression":{"arguments":[{"id":1317,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"2914:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1316,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"2899:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"ExpressionStatement","src":"2899:23:6"},{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:6","nodeType":"VariableDeclaration","scope":1345,"src":"2933:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1320,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1324,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1322,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2957:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1327,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2990:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1325,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:6","typeDescriptions":{}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:6","trueExpression":{"arguments":[{"arguments":[{"id":1336,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3036:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"3045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4698,"src":"3045:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1334,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1332,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:6","typeDescriptions":{}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1315,"id":1344,"nodeType":"Return","src":"2977:93:6"}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"2741:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:6","nodeType":"FunctionDefinition","overrides":{"id":1312,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:6"},"parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:6","nodeType":"VariableDeclaration","scope":1346,"src":"2819:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:6"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1346,"src":"2874:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1313,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:6"},"scope":2086,"src":"2801:276:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1354,"nodeType":"Block","src":"3385:26:6","statements":[{"expression":{"hexValue":"","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1351,"id":1353,"nodeType":"Return","src":"3395:9:6"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"3083:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:6","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[],"src":"3336:2:6"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1355,"src":"3370:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1349,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:6"},"scope":2086,"src":"3319:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2175],"body":{"id":1397,"nodeType":"Block","src":"3538:336:6","statements":[{"assignments":[1365],"declarations":[{"constant":false,"id":1365,"mutability":"mutable","name":"owner","nameLocation":"3556:5:6","nodeType":"VariableDeclaration","scope":1397,"src":"3548:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[{"id":1368,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3579:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1366,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"3564:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"3564:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"3605:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"3611:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"3597:57:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1379,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3686:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1381,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"3702:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1384,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"3728:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1385,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3735:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1383,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"3711:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"3665:170:6"},{"expression":{"arguments":[{"id":1393,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"3855:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1394,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"3846:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"ExpressionStatement","src":"3846:21:6"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"3417:46:6","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1398,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:6","nodeType":"FunctionDefinition","overrides":{"id":1362,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:6"},"parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"to","nameLocation":"3493:2:6","nodeType":"VariableDeclaration","scope":1398,"src":"3485:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:6","nodeType":"VariableDeclaration","scope":1398,"src":"3497:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:6"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"3538:0:6"},"scope":2086,"src":"3468:406:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2191],"body":{"id":1415,"nodeType":"Block","src":"4020:82:6","statements":[{"expression":{"arguments":[{"id":1408,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1407,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4030:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"4030:23:6"},{"expression":{"baseExpression":{"id":1411,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4071:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1413,"indexExpression":{"id":1412,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"4087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1406,"id":1414,"nodeType":"Return","src":"4064:31:6"}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"3880:50:6","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:6","nodeType":"FunctionDefinition","overrides":{"id":1403,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:6"},"parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:6","nodeType":"VariableDeclaration","scope":1416,"src":"3956:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:6"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"4011:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:6"},"scope":2086,"src":"3935:167:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2183],"body":{"id":1432,"nodeType":"Block","src":"4253:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1426,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4282:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4296:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1429,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"4306:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1425,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4263:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"ExpressionStatement","src":"4263:52:6"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"4108:56:6","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:6","nodeType":"FunctionDefinition","overrides":{"id":1423,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:6"},"parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"operator","nameLocation":"4204:8:6","nodeType":"VariableDeclaration","scope":1433,"src":"4196:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"approved","nameLocation":"4219:8:6","nodeType":"VariableDeclaration","scope":1433,"src":"4214:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1420,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:6"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"4253:0:6"},"scope":2086,"src":"4169:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2201],"body":{"id":1450,"nodeType":"Block","src":"4491:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1444,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"4508:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1446,"indexExpression":{"id":1445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"4527:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1448,"indexExpression":{"id":1447,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4534:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1443,"id":1449,"nodeType":"Return","src":"4501:42:6"}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"4328:55:6","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:6","nodeType":"FunctionDefinition","overrides":{"id":1440,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:6"},"parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"owner","nameLocation":"4422:5:6","nodeType":"VariableDeclaration","scope":1451,"src":"4414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"operator","nameLocation":"4437:8:6","nodeType":"VariableDeclaration","scope":1451,"src":"4429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:6"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"4485:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1441,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:6"},"scope":2086,"src":"4388:162:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2167],"body":{"id":1477,"nodeType":"Block","src":"4731:207:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4820:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4834:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4801:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"4793:99:6"},{"expression":{"arguments":[{"id":1472,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"4913:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"4919:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"4923:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1471,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4903:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"ExpressionStatement","src":"4903:28:6"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"4556:51:6","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:6","nodeType":"FunctionDefinition","overrides":{"id":1460,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:6"},"parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"from","nameLocation":"4651:4:6","nodeType":"VariableDeclaration","scope":1478,"src":"4643:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"to","nameLocation":"4673:2:6","nodeType":"VariableDeclaration","scope":1478,"src":"4665:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:6","nodeType":"VariableDeclaration","scope":1478,"src":"4685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:6"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[],"src":"4731:0:6"},"scope":2086,"src":"4612:326:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2157],"body":{"id":1496,"nodeType":"Block","src":"5127:56:6","statements":[{"expression":{"arguments":[{"id":1490,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5154:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"5160:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5164:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1489,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1497,1527],"referencedDeclaration":1527,"src":"5137:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1495,"nodeType":"ExpressionStatement","src":"5137:39:6"}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"4944:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:6","nodeType":"FunctionDefinition","overrides":{"id":1487,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:6"},"parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"from","nameLocation":"5047:4:6","nodeType":"VariableDeclaration","scope":1497,"src":"5039:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"to","nameLocation":"5069:2:6","nodeType":"VariableDeclaration","scope":1497,"src":"5061:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:6","nodeType":"VariableDeclaration","scope":1497,"src":"5081:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:6"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[],"src":"5127:0:6"},"scope":2086,"src":"5004:179:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2147],"body":{"id":1526,"nodeType":"Block","src":"5399:164:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1512,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"5436:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"5450:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5417:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"ExpressionStatement","src":"5409:99:6"},{"expression":{"arguments":[{"id":1520,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"5532:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1521,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"5538:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1522,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"5542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1523,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"5551:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1519,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5518:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"ExpressionStatement","src":"5518:38:6"}]},"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"5189:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:6","nodeType":"FunctionDefinition","overrides":{"id":1508,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:6"},"parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"from","nameLocation":"5292:4:6","nodeType":"VariableDeclaration","scope":1527,"src":"5284:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"to","nameLocation":"5314:2:6","nodeType":"VariableDeclaration","scope":1527,"src":"5306:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:6","nodeType":"VariableDeclaration","scope":1527,"src":"5326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"data","nameLocation":"5364:4:6","nodeType":"VariableDeclaration","scope":1527,"src":"5351:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:6"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[],"src":"5399:0:6"},"scope":2086,"src":"5249:314:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1555,"nodeType":"Block","src":"6564:165:6","statements":[{"expression":{"arguments":[{"id":1540,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"6584:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1541,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"6590:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"6594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1539,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6574:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1544,"nodeType":"ExpressionStatement","src":"6574:28:6"},{"expression":{"arguments":[{"arguments":[{"id":1547,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"6643:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"6649:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"6653:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"6662:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1546,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6620:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1554,"nodeType":"ExpressionStatement","src":"6612:110:6"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"5569:850:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:6","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"from","nameLocation":"6464:4:6","nodeType":"VariableDeclaration","scope":1556,"src":"6456:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"to","nameLocation":"6486:2:6","nodeType":"VariableDeclaration","scope":1556,"src":"6478:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:6","nodeType":"VariableDeclaration","scope":1556,"src":"6498:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"data","nameLocation":"6536:4:6","nodeType":"VariableDeclaration","scope":1556,"src":"6523:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1535,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:6"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[],"src":"6564:0:6"},"scope":2086,"src":"6424:305:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1568,"nodeType":"Block","src":"6913:40:6","statements":[{"expression":{"baseExpression":{"id":1564,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"6930:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1566,"indexExpression":{"id":1565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6938:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1563,"id":1567,"nodeType":"Return","src":"6923:23:6"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"6735:98:6","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1569,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:6","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:6","nodeType":"VariableDeclaration","scope":1569,"src":"6856:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:6"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"6904:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:6"},"scope":2086,"src":"6838:115:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"7327:55:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1578,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"7353:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1577,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"7344:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:6","typeDescriptions":{}}},"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1576,"id":1585,"nodeType":"Return","src":"7337:38:6"}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"6959:292:6","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:6","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:6","nodeType":"VariableDeclaration","scope":1587,"src":"7273:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:6"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"7321:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1574,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:6"},"scope":2086,"src":"7256:126:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"7639:162:6","statements":[{"assignments":[1598],"declarations":[{"constant":false,"id":1598,"mutability":"mutable","name":"owner","nameLocation":"7657:5:6","nodeType":"VariableDeclaration","scope":1620,"src":"7649:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1603,"initialValue":{"arguments":[{"id":1601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"7680:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1599,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"7665:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"7665:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1604,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"7706:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1605,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"7717:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1608,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"7743:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"7750:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1607,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"7726:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1613,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"7774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1612,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"7762:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1615,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"7786:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1596,"id":1619,"nodeType":"Return","src":"7698:96:6"}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"7388:147:6","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:6","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"spender","nameLocation":"7576:7:6","nodeType":"VariableDeclaration","scope":1621,"src":"7568:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:6","nodeType":"VariableDeclaration","scope":1621,"src":"7585:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:6"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"7633:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1594,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:6"},"scope":2086,"src":"7540:261:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1635,"nodeType":"Block","src":"8196:43:6","statements":[{"expression":{"arguments":[{"id":1630,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"8216:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"8220:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1629,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1636,1665],"referencedDeclaration":1665,"src":"8206:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"ExpressionStatement","src":"8206:26:6"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"7807:319:6","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1636,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:6","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"to","nameLocation":"8158:2:6","nodeType":"VariableDeclaration","scope":1636,"src":"8150:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:6","nodeType":"VariableDeclaration","scope":1636,"src":"8162:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:6"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"8196:0:6"},"scope":2086,"src":"8131:108:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"8574:195:6","statements":[{"expression":{"arguments":[{"id":1647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"8590:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1648,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1646,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"8584:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"ExpressionStatement","src":"8584:18:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:6","typeDescriptions":{}}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"8668:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8672:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1659,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8681:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1652,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"8633:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1663,"nodeType":"ExpressionStatement","src":"8612:150:6"}]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"8245:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:6","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"to","nameLocation":"8496:2:6","nodeType":"VariableDeclaration","scope":1665,"src":"8488:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:6","nodeType":"VariableDeclaration","scope":1665,"src":"8508:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"data","nameLocation":"8546:4:6","nodeType":"VariableDeclaration","scope":1665,"src":"8533:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1642,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:6"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"8574:0:6"},"scope":2086,"src":"8460:309:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"9152:859:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1674,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"9170:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:6","typeDescriptions":{}}},"id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1682,"nodeType":"ExpressionStatement","src":"9162:61:6"},{"expression":{"arguments":[{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:6","subExpression":{"arguments":[{"id":1685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9250:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1684,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"9242:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"ExpressionStatement","src":"9233:58:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:6","typeDescriptions":{}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1696,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"9335:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1691,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"9302:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"ExpressionStatement","src":"9302:48:6"},{"expression":{"arguments":[{"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:6","subExpression":{"arguments":[{"id":1703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9454:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1702,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"9446:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"ExpressionStatement","src":"9437:58:6"},{"id":1715,"nodeType":"UncheckedBlock","src":"9506:360:6","statements":[{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1709,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"9837:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1711,"indexExpression":{"id":1710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"9847:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1714,"nodeType":"ExpressionStatement","src":"9837:18:6"}]},{"expression":{"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1716,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9876:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1718,"indexExpression":{"id":1717,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9884:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"9895:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1721,"nodeType":"ExpressionStatement","src":"9876:21:6"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:6","typeDescriptions":{}}},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"9934:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1728,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9938:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1722,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"9913:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1730,"nodeType":"EmitStatement","src":"9908:38:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:6","typeDescriptions":{}}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"9989:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9993:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1731,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"9957:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"ExpressionStatement","src":"9957:47:6"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"8775:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:6","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"to","nameLocation":"9114:2:6","nodeType":"VariableDeclaration","scope":1742,"src":"9106:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:6","nodeType":"VariableDeclaration","scope":1742,"src":"9118:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:6"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"9152:0:6"},"scope":2086,"src":"9091:920:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1808,"nodeType":"Block","src":"10386:713:6","statements":[{"assignments":[1749],"declarations":[{"constant":false,"id":1749,"mutability":"mutable","name":"owner","nameLocation":"10404:5:6","nodeType":"VariableDeclaration","scope":1808,"src":"10396:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1754,"initialValue":{"arguments":[{"id":1752,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"10427:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1750,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"10412:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"10412:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:6"},{"expression":{"arguments":[{"id":1756,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"10467:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:6","typeDescriptions":{}}},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1761,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"10486:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1755,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"10446:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"10446:51:6"},{"expression":{"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1765,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"10599:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1768,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"10622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1766,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"10607:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"10607:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1771,"nodeType":"ExpressionStatement","src":"10599:31:6"},{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:6","subExpression":{"baseExpression":{"id":1772,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"10675:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1774,"indexExpression":{"id":1773,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"10691:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1776,"nodeType":"ExpressionStatement","src":"10668:31:6"},{"id":1783,"nodeType":"UncheckedBlock","src":"10710:237:6","statements":[{"expression":{"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1777,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"10915:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1779,"indexExpression":{"id":1778,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"10925:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1782,"nodeType":"ExpressionStatement","src":"10915:21:6"}]},{"expression":{"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:6","subExpression":{"baseExpression":{"id":1784,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"10963:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1786,"indexExpression":{"id":1785,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"10971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"ExpressionStatement","src":"10956:23:6"},{"eventCall":{"arguments":[{"id":1790,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"11004:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:6","typeDescriptions":{}}},"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"11023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1789,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"10995:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1797,"nodeType":"EmitStatement","src":"10990:41:6"},{"expression":{"arguments":[{"id":1799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"11062:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:6","typeDescriptions":{}}},"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1804,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"11081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1798,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"11042:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1807,"nodeType":"ExpressionStatement","src":"11042:50:6"}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"10017:315:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:6","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:6","nodeType":"VariableDeclaration","scope":1809,"src":"10352:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:6"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"10386:0:6"},"scope":2086,"src":"10337:762:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"11532:1124:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1822,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"11565:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1820,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"11550:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"11550:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1824,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"11577:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1828,"nodeType":"ExpressionStatement","src":"11542:81:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"11641:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:6","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1838,"nodeType":"ExpressionStatement","src":"11633:65:6"},{"expression":{"arguments":[{"id":1840,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"11730:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1841,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"11736:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"11740:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1839,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"11709:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"ExpressionStatement","src":"11709:42:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"11866:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1847,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"11851:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"11851:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"11878:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"ExpressionStatement","src":"11843:81:6"},{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:6","subExpression":{"baseExpression":{"id":1856,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"11993:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1858,"indexExpression":{"id":1857,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"12009:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"11986:31:6"},{"id":1873,"nodeType":"UncheckedBlock","src":"12028:496:6","statements":[{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1861,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"12461:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1863,"indexExpression":{"id":1862,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"12471:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"12461:20:6"},{"expression":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1867,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"12495:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1869,"indexExpression":{"id":1868,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12505:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"nodeType":"ExpressionStatement","src":"12495:18:6"}]},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1874,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"12533:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1876,"indexExpression":{"id":1875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"12541:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1877,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12552:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1879,"nodeType":"ExpressionStatement","src":"12533:21:6"},{"eventCall":{"arguments":[{"id":1881,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"12579:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1882,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12585:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"12589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"12570:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"EmitStatement","src":"12565:32:6"},{"expression":{"arguments":[{"id":1887,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"12628:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1888,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"12634:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1889,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"12638:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1886,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12608:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"ExpressionStatement","src":"12608:41:6"}]},"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"11105:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:6","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"from","nameLocation":"11459:4:6","nodeType":"VariableDeclaration","scope":1894,"src":"11451:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"to","nameLocation":"11481:2:6","nodeType":"VariableDeclaration","scope":1894,"src":"11473:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:6","nodeType":"VariableDeclaration","scope":1894,"src":"11493:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:6"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[],"src":"11532:0:6"},"scope":2086,"src":"11423:1233:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1917,"nodeType":"Block","src":"12832:107:6","statements":[{"expression":{"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1902,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"12842:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1904,"indexExpression":{"id":1903,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"12858:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"12869:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1907,"nodeType":"ExpressionStatement","src":"12842:29:6"},{"eventCall":{"arguments":[{"arguments":[{"id":1911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"12910:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1909,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"12895:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1287,"src":"12895:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"12920:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"12924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1908,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"12886:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"EmitStatement","src":"12881:51:6"}]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"12662:101:6","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:6","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"to","nameLocation":"12794:2:6","nodeType":"VariableDeclaration","scope":1918,"src":"12786:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:6","nodeType":"VariableDeclaration","scope":1918,"src":"12798:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:6"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[],"src":"12832:0:6"},"scope":2086,"src":"12768:171:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1949,"nodeType":"Block","src":"13198:184:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"13216:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1930,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"13225:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"13208:55:6"},{"expression":{"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1935,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"13273:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1938,"indexExpression":{"id":1936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"13292:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1939,"indexExpression":{"id":1937,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"13299:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1940,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"13311:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1942,"nodeType":"ExpressionStatement","src":"13273:46:6"},{"eventCall":{"arguments":[{"id":1944,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"13349:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1945,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"13356:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1946,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"13366:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1943,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"13334:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1948,"nodeType":"EmitStatement","src":"13329:46:6"}]},"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"12945:125:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1950,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:6","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"owner","nameLocation":"13120:5:6","nodeType":"VariableDeclaration","scope":1950,"src":"13112:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"operator","nameLocation":"13143:8:6","nodeType":"VariableDeclaration","scope":1950,"src":"13135:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"approved","nameLocation":"13166:8:6","nodeType":"VariableDeclaration","scope":1950,"src":"13161:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1924,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:6"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[],"src":"13198:0:6"},"scope":2086,"src":"13075:307:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1963,"nodeType":"Block","src":"13529:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1958,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"13555:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1957,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"13547:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"ExpressionStatement","src":"13539:53:6"}]},"documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"13388:73:6","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:6","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:6","nodeType":"VariableDeclaration","scope":1964,"src":"13490:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:6"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"13529:0:6"},"scope":2086,"src":"13466:133:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"14306:676:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1978,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"14320:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"14320:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2023,"nodeType":"Block","src":"14940:36:6","statements":[{"expression":{"hexValue":"74727565","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1977,"id":2022,"nodeType":"Return","src":"14954:11:6"}]},"id":2024,"nodeType":"IfStatement","src":"14316:660:6","trueBody":{"id":2020,"nodeType":"Block","src":"14337:597:6","statements":[{"clauses":[{"block":{"id":2000,"nodeType":"Block","src":"14451:91:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"14476:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1995,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"14486:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2220_$","typeString":"type(contract IERC721Receiver)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"14486:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1977,"id":1999,"nodeType":"Return","src":"14469:58:6"}]},"errorName":"","id":2001,"nodeType":"TryCatchClause","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"retval","nameLocation":"14443:6:6","nodeType":"VariableDeclaration","scope":2001,"src":"14436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1991,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:6"},"src":"14427:115:6"},{"block":{"id":2017,"nodeType":"Block","src":"14571:353:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2005,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"14593:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2015,"nodeType":"Block","src":"14720:190:6","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:6"},"nodeType":"YulFunctionCall","src":"14839:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:6"},"nodeType":"YulFunctionCall","src":"14856:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:6"},"nodeType":"YulFunctionCall","src":"14832:38:6"},"nodeType":"YulExpressionStatement","src":"14832:38:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2003,"isOffset":false,"isSlot":false,"src":"14847:6:6","valueSize":1},{"declaration":2003,"isOffset":false,"isSlot":false,"src":"14862:6:6","valueSize":1}],"id":2014,"nodeType":"InlineAssembly","src":"14797:95:6"}]},"id":2016,"nodeType":"IfStatement","src":"14589:321:6","trueBody":{"id":2013,"nodeType":"Block","src":"14613:101:6","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2009,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"ExpressionStatement","src":"14635:60:6"}]}}]},"errorName":"","id":2018,"nodeType":"TryCatchClause","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"reason","nameLocation":"14563:6:6","nodeType":"VariableDeclaration","scope":2018,"src":"14550:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2002,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:6"},"src":"14543:381:6"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1985,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"14392:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"14406:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1988,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"14412:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1989,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"14421:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1982,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"14371:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1981,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"14355:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2220_$","typeString":"type(contract IERC721Receiver)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2220","typeString":"contract IERC721Receiver"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2219,"src":"14355:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2019,"nodeType":"TryStatement","src":"14351:573:6"}]}}]},"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"13605:541:6","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:6","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"from","nameLocation":"14200:4:6","nodeType":"VariableDeclaration","scope":2026,"src":"14192:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"to","nameLocation":"14222:2:6","nodeType":"VariableDeclaration","scope":2026,"src":"14214:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:6","nodeType":"VariableDeclaration","scope":2026,"src":"14234:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"data","nameLocation":"14272:4:6","nodeType":"VariableDeclaration","scope":2026,"src":"14259:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:6"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"14300:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1975,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:6"},"scope":2086,"src":"14151:831:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2071,"nodeType":"Block","src":"15856:238:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2038,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"15870:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15882:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15870:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2070,"nodeType":"IfStatement","src":"15866:222:6","trueBody":{"id":2069,"nodeType":"Block","src":"15885:203:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2041,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"15903:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15919:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15911:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"15911:7:6","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15911:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15903:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"IfStatement","src":"15899:85:6","trueBody":{"id":2053,"nodeType":"Block","src":"15923:61:6","statements":[{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2047,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15941:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2049,"indexExpression":{"id":2048,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"15951:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15941:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2050,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"15960:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15941:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"15941:28:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"16001:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16007:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2056,"name":"address","nodeType":"ElementaryTypeName","src":"16007:7:6","typeDescriptions":{}}},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16007:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16001:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2068,"nodeType":"IfStatement","src":"15997:81:6","trueBody":{"id":2067,"nodeType":"Block","src":"16019:59:6","statements":[{"expression":{"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2061,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"16037:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2063,"indexExpression":{"id":2062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"16047:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16037:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2064,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"16054:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16037:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2066,"nodeType":"ExpressionStatement","src":"16037:26:6"}]}}]}}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"14988:705:6","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:6","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"from","nameLocation":"15745:4:6","nodeType":"VariableDeclaration","scope":2072,"src":"15737:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"to","nameLocation":"15767:2:6","nodeType":"VariableDeclaration","scope":2072,"src":"15759:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"15779:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"batchSize","nameLocation":"15823:9:6","nodeType":"VariableDeclaration","scope":2072,"src":"15815:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"15815:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:111:6"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[],"src":"15856:0:6"},"scope":2086,"src":"15698:396:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"16951:2:6","statements":[]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"16100:695:6","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16809:19:6","nodeType":"FunctionDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"from","nameLocation":"16846:4:6","nodeType":"VariableDeclaration","scope":2085,"src":"16838:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"16838:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"to","nameLocation":"16868:2:6","nodeType":"VariableDeclaration","scope":2085,"src":"16860:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"16860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"firstTokenId","nameLocation":"16888:12:6","nodeType":"VariableDeclaration","scope":2085,"src":"16880:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"16880:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"batchSize","nameLocation":"16918:9:6","nodeType":"VariableDeclaration","scope":2085,"src":"16910:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16828:105:6"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[],"src":"16951:0:6"},"scope":2086,"src":"16800:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2087,"src":"628:16327:6","usedErrors":[]}],"src":"107:16849:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[5369],"IERC721":[2202]},"id":2203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2203,"sourceUnit":5370,"src":"133:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2091,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5369,"src":"271:7:7"},"id":2092,"nodeType":"InheritanceSpecifier","src":"271:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"182:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2202,"linearizedBaseContracts":[2202,5369],"name":"IERC721","nameLocation":"260:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"285:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2101,"name":"Transfer","nameLocation":"384:8:7","nodeType":"EventDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:7","nodeType":"VariableDeclaration","scope":2101,"src":"393:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:7","nodeType":"VariableDeclaration","scope":2101,"src":"415:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2099,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:7","nodeType":"VariableDeclaration","scope":2101,"src":"435:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:7"},"src":"378:82:7"},{"anonymous":false,"documentation":{"id":2102,"nodeType":"StructuredDocumentation","src":"466:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2110,"name":"Approval","nameLocation":"571:8:7","nodeType":"EventDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:7","nodeType":"VariableDeclaration","scope":2110,"src":"580:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2106,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:7","nodeType":"VariableDeclaration","scope":2110,"src":"603:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2108,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:7","nodeType":"VariableDeclaration","scope":2110,"src":"629:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:7"},"src":"565:89:7"},{"anonymous":false,"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"660:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2119,"name":"ApprovalForAll","nameLocation":"788:14:7","nodeType":"EventDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:7","nodeType":"VariableDeclaration","scope":2119,"src":"803:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2115,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:7","nodeType":"VariableDeclaration","scope":2119,"src":"826:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2117,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:7","nodeType":"VariableDeclaration","scope":2119,"src":"852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2116,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:7"},"src":"782:85:7"},{"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"873:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2127,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:7","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"owner","nameLocation":"981:5:7","nodeType":"VariableDeclaration","scope":2127,"src":"973:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:7"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"balance","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":2127,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:7"},"scope":2202,"src":"954:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"1034:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2135,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:7","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:7","nodeType":"VariableDeclaration","scope":2135,"src":"1187:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:7"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"owner","nameLocation":"1235:5:7","nodeType":"VariableDeclaration","scope":2135,"src":"1227:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:7"},"scope":2202,"src":"1170:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"1248:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2147,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:7","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"from","nameLocation":"1852:4:7","nodeType":"VariableDeclaration","scope":2147,"src":"1844:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"to","nameLocation":"1874:2:7","nodeType":"VariableDeclaration","scope":2147,"src":"1866:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:7","nodeType":"VariableDeclaration","scope":2147,"src":"1886:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"data","nameLocation":"1926:4:7","nodeType":"VariableDeclaration","scope":2147,"src":"1911:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2143,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:7"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[],"src":"1945:0:7"},"scope":2202,"src":"1809:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"1952:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2157,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:7","nodeType":"FunctionDefinition","parameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":2157,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2152,"mutability":"mutable","name":"to","nameLocation":"2709:2:7","nodeType":"VariableDeclaration","scope":2157,"src":"2701:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2154,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:7","nodeType":"VariableDeclaration","scope":2157,"src":"2721:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:7"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"2751:0:7"},"scope":2202,"src":"2644:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"2758:732:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2167,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:7","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"from","nameLocation":"3534:4:7","nodeType":"VariableDeclaration","scope":2167,"src":"3526:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"to","nameLocation":"3556:2:7","nodeType":"VariableDeclaration","scope":2167,"src":"3548:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:7","nodeType":"VariableDeclaration","scope":2167,"src":"3568:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:7"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"3598:0:7"},"scope":2202,"src":"3495:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"3605:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2175,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:7","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"to","nameLocation":"4087:2:7","nodeType":"VariableDeclaration","scope":2175,"src":"4079:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:7","nodeType":"VariableDeclaration","scope":2175,"src":"4091:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:7"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[],"src":"4116:0:7"},"scope":2202,"src":"4062:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"4123:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2183,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:7","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"operator","nameLocation":"4472:8:7","nodeType":"VariableDeclaration","scope":2183,"src":"4464:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:7","nodeType":"VariableDeclaration","scope":2183,"src":"4482:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2179,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:7"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[],"src":"4506:0:7"},"scope":2202,"src":"4437:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"4513:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2191,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:7","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:7","nodeType":"VariableDeclaration","scope":2191,"src":"4678:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:7"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"operator","nameLocation":"4726:8:7","nodeType":"VariableDeclaration","scope":2191,"src":"4718:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2188,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:7"},"scope":2202,"src":"4657:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"4742:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2201,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:7","nodeType":"FunctionDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"owner","nameLocation":"4919:5:7","nodeType":"VariableDeclaration","scope":2201,"src":"4911:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"operator","nameLocation":"4934:8:7","nodeType":"VariableDeclaration","scope":2201,"src":"4926:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:7"},"returnParameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2201,"src":"4967:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2198,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:7"},"scope":2202,"src":"4885:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2203,"src":"250:4725:7","usedErrors":[]}],"src":"108:4868:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2220]},"id":2221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2204,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"141:152:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2220,"linearizedBaseContracts":[2220],"name":"IERC721Receiver","nameLocation":"304:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"326:493:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2219,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:8","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"operator","nameLocation":"867:8:8","nodeType":"VariableDeclaration","scope":2219,"src":"859:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"from","nameLocation":"893:4:8","nodeType":"VariableDeclaration","scope":2219,"src":"885:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:8","nodeType":"VariableDeclaration","scope":2219,"src":"907:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"data","nameLocation":"947:4:8","nodeType":"VariableDeclaration","scope":2219,"src":"932:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2213,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:8"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2216,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:8"},"scope":2220,"src":"824:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2221,"src":"294:692:8","usedErrors":[]}],"src":"116:871:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Address":[3173],"Context":[4566],"ERC165":[5357],"ERC721":[2086],"ERC721Burnable":[2250],"IERC165":[5369],"IERC721":[2202],"IERC721Metadata":[2840],"IERC721Receiver":[2220],"Math":[6234],"Strings":[4815]},"id":2251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2251,"sourceUnit":2087,"src":"151:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2251,"sourceUnit":4567,"src":"175:36:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2226,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4566,"src":"342:7:9"},"id":2227,"nodeType":"InheritanceSpecifier","src":"342:7:9"},{"baseName":{"id":2228,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"351:6:9"},"id":2229,"nodeType":"InheritanceSpecifier","src":"351:6:9"}],"canonicalName":"ERC721Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"213:92:9","text":" @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."},"fullyImplemented":false,"id":2250,"linearizedBaseContracts":[2250,2086,2840,2202,5357,5369,4566],"name":"ERC721Burnable","nameLocation":"324:14:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2248,"nodeType":"Block","src":"577:192:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2237,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"666:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"666:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2239,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"680:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2236,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"647:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"647:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"690:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":2235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2243,"nodeType":"ExpressionStatement","src":"639:99:9"},{"expression":{"arguments":[{"id":2245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"754:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2244,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"748:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"748:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2247,"nodeType":"ExpressionStatement","src":"748:14:9"}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"364:162:9","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":2249,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"540:4:9","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"tokenId","nameLocation":"553:7:9","nodeType":"VariableDeclaration","scope":2249,"src":"545:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"544:17:9"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"577:0:9"},"scope":2250,"src":"531:238:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2251,"src":"306:465:9","usedErrors":[]}],"src":"126:646:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[3173],"Context":[4566],"ERC165":[5357],"ERC721":[2086],"ERC721Enumerable":[2604],"IERC165":[5369],"IERC721":[2202],"IERC721Enumerable":[2813],"IERC721Metadata":[2840],"IERC721Receiver":[2220],"Math":[6234],"Strings":[4815]},"id":2605,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2252,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2605,"sourceUnit":2087,"src":"153:23:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":2254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2605,"sourceUnit":2814,"src":"177:33:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2256,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"450:6:10"},"id":2257,"nodeType":"InheritanceSpecifier","src":"450:6:10"},{"baseName":{"id":2258,"name":"IERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":2813,"src":"458:17:10"},"id":2259,"nodeType":"InheritanceSpecifier","src":"458:17:10"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"212:199:10","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":false,"id":2604,"linearizedBaseContracts":[2604,2813,2086,2840,2202,5357,5369,4566],"name":"ERC721Enumerable","nameLocation":"430:16:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2265,"mutability":"mutable","name":"_ownedTokens","nameLocation":"591:12:10","nodeType":"VariableDeclaration","scope":2604,"src":"535:68:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":2264,"keyType":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"535:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":2263,"keyType":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"554:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2269,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"709:17:10","nodeType":"VariableDeclaration","scope":2604,"src":"673:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2268,"keyType":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"673:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2272,"mutability":"mutable","name":"_allTokens","nameLocation":"805:10:10","nodeType":"VariableDeclaration","scope":2604,"src":"787:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"nodeType":"ArrayTypeName","src":"787:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":2276,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"922:15:10","nodeType":"VariableDeclaration","scope":2604,"src":"886:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2275,"keyType":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"886:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[1235,5368],"body":{"id":2299,"nodeType":"Block","src":"1113:114:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1130:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2289,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1150:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2813_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2813_$","typeString":"type(contract IERC721Enumerable)"}],"id":2288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1145:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1145:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$2813","typeString":"type(contract IERC721Enumerable)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1145:35:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1130:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2295,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1208:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2293,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1184:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$2604_$","typeString":"type(contract super ERC721Enumerable)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"1184:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1184:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1130:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2286,"id":2298,"nodeType":"Return","src":"1123:97:10"}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"944:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2300,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1014:17:10","nodeType":"FunctionDefinition","overrides":{"id":2283,"nodeType":"OverrideSpecifier","overrides":[{"id":2281,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5369,"src":"1081:7:10"},{"id":2282,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1090:6:10"}],"src":"1072:25:10"},"parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"interfaceId","nameLocation":"1039:11:10","nodeType":"VariableDeclaration","scope":2300,"src":"1032:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2278,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1032:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1031:20:10"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2300,"src":"1107:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2284,"name":"bool","nodeType":"ElementaryTypeName","src":"1107:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1106:6:10"},"scope":2604,"src":"1005:222:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2804],"body":{"id":2327,"nodeType":"Block","src":"1412:147:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1430:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":2315,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2313,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"1438:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"1438:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1438:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1430:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1463:45:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":2311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1422:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2320,"nodeType":"ExpressionStatement","src":"1422:87:10"},{"expression":{"baseExpression":{"baseExpression":{"id":2321,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1526:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2323,"indexExpression":{"id":2322,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1539:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1526:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2325,"indexExpression":{"id":2324,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1546:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1526:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2310,"id":2326,"nodeType":"Return","src":"1519:33:10"}]},"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"1233:68:10","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1315:19:10","nodeType":"FunctionDefinition","overrides":{"id":2307,"nodeType":"OverrideSpecifier","overrides":[],"src":"1385:8:10"},"parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"owner","nameLocation":"1343:5:10","nodeType":"VariableDeclaration","scope":2328,"src":"1335:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"index","nameLocation":"1358:5:10","nodeType":"VariableDeclaration","scope":2328,"src":"1350:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1334:30:10"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2328,"src":"1403:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1403:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1402:9:10"},"scope":2604,"src":"1306:253:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2794],"body":{"id":2338,"nodeType":"Block","src":"1700:41:10","statements":[{"expression":{"expression":{"id":2335,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"1717:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1717:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2334,"id":2337,"nodeType":"Return","src":"1710:24:10"}]},"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"1565:60:10","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1639:11:10","nodeType":"FunctionDefinition","overrides":{"id":2331,"nodeType":"OverrideSpecifier","overrides":[],"src":"1673:8:10"},"parameters":{"id":2330,"nodeType":"ParameterList","parameters":[],"src":"1650:2:10"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"1691:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1690:9:10"},"scope":2604,"src":"1630:111:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2812],"body":{"id":2361,"nodeType":"Block","src":"1897:146:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"1915:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2350,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"1923:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$2604_$","typeString":"type(contract ERC721Enumerable)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"1923:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1915:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1955:46:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":2348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1907:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2356,"nodeType":"ExpressionStatement","src":"1907:95:10"},{"expression":{"baseExpression":{"id":2357,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"2019:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2359,"indexExpression":{"id":2358,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"2030:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2019:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2347,"id":2360,"nodeType":"Return","src":"2012:24:10"}]},"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"1747:61:10","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1822:12:10","nodeType":"FunctionDefinition","overrides":{"id":2344,"nodeType":"OverrideSpecifier","overrides":[],"src":"1870:8:10"},"parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"index","nameLocation":"1843:5:10","nodeType":"VariableDeclaration","scope":2362,"src":"1835:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1834:15:10"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2362,"src":"1888:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1887:9:10"},"scope":2604,"src":"1813:230:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2072],"body":{"id":2441,"nodeType":"Block","src":"2273:729:10","statements":[{"expression":{"arguments":[{"id":2378,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2310:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2379,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2316:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2380,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"2320:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2381,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"2334:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2375,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2283:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$2604_$","typeString":"type(contract super ERC721Enumerable)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2072,"src":"2283:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2283:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"2283:61:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"2359:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2371:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2359:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2392,"nodeType":"IfStatement","src":"2355:219:10","trueBody":{"id":2391,"nodeType":"Block","src":"2374:200:10","statements":[{"expression":{"arguments":[{"hexValue":"455243373231456e756d657261626c653a20636f6e7365637574697665207472616e7366657273206e6f7420737570706f72746564","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2507:55:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""},"value":"ERC721Enumerable: consecutive transfers not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""}],"id":2387,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2500:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"ExpressionStatement","src":"2500:63:10"}]}},{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"tokenId","nameLocation":"2592:7:10","nodeType":"VariableDeclaration","scope":2441,"src":"2584:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"initialValue":{"id":2395,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"2602:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2584:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2629:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2637:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"2637:7:10","typeDescriptions":{}}},"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2637:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2629:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2724:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2409,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2732:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2724:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2417,"nodeType":"IfStatement","src":"2720:88:10","trueBody":{"id":2416,"nodeType":"Block","src":"2736:72:10","statements":[{"expression":{"arguments":[{"id":2412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2783:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2413,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2789:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2411,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"2750:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2415,"nodeType":"ExpressionStatement","src":"2750:47:10"}]}},"id":2418,"nodeType":"IfStatement","src":"2625:183:10","trueBody":{"id":2407,"nodeType":"Block","src":"2649:65:10","statements":[{"expression":{"arguments":[{"id":2404,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2403,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2663:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2663:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2406,"nodeType":"ExpressionStatement","src":"2663:40:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2419,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2821:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"2827:7:10","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2821:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2919:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2431,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2925:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2919:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2439,"nodeType":"IfStatement","src":"2915:81:10","trueBody":{"id":2438,"nodeType":"Block","src":"2931:65:10","statements":[{"expression":{"arguments":[{"id":2434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2973:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2435,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2977:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2433,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2945:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2945:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2437,"nodeType":"ExpressionStatement","src":"2945:40:10"}]}},"id":2440,"nodeType":"IfStatement","src":"2817:179:10","trueBody":{"id":2429,"nodeType":"Block","src":"2839:70:10","statements":[{"expression":{"arguments":[{"id":2426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2425,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"2853:36:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2853:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2428,"nodeType":"ExpressionStatement","src":"2853:45:10"}]}}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"2049:58:10","text":" @dev See {ERC721-_beforeTokenTransfer}."},"id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2121:20:10","nodeType":"FunctionDefinition","overrides":{"id":2373,"nodeType":"OverrideSpecifier","overrides":[],"src":"2264:8:10"},"parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"from","nameLocation":"2159:4:10","nodeType":"VariableDeclaration","scope":2442,"src":"2151:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2364,"name":"address","nodeType":"ElementaryTypeName","src":"2151:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"to","nameLocation":"2181:2:10","nodeType":"VariableDeclaration","scope":2442,"src":"2173:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"firstTokenId","nameLocation":"2201:12:10","nodeType":"VariableDeclaration","scope":2442,"src":"2193:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"batchSize","nameLocation":"2231:9:10","nodeType":"VariableDeclaration","scope":2442,"src":"2223:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2141:105:10"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[],"src":"2273:0:10"},"scope":2604,"src":"2112:890:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2471,"nodeType":"Block","src":"3370:143:10","statements":[{"assignments":[2451],"declarations":[{"constant":false,"id":2451,"mutability":"mutable","name":"length","nameLocation":"3388:6:10","nodeType":"VariableDeclaration","scope":2471,"src":"3380:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2456,"initialValue":{"arguments":[{"id":2454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3414:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2452,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"3397:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"3397:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3397:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3380:37:10"},{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2457,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3427:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2460,"indexExpression":{"id":2458,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3440:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3427:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2461,"indexExpression":{"id":2459,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"3444:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3427:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2462,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"3454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3427:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"3427:34:10"},{"expression":{"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2465,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"3471:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2467,"indexExpression":{"id":2466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"3489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3471:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2468,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"3500:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3471:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2470,"nodeType":"ExpressionStatement","src":"3471:35:10"}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"3008:283:10","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3305:27:10","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"to","nameLocation":"3341:2:10","nodeType":"VariableDeclaration","scope":2472,"src":"3333:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"tokenId","nameLocation":"3353:7:10","nodeType":"VariableDeclaration","scope":2472,"src":"3345:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:29:10"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[],"src":"3370:0:10"},"scope":2604,"src":"3296:217:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2491,"nodeType":"Block","src":"3774:95:10","statements":[{"expression":{"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2478,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"3784:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2480,"indexExpression":{"id":2479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3784:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2481,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"3811:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3811:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3784:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2484,"nodeType":"ExpressionStatement","src":"3784:44:10"},{"expression":{"arguments":[{"id":2488,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3854:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2485,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"3838:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3838:15:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2490,"nodeType":"ExpressionStatement","src":"3838:24:10"}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"3519:184:10","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":2492,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3717:31:10","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"tokenId","nameLocation":"3757:7:10","nodeType":"VariableDeclaration","scope":2492,"src":"3749:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"3749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3748:17:10"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[],"src":"3774:0:10"},"scope":2604,"src":"3708:161:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2554,"nodeType":"Block","src":"4567:889:10","statements":[{"assignments":[2501],"declarations":[{"constant":false,"id":2501,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4756:14:10","nodeType":"VariableDeclaration","scope":2554,"src":"4748:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2504,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"4790:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2502,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"4773:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2086_$","typeString":"type(contract ERC721)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"4773:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4773:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4798:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4773:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4748:51:10"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"tokenIndex","nameLocation":"4817:10:10","nodeType":"VariableDeclaration","scope":2554,"src":"4809:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"4809:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2514,"initialValue":{"baseExpression":{"id":2511,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"4830:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2513,"indexExpression":{"id":2512,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"4848:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4830:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4809:47:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"4960:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2516,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"4974:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4960:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2541,"nodeType":"IfStatement","src":"4956:323:10","trueBody":{"id":2540,"nodeType":"Block","src":"4990:289:10","statements":[{"assignments":[2519],"declarations":[{"constant":false,"id":2519,"mutability":"mutable","name":"lastTokenId","nameLocation":"5012:11:10","nodeType":"VariableDeclaration","scope":2540,"src":"5004:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"5004:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2525,"initialValue":{"baseExpression":{"baseExpression":{"id":2520,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5026:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2522,"indexExpression":{"id":2521,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5039:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5026:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2524,"indexExpression":{"id":2523,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"5045:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5026:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5004:56:10"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2526,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5075:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2529,"indexExpression":{"id":2527,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5088:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5075:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2530,"indexExpression":{"id":2528,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"5094:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5075:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2531,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"5108:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5075:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"5075:44:10"},{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2534,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"5191:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2536,"indexExpression":{"id":2535,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"5209:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5191:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2537,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"5224:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5191:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"5191:43:10"}]}},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5365:33:10","subExpression":{"baseExpression":{"id":2542,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"5372:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2544,"indexExpression":{"id":2543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"5390:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5372:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2546,"nodeType":"ExpressionStatement","src":"5365:33:10"},{"expression":{"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5408:41:10","subExpression":{"baseExpression":{"baseExpression":{"id":2547,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5415:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2549,"indexExpression":{"id":2548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5428:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5415:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2551,"indexExpression":{"id":2550,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"5434:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5415:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"ExpressionStatement","src":"5408:41:10"}]},"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"3875:606:10","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":2555,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4495:32:10","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"from","nameLocation":"4536:4:10","nodeType":"VariableDeclaration","scope":2555,"src":"4528:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2494,"name":"address","nodeType":"ElementaryTypeName","src":"4528:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"tokenId","nameLocation":"4550:7:10","nodeType":"VariableDeclaration","scope":2555,"src":"4542:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"4542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4527:31:10"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[],"src":"4567:0:10"},"scope":2604,"src":"4486:970:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2602,"nodeType":"Block","src":"5815:990:10","statements":[{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6001:14:10","nodeType":"VariableDeclaration","scope":2602,"src":"5993:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2567,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2563,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"6018:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6018:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6018:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5993:46:10"},{"assignments":[2569],"declarations":[{"constant":false,"id":2569,"mutability":"mutable","name":"tokenIndex","nameLocation":"6057:10:10","nodeType":"VariableDeclaration","scope":2602,"src":"6049:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2573,"initialValue":{"baseExpression":{"id":2570,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"6070:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2572,"indexExpression":{"id":2571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"6086:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6070:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6049:45:10"},{"assignments":[2575],"declarations":[{"constant":false,"id":2575,"mutability":"mutable","name":"lastTokenId","nameLocation":"6424:11:10","nodeType":"VariableDeclaration","scope":2602,"src":"6416:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2579,"initialValue":{"baseExpression":{"id":2576,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"6438:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2578,"indexExpression":{"id":2577,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6449:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6438:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6416:48:10"},{"expression":{"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2580,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"6475:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2582,"indexExpression":{"id":2581,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"6486:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2583,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"6500:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2585,"nodeType":"ExpressionStatement","src":"6475:36:10"},{"expression":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2586,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"6579:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2588,"indexExpression":{"id":2587,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"6595:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6579:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2589,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"6610:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6579:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2591,"nodeType":"ExpressionStatement","src":"6579:41:10"},{"expression":{"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6741:31:10","subExpression":{"baseExpression":{"id":2592,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"6748:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2594,"indexExpression":{"id":2593,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"6764:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6748:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"ExpressionStatement","src":"6741:31:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2597,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"6782:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"6782:14:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6782:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2601,"nodeType":"ExpressionStatement","src":"6782:16:10"}]},"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"5462:277:10","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5753:36:10","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"tokenId","nameLocation":"5798:7:10","nodeType":"VariableDeclaration","scope":2603,"src":"5790:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:17:10"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[],"src":"5815:0:10"},"scope":2604,"src":"5744:1061:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2605,"src":"412:6395:10","usedErrors":[]}],"src":"128:6680:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[3173],"Context":[4566],"ERC165":[5357],"ERC721":[2086],"ERC721URIStorage":[2729],"IERC165":[5369],"IERC721":[2202],"IERC721Metadata":[2840],"IERC721Receiver":[2220],"Math":[6234],"Strings":[4815]},"id":2730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2606,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2730,"sourceUnit":2087,"src":"153:23:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2609,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"286:6:11"},"id":2610,"nodeType":"InheritanceSpecifier","src":"286:6:11"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"178:69:11","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":2729,"linearizedBaseContracts":[2729,2086,2840,2202,5357,5369,4566],"name":"ERC721URIStorage","nameLocation":"266:16:11","nodeType":"ContractDefinition","nodes":[{"id":2613,"libraryName":{"id":2611,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":4815,"src":"305:7:11"},"nodeType":"UsingForDirective","src":"299:26:11","typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2617,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:11","nodeType":"VariableDeclaration","scope":2729,"src":"370:45:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2616,"keyType":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2615,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1346],"body":{"id":2675,"nodeType":"Block","src":"570:520:11","statements":[{"expression":{"arguments":[{"id":2627,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"595:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2626,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"580:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"ExpressionStatement","src":"580:23:11"},{"assignments":[2631],"declarations":[{"constant":false,"id":2631,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:11","nodeType":"VariableDeclaration","scope":2675,"src":"614:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2630,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2635,"initialValue":{"baseExpression":{"id":2632,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"640:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2634,"indexExpression":{"id":2633,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"651:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:11"},{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"base","nameLocation":"683:4:11","nodeType":"VariableDeclaration","scope":2675,"src":"669:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2640,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2638,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"690:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2643,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"779:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2641,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:11","typeDescriptions":{}}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2651,"nodeType":"IfStatement","src":"769:70:11","trueBody":{"id":2650,"nodeType":"Block","src":"798:41:11","statements":[{"expression":{"id":2648,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"819:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2625,"id":2649,"nodeType":"Return","src":"812:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2654,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"947:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2652,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:11","typeDescriptions":{}}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"937:106:11","trueBody":{"id":2668,"nodeType":"Block","src":"970:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2663,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"1015:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2664,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"1021:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2661,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2659,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:11","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2625,"id":2667,"nodeType":"Return","src":"984:48:11"}]}},{"expression":{"arguments":[{"id":2672,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"1075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2670,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2729_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1346,"src":"1060:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2625,"id":2674,"nodeType":"Return","src":"1053:30:11"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"422:55:11","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:11","nodeType":"FunctionDefinition","overrides":{"id":2622,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:11"},"parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:11","nodeType":"VariableDeclaration","scope":2676,"src":"500:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:11"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2676,"src":"555:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2623,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:11"},"scope":2729,"src":"482:608:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2697,"nodeType":"Block","src":"1318:133:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2686,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"1344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2685,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1336:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":2684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"ExpressionStatement","src":"1328:75:11"},{"expression":{"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2691,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1413:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2693,"indexExpression":{"id":2692,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"1424:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2694,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"1435:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2696,"nodeType":"ExpressionStatement","src":"1413:31:11"}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"1096:136:11","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:11","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:11","nodeType":"VariableDeclaration","scope":2698,"src":"1259:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:11","nodeType":"VariableDeclaration","scope":2698,"src":"1276:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2680,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:11"},"returnParameters":{"id":2683,"nodeType":"ParameterList","parameters":[],"src":"1318:0:11"},"scope":2729,"src":"1237:214:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1809],"body":{"id":2727,"nodeType":"Block","src":"1727:142:11","statements":[{"expression":{"arguments":[{"id":2708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2705,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2729_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1809,"src":"1737:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2710,"nodeType":"ExpressionStatement","src":"1737:20:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":2713,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1778:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2715,"indexExpression":{"id":2714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2711,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:11","typeDescriptions":{}}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2726,"nodeType":"IfStatement","src":"1768:95:11","trueBody":{"id":2725,"nodeType":"Block","src":"1812:51:11","statements":[{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:11","subExpression":{"baseExpression":{"id":2720,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1833:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2722,"indexExpression":{"id":2721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1844:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"1826:26:11"}]}}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"1457:207:11","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":2728,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:11","nodeType":"FunctionDefinition","overrides":{"id":2703,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:11"},"parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:11","nodeType":"VariableDeclaration","scope":2728,"src":"1684:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:11"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[],"src":"1727:0:11"},"scope":2729,"src":"1669:200:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2730,"src":"248:1623:11","usedErrors":[]}],"src":"128:1744:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol","exportedSymbols":{"Address":[3173],"Checkpoints":[4544],"Context":[4566],"Counters":[4640],"ECDSA":[5176],"EIP712":[5330],"ERC165":[5357],"ERC721":[2086],"ERC721Votes":[2782],"IERC165":[5369],"IERC721":[2202],"IERC721Metadata":[2840],"IERC721Receiver":[2220],"IVotes":[579],"Math":[6234],"SafeCast":[7775],"Strings":[4815],"Votes":[1033]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2731,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":2087,"src":"148:23:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":2733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":1034,"src":"172:45:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2735,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"777:6:12"},"id":2736,"nodeType":"InheritanceSpecifier","src":"777:6:12"},{"baseName":{"id":2737,"name":"Votes","nodeType":"IdentifierPath","referencedDeclaration":1033,"src":"785:5:12"},"id":2738,"nodeType":"InheritanceSpecifier","src":"785:5:12"}],"canonicalName":"ERC721Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":2734,"nodeType":"StructuredDocumentation","src":"219:524:12","text":" @dev Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts\n as 1 vote unit.\n Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost\n on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of\n the votes in governance decisions, or they can delegate to themselves to be their own representative.\n _Available since v4.5._"},"fullyImplemented":false,"id":2782,"linearizedBaseContracts":[2782,1033,5330,2086,2840,2202,5357,5369,4566,579],"name":"ERC721Votes","nameLocation":"762:11:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2085],"body":{"id":2766,"nodeType":"Block","src":"1121:128:12","statements":[{"expression":{"arguments":[{"id":2752,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1152:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2753,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1158:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2754,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"1162:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2751,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1131:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2756,"nodeType":"ExpressionStatement","src":"1131:41:12"},{"expression":{"arguments":[{"id":2760,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1208:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1214:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2762,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"1218:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2763,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"1232:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2757,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1182:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Votes_$2782_$","typeString":"type(contract super ERC721Votes)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2085,"src":"1182:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1182:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"1182:60:12"}]},"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"797:159:12","text":" @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2767,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"970:19:12","nodeType":"FunctionDefinition","overrides":{"id":2749,"nodeType":"OverrideSpecifier","overrides":[],"src":"1112:8:12"},"parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"from","nameLocation":"1007:4:12","nodeType":"VariableDeclaration","scope":2767,"src":"999:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"to","nameLocation":"1029:2:12","nodeType":"VariableDeclaration","scope":2767,"src":"1021:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"firstTokenId","nameLocation":"1049:12:12","nodeType":"VariableDeclaration","scope":2767,"src":"1041:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"batchSize","nameLocation":"1079:9:12","nodeType":"VariableDeclaration","scope":2767,"src":"1071:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:105:12"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[],"src":"1121:0:12"},"scope":2782,"src":"961:288:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1032],"body":{"id":2780,"nodeType":"Block","src":"1408:42:12","statements":[{"expression":{"arguments":[{"id":2777,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"1435:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2776,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1425:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1425:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2775,"id":2779,"nodeType":"Return","src":"1418:25:12"}]},"documentation":{"id":2768,"nodeType":"StructuredDocumentation","src":"1255:57:12","text":" @dev Returns the balance of `account`."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"1326:15:12","nodeType":"FunctionDefinition","overrides":{"id":2772,"nodeType":"OverrideSpecifier","overrides":[],"src":"1381:8:12"},"parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"account","nameLocation":"1350:7:12","nodeType":"VariableDeclaration","scope":2781,"src":"1342:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1341:17:12"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"1399:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1398:9:12"},"scope":2782,"src":"1317:133:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2783,"src":"744:708:12","usedErrors":[]}],"src":"123:1330:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[5369],"IERC721":[2202],"IERC721Enumerable":[2813]},"id":2814,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2814,"sourceUnit":2203,"src":"154:24:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2787,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2202,"src":"348:7:13"},"id":2788,"nodeType":"InheritanceSpecifier","src":"348:7:13"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"180:136:13","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2813,"linearizedBaseContracts":[2813,2202,5369],"name":"IERC721Enumerable","nameLocation":"327:17:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2789,"nodeType":"StructuredDocumentation","src":"362:82:13","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":2794,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:13","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[],"src":"469:2:13"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2794,"src":"495:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:13"},"scope":2813,"src":"449:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"510:171:13","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":2804,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:13","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"owner","nameLocation":"723:5:13","nodeType":"VariableDeclaration","scope":2804,"src":"715:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"index","nameLocation":"738:5:13","nodeType":"VariableDeclaration","scope":2804,"src":"730:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:13"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2804,"src":"768:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:13"},"scope":2813,"src":"686:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"783:164:13","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":2812,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:13","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"index","nameLocation":"982:5:13","nodeType":"VariableDeclaration","scope":2812,"src":"974:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:13"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2812,"src":"1012:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:13"},"scope":2813,"src":"952:69:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2814,"src":"317:706:13","usedErrors":[]}],"src":"129:895:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[5369],"IERC721":[2202],"IERC721Metadata":[2840]},"id":2841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2815,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2841,"sourceUnit":2203,"src":"137:24:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2818,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2202,"src":"326:7:14"},"id":2819,"nodeType":"InheritanceSpecifier","src":"326:7:14"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"163:133:14","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2840,"linearizedBaseContracts":[2840,2202,5369],"name":"IERC721Metadata","nameLocation":"307:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"340:58:14","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2825,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:14","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[],"src":"416:2:14"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"442:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2822,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:14"},"scope":2840,"src":"403:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"463:60:14","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2831,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:14","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"543:2:14"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2831,"src":"569:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2828,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:14"},"scope":2840,"src":"528:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"590:90:14","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2839,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:14","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:14","nodeType":"VariableDeclaration","scope":2839,"src":"703:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:14"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"743:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2836,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:14"},"scope":2840,"src":"685:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2841,"src":"297:463:14","usedErrors":[]}],"src":"112:649:14"},"id":14},"@openzeppelin/contracts/token/ERC721/extensions/draft-ERC721Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/draft-ERC721Votes.sol","exportedSymbols":{"Address":[3173],"Checkpoints":[4544],"Context":[4566],"Counters":[4640],"ECDSA":[5176],"EIP712":[5330],"ERC165":[5357],"ERC721":[2086],"ERC721Votes":[2782],"IERC165":[5369],"IERC721":[2202],"IERC721Metadata":[2840],"IERC721Receiver":[2220],"IVotes":[579],"Math":[6234],"SafeCast":[7775],"Strings":[4815],"Votes":[1033]},"id":2844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2842,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol","file":"./ERC721Votes.sol","id":2843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2844,"sourceUnit":2783,"src":"284:27:15","symbolAliases":[],"unitAlias":""}],"src":"129:183:15"},"id":15},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3173]},"id":3174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2845,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"126:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3173,"linearizedBaseContracts":[3173],"name":"Address","nameLocation":"202:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2860,"nodeType":"Block","src":"1241:254:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2854,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1465:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2853,"id":2859,"nodeType":"Return","src":"1458:30:16"}]},"documentation":{"id":2847,"nodeType":"StructuredDocumentation","src":"216:954:16","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:16","nodeType":"FunctionDefinition","parameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"account","nameLocation":"1203:7:16","nodeType":"VariableDeclaration","scope":2861,"src":"1195:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2848,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:16"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2861,"src":"1235:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2851,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:16"},"scope":3173,"src":"1175:320:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2894,"nodeType":"Block","src":"2483:241:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2872,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3173","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3173","typeString":"library Address"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:16","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"2526:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"ExpressionStatement","src":"2493:73:16"},{"assignments":[2881,null],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"success","nameLocation":"2583:7:16","nodeType":"VariableDeclaration","scope":2894,"src":"2578:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2880,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2888,"initialValue":{"arguments":[{"hexValue":"","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2882,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"2596:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2884,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"2618:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:16"},{"expression":{"arguments":[{"id":2890,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"2647:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2893,"nodeType":"ExpressionStatement","src":"2639:78:16"}]},"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"1501:906:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:16","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:16","nodeType":"VariableDeclaration","scope":2895,"src":"2431:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2863,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"amount","nameLocation":"2466:6:16","nodeType":"VariableDeclaration","scope":2895,"src":"2458:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:16"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[],"src":"2483:0:16"},"scope":3173,"src":"2412:312:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"3555:96:16","statements":[{"expression":{"arguments":[{"id":2906,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"3594:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2907,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3602:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2905,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2953,2997],"referencedDeclaration":2997,"src":"3572:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2904,"id":2911,"nodeType":"Return","src":"3565:79:16"}]},"documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"2730:731:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:16","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"target","nameLocation":"3496:6:16","nodeType":"VariableDeclaration","scope":2913,"src":"3488:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"data","nameLocation":"3517:4:16","nodeType":"VariableDeclaration","scope":2913,"src":"3504:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2899,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:16"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"3541:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2902,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:16"},"scope":3173,"src":"3466:185:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2932,"nodeType":"Block","src":"4020:76:16","statements":[{"expression":{"arguments":[{"id":2926,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4059:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"4067:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2929,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4076:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2925,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2953,2997],"referencedDeclaration":2997,"src":"4037:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2924,"id":2931,"nodeType":"Return","src":"4030:59:16"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"3657:211:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2933,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:16","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"target","nameLocation":"3912:6:16","nodeType":"VariableDeclaration","scope":2933,"src":"3904:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"data","nameLocation":"3941:4:16","nodeType":"VariableDeclaration","scope":2933,"src":"3928:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2917,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:16","nodeType":"VariableDeclaration","scope":2933,"src":"3955:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2919,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:16"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"4006:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2922,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:16"},"scope":3173,"src":"3873:223:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2952,"nodeType":"Block","src":"4601:111:16","statements":[{"expression":{"arguments":[{"id":2946,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"4640:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4648:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"4654:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2945,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2953,2997],"referencedDeclaration":2997,"src":"4618:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2944,"id":2951,"nodeType":"Return","src":"4611:94:16"}]},"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"4102:351:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:16","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"target","nameLocation":"4506:6:16","nodeType":"VariableDeclaration","scope":2953,"src":"4498:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"data","nameLocation":"4535:4:16","nodeType":"VariableDeclaration","scope":2953,"src":"4522:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2937,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"value","nameLocation":"4557:5:16","nodeType":"VariableDeclaration","scope":2953,"src":"4549:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:16"},"returnParameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"4587:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2942,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:16"},"scope":3173,"src":"4458:254:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"5139:267:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2970,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3173","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3173","typeString":"library Address"}],"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:16","typeDescriptions":{}}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"5182:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2977,"nodeType":"ExpressionStatement","src":"5149:81:16"},{"assignments":[2979,2981],"declarations":[{"constant":false,"id":2979,"mutability":"mutable","name":"success","nameLocation":"5246:7:16","nodeType":"VariableDeclaration","scope":2996,"src":"5241:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2978,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:16","nodeType":"VariableDeclaration","scope":2996,"src":"5255:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2980,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2988,"initialValue":{"arguments":[{"id":2986,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"5308:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2982,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"5282:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"5301:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:16"},{"expression":{"arguments":[{"id":2990,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"5357:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2991,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"5365:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2992,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"5374:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2993,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"5386:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2989,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"5330:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2966,"id":2995,"nodeType":"Return","src":"5323:76:16"}]},"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"4718:237:16","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:16","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"target","nameLocation":"5008:6:16","nodeType":"VariableDeclaration","scope":2997,"src":"5000:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"data","nameLocation":"5037:4:16","nodeType":"VariableDeclaration","scope":2997,"src":"5024:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2957,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"value","nameLocation":"5059:5:16","nodeType":"VariableDeclaration","scope":2997,"src":"5051:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:16","nodeType":"VariableDeclaration","scope":2997,"src":"5074:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2961,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:16"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2997,"src":"5125:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2964,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:16"},"scope":3173,"src":"4960:446:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"5683:97:16","statements":[{"expression":{"arguments":[{"id":3008,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"5719:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3009,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"5727:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3007,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3014,3043],"referencedDeclaration":3043,"src":"5700:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3006,"id":3012,"nodeType":"Return","src":"5693:80:16"}]},"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"5412:166:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:16","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"target","nameLocation":"5619:6:16","nodeType":"VariableDeclaration","scope":3014,"src":"5611:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"data","nameLocation":"5640:4:16","nodeType":"VariableDeclaration","scope":3014,"src":"5627:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3001,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:16"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3014,"src":"5669:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3004,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:16"},"scope":3173,"src":"5583:197:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3042,"nodeType":"Block","src":"6122:168:16","statements":[{"assignments":[3027,3029],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"success","nameLocation":"6138:7:16","nodeType":"VariableDeclaration","scope":3042,"src":"6133:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3026,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:16","nodeType":"VariableDeclaration","scope":3042,"src":"6147:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3028,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3034,"initialValue":{"arguments":[{"id":3032,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6192:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"6174:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:16"},{"expression":{"arguments":[{"id":3036,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"6241:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"6249:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3038,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"6258:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3039,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"6270:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3035,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"6214:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3025,"id":3041,"nodeType":"Return","src":"6207:76:16"}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"5786:173:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3043,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:16","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"target","nameLocation":"6009:6:16","nodeType":"VariableDeclaration","scope":3043,"src":"6001:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"data","nameLocation":"6038:4:16","nodeType":"VariableDeclaration","scope":3043,"src":"6025:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3018,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:16","nodeType":"VariableDeclaration","scope":3043,"src":"6052:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3020,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:16"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3043,"src":"6108:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3023,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:16"},"scope":3173,"src":"5964:326:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3059,"nodeType":"Block","src":"6566:101:16","statements":[{"expression":{"arguments":[{"id":3054,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"6604:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3055,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"6612:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3053,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3060,3089],"referencedDeclaration":3089,"src":"6583:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3052,"id":3058,"nodeType":"Return","src":"6576:84:16"}]},"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"6296:168:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:16","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"target","nameLocation":"6507:6:16","nodeType":"VariableDeclaration","scope":3060,"src":"6499:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"data","nameLocation":"6528:4:16","nodeType":"VariableDeclaration","scope":3060,"src":"6515:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3047,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:16"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3060,"src":"6552:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3050,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:16"},"scope":3173,"src":"6469:198:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3088,"nodeType":"Block","src":"7008:170:16","statements":[{"assignments":[3073,3075],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"success","nameLocation":"7024:7:16","nodeType":"VariableDeclaration","scope":3088,"src":"7019:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3072,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:16","nodeType":"VariableDeclaration","scope":3088,"src":"7033:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3074,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3080,"initialValue":{"arguments":[{"id":3078,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"7080:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3076,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"7060:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:16","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:16"},{"expression":{"arguments":[{"id":3082,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"7129:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3083,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"7137:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3084,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7146:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3085,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"7158:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3081,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"7102:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3071,"id":3087,"nodeType":"Return","src":"7095:76:16"}]},"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"6673:175:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3089,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:16","nodeType":"FunctionDefinition","parameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"target","nameLocation":"6900:6:16","nodeType":"VariableDeclaration","scope":3089,"src":"6892:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3062,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"data","nameLocation":"6929:4:16","nodeType":"VariableDeclaration","scope":3089,"src":"6916:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3064,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:16","nodeType":"VariableDeclaration","scope":3089,"src":"6943:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3066,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:16"},"returnParameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3089,"src":"6994:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3069,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:16"},"scope":3173,"src":"6853:325:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3127,"nodeType":"Block","src":"7660:434:16","statements":[{"condition":{"id":3103,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"7674:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3125,"nodeType":"Block","src":"8030:58:16","statements":[{"expression":{"arguments":[{"id":3121,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"8052:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3122,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"8064:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3120,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"8044:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"ExpressionStatement","src":"8044:33:16"}]},"id":3126,"nodeType":"IfStatement","src":"7670:418:16","trueBody":{"id":3119,"nodeType":"Block","src":"7683:341:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3104,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"7701:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3116,"nodeType":"IfStatement","src":"7697:286:16","trueBody":{"id":3115,"nodeType":"Block","src":"7725:258:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3110,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"7927:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3109,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"7916:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3114,"nodeType":"ExpressionStatement","src":"7908:60:16"}]}},{"expression":{"id":3117,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"8003:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3102,"id":3118,"nodeType":"Return","src":"7996:17:16"}]}}]},"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"7184:277:16","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3128,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:16","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"target","nameLocation":"7519:6:16","nodeType":"VariableDeclaration","scope":3128,"src":"7511:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"success","nameLocation":"7540:7:16","nodeType":"VariableDeclaration","scope":3128,"src":"7535:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3093,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:16","nodeType":"VariableDeclaration","scope":3128,"src":"7557:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3095,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:16","nodeType":"VariableDeclaration","scope":3128,"src":"7590:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3097,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:16"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3128,"src":"7646:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3100,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:16"},"scope":3173,"src":"7466:628:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"8475:135:16","statements":[{"condition":{"id":3140,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"8489:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3149,"nodeType":"Block","src":"8546:58:16","statements":[{"expression":{"arguments":[{"id":3145,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"8568:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3146,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"8580:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3144,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"8560:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"ExpressionStatement","src":"8560:33:16"}]},"id":3150,"nodeType":"IfStatement","src":"8485:119:16","trueBody":{"id":3143,"nodeType":"Block","src":"8498:42:16","statements":[{"expression":{"id":3141,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"8519:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3139,"id":3142,"nodeType":"Return","src":"8512:17:16"}]}}]},"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"8100:210:16","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:16","nodeType":"FunctionDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"success","nameLocation":"8355:7:16","nodeType":"VariableDeclaration","scope":3152,"src":"8350:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3130,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:16","nodeType":"VariableDeclaration","scope":3152,"src":"8372:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3132,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:16","nodeType":"VariableDeclaration","scope":3152,"src":"8405:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3134,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:16"},"returnParameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"8461:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3137,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:16"},"scope":3173,"src":"8315:295:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3171,"nodeType":"Block","src":"8699:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3159,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"8775:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3169,"nodeType":"Block","src":"9105:45:16","statements":[{"expression":{"arguments":[{"id":3166,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"9126:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3165,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3168,"nodeType":"ExpressionStatement","src":"9119:20:16"}]},"id":3170,"nodeType":"IfStatement","src":"8771:379:16","trueBody":{"id":3164,"nodeType":"Block","src":"8798:301:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:16","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:16"},"nodeType":"YulFunctionCall","src":"8997:17:16"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:16","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:16"},"nodeType":"YulFunctionCall","src":"9038:19:16"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:16"},"nodeType":"YulFunctionCall","src":"9031:44:16"},"nodeType":"YulExpressionStatement","src":"9031:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3154,"isOffset":false,"isSlot":false,"src":"9003:10:16","valueSize":1},{"declaration":3154,"isOffset":false,"isSlot":false,"src":"9046:10:16","valueSize":1}],"id":3163,"nodeType":"InlineAssembly","src":"8947:142:16"}]}}]},"id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:16","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:16","nodeType":"VariableDeclaration","scope":3172,"src":"8633:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3153,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:16","nodeType":"VariableDeclaration","scope":3172,"src":"8658:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3155,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:16"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[],"src":"8699:0:16"},"scope":3173,"src":"8616:540:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3174,"src":"194:8964:16","usedErrors":[]}],"src":"101:9058:16"},"id":16},"@openzeppelin/contracts/utils/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","exportedSymbols":{"Checkpoints":[4544],"Math":[6234],"SafeCast":[7775]},"id":4545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3175,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4545,"sourceUnit":6235,"src":"218:25:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4545,"sourceUnit":7776,"src":"244:29:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"275:432:17","text":" @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function.\n _Available since v4.5._"},"fullyImplemented":true,"id":4544,"linearizedBaseContracts":[4544],"name":"Checkpoints","nameLocation":"716:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Checkpoints.History","id":3183,"members":[{"constant":false,"id":3182,"mutability":"mutable","name":"_checkpoints","nameLocation":"772:12:17","nodeType":"VariableDeclaration","scope":3183,"src":"759:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3180,"nodeType":"UserDefinedTypeName","pathNode":{"id":3179,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"759:10:17"},"referencedDeclaration":3188,"src":"759:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3181,"nodeType":"ArrayTypeName","src":"759:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"}],"name":"History","nameLocation":"741:7:17","nodeType":"StructDefinition","scope":4544,"src":"734:57:17","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint","id":3188,"members":[{"constant":false,"id":3185,"mutability":"mutable","name":"_blockNumber","nameLocation":"832:12:17","nodeType":"VariableDeclaration","scope":3188,"src":"825:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3184,"name":"uint32","nodeType":"ElementaryTypeName","src":"825:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"_value","nameLocation":"862:6:17","nodeType":"VariableDeclaration","scope":3188,"src":"854:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3186,"name":"uint224","nodeType":"ElementaryTypeName","src":"854:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"804:10:17","nodeType":"StructDefinition","scope":4544,"src":"797:78:17","visibility":"public"},{"body":{"id":3244,"nodeType":"Block","src":"1317:344:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3200,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"1335:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3201,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1349:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"1349:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1335:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1363:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":3199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1327:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1327:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3206,"nodeType":"ExpressionStatement","src":"1327:71:17"},{"assignments":[3208],"declarations":[{"constant":false,"id":3208,"mutability":"mutable","name":"key","nameLocation":"1415:3:17","nodeType":"VariableDeclaration","scope":3244,"src":"1408:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3207,"name":"uint32","nodeType":"ElementaryTypeName","src":"1408:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3213,"initialValue":{"arguments":[{"id":3211,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"1439:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3209,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"1421:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7775_$","typeString":"type(library SafeCast)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"1421:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1421:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"1408:43:17"},{"assignments":[3215],"declarations":[{"constant":false,"id":3215,"mutability":"mutable","name":"len","nameLocation":"1470:3:17","nodeType":"VariableDeclaration","scope":3244,"src":"1462:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3219,"initialValue":{"expression":{"expression":{"id":3216,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1476:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"1476:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1462:38:17"},{"assignments":[3221],"declarations":[{"constant":false,"id":3221,"mutability":"mutable","name":"pos","nameLocation":"1518:3:17","nodeType":"VariableDeclaration","scope":3244,"src":"1510:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[{"expression":{"id":3223,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1543:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"1543:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3225,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"1562:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1567:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3227,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"1570:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3222,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3642,4059,4476],"referencedDeclaration":3642,"src":"1524:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1524:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1510:64:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"1591:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1591:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3235,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1620:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"1620:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"1639:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1639:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3234,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"1606:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1606:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"1606:48:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1591:63:17","trueExpression":{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1602:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3198,"id":3243,"nodeType":"Return","src":"1584:70:17"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"881:336:17","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n block, the requested block number must be in the past, excluding the current block."},"id":3245,"implemented":true,"kind":"function","modifiers":[],"name":"getAtBlock","nameLocation":"1231:10:17","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"self","nameLocation":"1258:4:17","nodeType":"VariableDeclaration","scope":3245,"src":"1242:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3191,"nodeType":"UserDefinedTypeName","pathNode":{"id":3190,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"1242:7:17"},"referencedDeclaration":3183,"src":"1242:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"blockNumber","nameLocation":"1272:11:17","nodeType":"VariableDeclaration","scope":3245,"src":"1264:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1241:43:17"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3245,"src":"1308:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1307:9:17"},"scope":4544,"src":"1222:439:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3344,"nodeType":"Block","src":"2167:655:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"2185:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3258,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2199:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2199:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2185:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":3256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2177:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2177:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3263,"nodeType":"ExpressionStatement","src":"2177:71:17"},{"assignments":[3265],"declarations":[{"constant":false,"id":3265,"mutability":"mutable","name":"key","nameLocation":"2265:3:17","nodeType":"VariableDeclaration","scope":3344,"src":"2258:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3264,"name":"uint32","nodeType":"ElementaryTypeName","src":"2258:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3270,"initialValue":{"arguments":[{"id":3268,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"2289:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3266,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"2271:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7775_$","typeString":"type(library SafeCast)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"2271:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2271:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2258:43:17"},{"assignments":[3272],"declarations":[{"constant":false,"id":3272,"mutability":"mutable","name":"len","nameLocation":"2320:3:17","nodeType":"VariableDeclaration","scope":3344,"src":"2312:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3276,"initialValue":{"expression":{"expression":{"id":3273,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"2326:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"2326:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2326:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2312:38:17"},{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"low","nameLocation":"2369:3:17","nodeType":"VariableDeclaration","scope":3344,"src":"2361:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3280,"initialValue":{"hexValue":"30","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2375:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2361:15:17"},{"assignments":[3282],"declarations":[{"constant":false,"id":3282,"mutability":"mutable","name":"high","nameLocation":"2394:4:17","nodeType":"VariableDeclaration","scope":3344,"src":"2386:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2386:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3284,"initialValue":{"id":3283,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2401:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2386:18:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2419:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2425:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2419:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3319,"nodeType":"IfStatement","src":"2415:242:17","trueBody":{"id":3318,"nodeType":"Block","src":"2428:229:17","statements":[{"assignments":[3289],"declarations":[{"constant":false,"id":3289,"mutability":"mutable","name":"mid","nameLocation":"2450:3:17","nodeType":"VariableDeclaration","scope":3318,"src":"2442:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2442:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3296,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2456:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3293,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2472:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3291,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"2462:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5738,"src":"2462:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2462:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2456:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2442:34:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"2494:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":3299,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"2514:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"2514:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3301,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"2533:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3298,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"2500:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"2500:50:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2494:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3316,"nodeType":"Block","src":"2601:46:17","statements":[{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3310,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"2619:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"2625:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2631:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2625:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2619:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3315,"nodeType":"ExpressionStatement","src":"2619:13:17"}]},"id":3317,"nodeType":"IfStatement","src":"2490:157:17","trueBody":{"id":3309,"nodeType":"Block","src":"2552:43:17","statements":[{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3305,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2570:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3306,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"2577:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2570:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"2570:10:17"}]}}]}},{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"pos","nameLocation":"2675:3:17","nodeType":"VariableDeclaration","scope":3344,"src":"2667:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3329,"initialValue":{"arguments":[{"expression":{"id":3323,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"2700:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"2700:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3325,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"2719:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3326,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"2724:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3327,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2729:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3322,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3642,4059,4476],"referencedDeclaration":3642,"src":"2681:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2681:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2667:67:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2752:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2759:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2752:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3335,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"2781:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"2781:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2800:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2800:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"2767:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2767:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"2767:48:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2752:63:17","trueExpression":{"hexValue":"30","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3255,"id":3343,"nodeType":"Return","src":"2745:70:17"}]},"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"1667:386:17","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n checkpoints."},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"getAtProbablyRecentBlock","nameLocation":"2067:24:17","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"self","nameLocation":"2108:4:17","nodeType":"VariableDeclaration","scope":3345,"src":"2092:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3248,"nodeType":"UserDefinedTypeName","pathNode":{"id":3247,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"2092:7:17"},"referencedDeclaration":3183,"src":"2092:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"blockNumber","nameLocation":"2122:11:17","nodeType":"VariableDeclaration","scope":3345,"src":"2114:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2091:43:17"},"returnParameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3345,"src":"2158:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:9:17"},"scope":4544,"src":"2058:764:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"3087:110:17","statements":[{"expression":{"arguments":[{"expression":{"id":3359,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"3112:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"3112:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"arguments":[{"expression":{"id":3363,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3149:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3149:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3361,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"3131:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7775_$","typeString":"type(library SafeCast)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"3131:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3131:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":3368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"3183:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"3164:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7775_$","typeString":"type(library SafeCast)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":6337,"src":"3164:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3164:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3358,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3590,4007,4424],"referencedDeclaration":3590,"src":"3104:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3104:86:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3357,"id":3371,"nodeType":"Return","src":"3097:93:17"}]},"documentation":{"id":3346,"nodeType":"StructuredDocumentation","src":"2828:167:17","text":" @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n Returns previous value and new value."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3009:4:17","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"self","nameLocation":"3030:4:17","nodeType":"VariableDeclaration","scope":3373,"src":"3014:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3348,"nodeType":"UserDefinedTypeName","pathNode":{"id":3347,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"3014:7:17"},"referencedDeclaration":3183,"src":"3014:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"value","nameLocation":"3044:5:17","nodeType":"VariableDeclaration","scope":3373,"src":"3036:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3013:37:17"},"returnParameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3373,"src":"3069:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3373,"src":"3078:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:18:17"},"scope":4544,"src":"3000:197:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3406,"nodeType":"Block","src":"3600:59:17","statements":[{"expression":{"arguments":[{"id":3397,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"3622:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},{"arguments":[{"arguments":[{"id":3400,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"3638:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}],"id":3399,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[3437,3854,4271],"referencedDeclaration":3437,"src":"3631:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$3183_storage_ptr_$returns$_t_uint224_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3402,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"3645:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3398,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"3628:2:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3628:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3396,"name":"push","nodeType":"Identifier","overloadedDeclarations":[3373,3407,3742,4159],"referencedDeclaration":3373,"src":"3617:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$3183_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) returns (uint256,uint256)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3617:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3395,"id":3405,"nodeType":"Return","src":"3610:42:17"}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"3203:221:17","text":" @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n be set to `op(latest, delta)`.\n Returns previous value and new value."},"id":3407,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3438:4:17","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"self","nameLocation":"3468:4:17","nodeType":"VariableDeclaration","scope":3407,"src":"3452:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3376,"nodeType":"UserDefinedTypeName","pathNode":{"id":3375,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"3452:7:17"},"referencedDeclaration":3183,"src":"3452:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"op","nameLocation":"3532:2:17","nodeType":"VariableDeclaration","scope":3407,"src":"3482:52:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":3386,"nodeType":"FunctionTypeName","parameterTypes":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"3491:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3491:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"3500:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3490:18:17"},"returnParameterTypes":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"3523:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:17"},"src":"3482:52:17","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"delta","nameLocation":"3552:5:17","nodeType":"VariableDeclaration","scope":3407,"src":"3544:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3442:121:17"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3407,"src":"3582:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3582:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3407,"src":"3591:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"3591:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3581:18:17"},"scope":4544,"src":"3429:230:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3436,"nodeType":"Block","src":"3849:135:17","statements":[{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"pos","nameLocation":"3867:3:17","nodeType":"VariableDeclaration","scope":3436,"src":"3859:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3421,"initialValue":{"expression":{"expression":{"id":3418,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"3873:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"3873:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3873:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3859:38:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"3914:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3914:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3427,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"3943:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"3943:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3429,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"3962:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3968:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3426,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"3929:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3929:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"3929:48:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3914:63:17","trueExpression":{"hexValue":"30","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3415,"id":3435,"nodeType":"Return","src":"3907:70:17"}]},"documentation":{"id":3408,"nodeType":"StructuredDocumentation","src":"3665:109:17","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3788:6:17","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"self","nameLocation":"3811:4:17","nodeType":"VariableDeclaration","scope":3437,"src":"3795:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3410,"nodeType":"UserDefinedTypeName","pathNode":{"id":3409,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"3795:7:17"},"referencedDeclaration":3183,"src":"3795:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"3794:22:17"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"3840:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3413,"name":"uint224","nodeType":"ElementaryTypeName","src":"3840:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3839:9:17"},"scope":4544,"src":"3779:205:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"4358:279:17","statements":[{"assignments":[3451],"declarations":[{"constant":false,"id":3451,"mutability":"mutable","name":"pos","nameLocation":"4376:3:17","nodeType":"VariableDeclaration","scope":3485,"src":"4368:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"4368:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3455,"initialValue":{"expression":{"expression":{"id":3452,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"4382:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"4382:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4382:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4368:38:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"4420:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4427:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4420:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3483,"nodeType":"Block","src":"4481:150:17","statements":[{"assignments":[3467],"declarations":[{"constant":false,"id":3467,"mutability":"mutable","name":"ckpt","nameLocation":"4513:4:17","nodeType":"VariableDeclaration","scope":3483,"src":"4495:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3466,"nodeType":"UserDefinedTypeName","pathNode":{"id":3465,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"4495:10:17"},"referencedDeclaration":3188,"src":"4495:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3475,"initialValue":{"arguments":[{"expression":{"id":3469,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"4534:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"4534:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"4553:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4559:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4553:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3468,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"4520:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4520:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4495:66:17"},{"expression":{"components":[{"hexValue":"74727565","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4583:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3477,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4589:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"4589:17:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3479,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4608:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"4608:11:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4582:38:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":3449,"id":3482,"nodeType":"Return","src":"4575:45:17"}]},"id":3484,"nodeType":"IfStatement","src":"4416:215:17","trueBody":{"id":3464,"nodeType":"Block","src":"4430:45:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4452:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4459:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4462:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4451:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":3449,"id":3463,"nodeType":"Return","src":"4444:20:17"}]}}]},"documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"3990:168:17","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"4172:16:17","nodeType":"FunctionDefinition","parameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"self","nameLocation":"4205:4:17","nodeType":"VariableDeclaration","scope":3486,"src":"4189:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3440,"nodeType":"UserDefinedTypeName","pathNode":{"id":3439,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"4189:7:17"},"referencedDeclaration":3183,"src":"4189:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4188:22:17"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"exists","nameLocation":"4276:6:17","nodeType":"VariableDeclaration","scope":3486,"src":"4271:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3443,"name":"bool","nodeType":"ElementaryTypeName","src":"4271:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"_blockNumber","nameLocation":"4303:12:17","nodeType":"VariableDeclaration","scope":3486,"src":"4296:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3445,"name":"uint32","nodeType":"ElementaryTypeName","src":"4296:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"_value","nameLocation":"4337:6:17","nodeType":"VariableDeclaration","scope":3486,"src":"4329:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3447,"name":"uint224","nodeType":"ElementaryTypeName","src":"4329:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4257:96:17"},"scope":4544,"src":"4163:474:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"4775:48:17","statements":[{"expression":{"expression":{"expression":{"id":3495,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"4792:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"4792:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4792:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3494,"id":3498,"nodeType":"Return","src":"4785:31:17"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"4643:57:17","text":" @dev Returns the number of checkpoint."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4714:6:17","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"self","nameLocation":"4737:4:17","nodeType":"VariableDeclaration","scope":3500,"src":"4721:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3489,"nodeType":"UserDefinedTypeName","pathNode":{"id":3488,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"4721:7:17"},"referencedDeclaration":3183,"src":"4721:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3183_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4720:22:17"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3500,"src":"4766:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"4766:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4765:9:17"},"scope":4544,"src":"4705:118:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3589,"nodeType":"Block","src":"5135:743:17","statements":[{"assignments":[3517],"declarations":[{"constant":false,"id":3517,"mutability":"mutable","name":"pos","nameLocation":"5153:3:17","nodeType":"VariableDeclaration","scope":3589,"src":"5145:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5145:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3520,"initialValue":{"expression":{"id":3518,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5159:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5159:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5145:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"5185:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5191:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5185:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3587,"nodeType":"Block","src":"5759:113:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3578,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"5809:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5822:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3577,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"5783:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5783:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3574,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5773:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5773:9:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$3188_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3582,"nodeType":"ExpressionStatement","src":"5773:57:17"},{"expression":{"components":[{"hexValue":"30","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5855:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5851:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":3515,"id":3586,"nodeType":"Return","src":"5844:17:17"}]},"id":3588,"nodeType":"IfStatement","src":"5181:691:17","trueBody":{"id":3573,"nodeType":"Block","src":"5194:559:17","statements":[{"assignments":[3526],"declarations":[{"constant":false,"id":3526,"mutability":"mutable","name":"last","nameLocation":"5278:4:17","nodeType":"VariableDeclaration","scope":3573,"src":"5260:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3525,"nodeType":"UserDefinedTypeName","pathNode":{"id":3524,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"5260:10:17"},"referencedDeclaration":3188,"src":"5260:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3533,"initialValue":{"arguments":[{"id":3528,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5299:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"5305:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5305:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3527,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"5285:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5285:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5260:53:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3535,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5388:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"5388:17:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3537,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"5409:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5388:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5414:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":3534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5380:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5380:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3541,"nodeType":"ExpressionStatement","src":"5380:60:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3542,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5504:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"5504:17:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3544,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"5525:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5504:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3566,"nodeType":"Block","src":"5612:90:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3561,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"5666:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5679:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3560,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"5640:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5640:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3557,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5630:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5630:9:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$3188_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5630:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3565,"nodeType":"ExpressionStatement","src":"5630:57:17"}]},"id":3567,"nodeType":"IfStatement","src":"5500:202:17","trueBody":{"id":3556,"nodeType":"Block","src":"5530:76:17","statements":[{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3547,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5562:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"5568:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5574:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5568:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3546,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"5548:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5548:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"5548:35:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5586:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5548:43:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3555,"nodeType":"ExpressionStatement","src":"5548:43:17"}]}},{"expression":{"components":[{"expression":{"id":3568,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5723:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"5723:11:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5736:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5722:20:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3515,"id":3572,"nodeType":"Return","src":"5715:27:17"}]}}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"4829:165:17","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":3590,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"5008:7:17","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"self","nameLocation":"5046:4:17","nodeType":"VariableDeclaration","scope":3590,"src":"5025:25:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3503,"nodeType":"UserDefinedTypeName","pathNode":{"id":3502,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"5025:10:17"},"referencedDeclaration":3188,"src":"5025:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3504,"nodeType":"ArrayTypeName","src":"5025:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"key","nameLocation":"5067:3:17","nodeType":"VariableDeclaration","scope":3590,"src":"5060:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3506,"name":"uint32","nodeType":"ElementaryTypeName","src":"5060:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"value","nameLocation":"5088:5:17","nodeType":"VariableDeclaration","scope":3590,"src":"5080:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3508,"name":"uint224","nodeType":"ElementaryTypeName","src":"5080:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"5015:84:17"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3590,"src":"5117:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3511,"name":"uint224","nodeType":"ElementaryTypeName","src":"5117:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3590,"src":"5126:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3513,"name":"uint224","nodeType":"ElementaryTypeName","src":"5126:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"5116:18:17"},"scope":4544,"src":"4999:879:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3641,"nodeType":"Block","src":"6372:275:17","statements":[{"body":{"id":3637,"nodeType":"Block","src":"6401:219:17","statements":[{"assignments":[3610],"declarations":[{"constant":false,"id":3610,"mutability":"mutable","name":"mid","nameLocation":"6423:3:17","nodeType":"VariableDeclaration","scope":3637,"src":"6415:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"6415:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3616,"initialValue":{"arguments":[{"id":3613,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"6442:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3614,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"6447:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3611,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"6429:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5435,"src":"6429:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6429:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6415:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3618,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"6484:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3619,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"6490:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3617,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"6470:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"6470:37:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3622,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"6510:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6470:43:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3635,"nodeType":"Block","src":"6564:46:17","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"6582:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"6588:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6588:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6582:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"6582:13:17"}]},"id":3636,"nodeType":"IfStatement","src":"6466:144:17","trueBody":{"id":3628,"nodeType":"Block","src":"6515:43:17","statements":[{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3624,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"6533:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3625,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"6540:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6533:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3627,"nodeType":"ExpressionStatement","src":"6533:10:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"6389:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3607,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"6395:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6389:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3638,"nodeType":"WhileStatement","src":"6382:238:17"},{"expression":{"id":3639,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"6636:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3605,"id":3640,"nodeType":"Return","src":"6629:11:17"}]},"documentation":{"id":3591,"nodeType":"StructuredDocumentation","src":"5884:320:17","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6218:18:17","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"self","nameLocation":"6267:4:17","nodeType":"VariableDeclaration","scope":3642,"src":"6246:25:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3593,"nodeType":"UserDefinedTypeName","pathNode":{"id":3592,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"6246:10:17"},"referencedDeclaration":3188,"src":"6246:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3594,"nodeType":"ArrayTypeName","src":"6246:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"key","nameLocation":"6288:3:17","nodeType":"VariableDeclaration","scope":3642,"src":"6281:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3596,"name":"uint32","nodeType":"ElementaryTypeName","src":"6281:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"low","nameLocation":"6309:3:17","nodeType":"VariableDeclaration","scope":3642,"src":"6301:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"6301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"high","nameLocation":"6330:4:17","nodeType":"VariableDeclaration","scope":3642,"src":"6322:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"6322:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6236:104:17"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"6363:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"6363:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6362:9:17"},"scope":4544,"src":"6209:438:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3693,"nodeType":"Block","src":"7150:275:17","statements":[{"body":{"id":3689,"nodeType":"Block","src":"7179:219:17","statements":[{"assignments":[3662],"declarations":[{"constant":false,"id":3662,"mutability":"mutable","name":"mid","nameLocation":"7201:3:17","nodeType":"VariableDeclaration","scope":3689,"src":"7193:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"7193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3668,"initialValue":{"arguments":[{"id":3665,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"7220:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3666,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"7225:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3663,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"7207:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5435,"src":"7207:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7207:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7193:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3670,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"7262:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3671,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"7268:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3669,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":3709,"src":"7248:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3188_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7248:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"7248:37:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3674,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"7288:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7248:43:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3687,"nodeType":"Block","src":"7345:43:17","statements":[{"expression":{"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"7363:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3684,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"7370:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7363:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3686,"nodeType":"ExpressionStatement","src":"7363:10:17"}]},"id":3688,"nodeType":"IfStatement","src":"7244:144:17","trueBody":{"id":3682,"nodeType":"Block","src":"7293:46:17","statements":[{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3676,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"7311:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"7317:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7323:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7317:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7311:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3681,"nodeType":"ExpressionStatement","src":"7311:13:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"7167:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3659,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"7173:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7167:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"nodeType":"WhileStatement","src":"7160:238:17"},{"expression":{"id":3691,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"7414:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3657,"id":3692,"nodeType":"Return","src":"7407:11:17"}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"6653:329:17","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6996:18:17","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"self","nameLocation":"7045:4:17","nodeType":"VariableDeclaration","scope":3694,"src":"7024:25:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3645,"nodeType":"UserDefinedTypeName","pathNode":{"id":3644,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"7024:10:17"},"referencedDeclaration":3188,"src":"7024:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3646,"nodeType":"ArrayTypeName","src":"7024:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"key","nameLocation":"7066:3:17","nodeType":"VariableDeclaration","scope":3694,"src":"7059:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3648,"name":"uint32","nodeType":"ElementaryTypeName","src":"7059:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3651,"mutability":"mutable","name":"low","nameLocation":"7087:3:17","nodeType":"VariableDeclaration","scope":3694,"src":"7079:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"high","nameLocation":"7108:4:17","nodeType":"VariableDeclaration","scope":3694,"src":"7100:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"7100:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7014:104:17"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"7141:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"7141:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7140:9:17"},"scope":4544,"src":"6987:438:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3708,"nodeType":"Block","src":"7680:125:17","statements":[{"AST":{"nodeType":"YulBlock","src":"7699:100:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7720:1:17","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7723:9:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7713:6:17"},"nodeType":"YulFunctionCall","src":"7713:20:17"},"nodeType":"YulExpressionStatement","src":"7713:20:17"},{"nodeType":"YulAssignment","src":"7746:43:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7775:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7778:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7765:9:17"},"nodeType":"YulFunctionCall","src":"7765:18:17"},{"name":"pos","nodeType":"YulIdentifier","src":"7785:3:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:17"},"nodeType":"YulFunctionCall","src":"7761:28:17"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7746:11:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3701,"isOffset":false,"isSlot":false,"src":"7785:3:17","valueSize":1},{"declaration":3705,"isOffset":false,"isSlot":true,"src":"7746:11:17","suffix":"slot","valueSize":1},{"declaration":3699,"isOffset":false,"isSlot":true,"src":"7723:9:17","suffix":"slot","valueSize":1}],"id":3707,"nodeType":"InlineAssembly","src":"7690:109:17"}]},"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"7431:132:17","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7577:13:17","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"self","nameLocation":"7612:4:17","nodeType":"VariableDeclaration","scope":3709,"src":"7591:25:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3697,"nodeType":"UserDefinedTypeName","pathNode":{"id":3696,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"7591:10:17"},"referencedDeclaration":3188,"src":"7591:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3698,"nodeType":"ArrayTypeName","src":"7591:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3188_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"pos","nameLocation":"7626:3:17","nodeType":"VariableDeclaration","scope":3709,"src":"7618:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7618:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7590:40:17"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"result","nameLocation":"7672:6:17","nodeType":"VariableDeclaration","scope":3709,"src":"7653:25:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3704,"nodeType":"UserDefinedTypeName","pathNode":{"id":3703,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3188,"src":"7653:10:17"},"referencedDeclaration":3188,"src":"7653:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3188_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"src":"7652:27:17"},"scope":4544,"src":"7568:237:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace224","id":3714,"members":[{"constant":false,"id":3713,"mutability":"mutable","name":"_checkpoints","nameLocation":"7853:12:17","nodeType":"VariableDeclaration","scope":3714,"src":"7837:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3711,"nodeType":"UserDefinedTypeName","pathNode":{"id":3710,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"7837:13:17"},"referencedDeclaration":3719,"src":"7837:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3712,"nodeType":"ArrayTypeName","src":"7837:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"7818:8:17","nodeType":"StructDefinition","scope":4544,"src":"7811:61:17","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":3719,"members":[{"constant":false,"id":3716,"mutability":"mutable","name":"_key","nameLocation":"7916:4:17","nodeType":"VariableDeclaration","scope":3719,"src":"7909:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3715,"name":"uint32","nodeType":"ElementaryTypeName","src":"7909:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3718,"mutability":"mutable","name":"_value","nameLocation":"7938:6:17","nodeType":"VariableDeclaration","scope":3719,"src":"7930:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3717,"name":"uint224","nodeType":"ElementaryTypeName","src":"7930:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"7885:13:17","nodeType":"StructDefinition","scope":4544,"src":"7878:73:17","visibility":"public"},{"body":{"id":3741,"nodeType":"Block","src":"8254:62:17","statements":[{"expression":{"arguments":[{"expression":{"id":3735,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"8279:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"8279:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3737,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"8298:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"8303:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3734,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3590,4007,4424],"referencedDeclaration":4007,"src":"8271:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8271:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3733,"id":3740,"nodeType":"Return","src":"8264:45:17"}]},"documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"7957:162:17","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8133:4:17","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"self","nameLocation":"8164:4:17","nodeType":"VariableDeclaration","scope":3742,"src":"8147:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3722,"nodeType":"UserDefinedTypeName","pathNode":{"id":3721,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3714,"src":"8147:8:17"},"referencedDeclaration":3714,"src":"8147:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"key","nameLocation":"8185:3:17","nodeType":"VariableDeclaration","scope":3742,"src":"8178:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3724,"name":"uint32","nodeType":"ElementaryTypeName","src":"8178:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"value","nameLocation":"8206:5:17","nodeType":"VariableDeclaration","scope":3742,"src":"8198:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3726,"name":"uint224","nodeType":"ElementaryTypeName","src":"8198:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8137:80:17"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"8236:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3729,"name":"uint224","nodeType":"ElementaryTypeName","src":"8236:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"8245:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3731,"name":"uint224","nodeType":"ElementaryTypeName","src":"8245:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8235:18:17"},"scope":4544,"src":"8124:192:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"8554:207:17","statements":[{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"len","nameLocation":"8572:3:17","nodeType":"VariableDeclaration","scope":3781,"src":"8564:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"8564:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3758,"initialValue":{"expression":{"expression":{"id":3755,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"8578:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"8578:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8578:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8564:38:17"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"pos","nameLocation":"8620:3:17","nodeType":"VariableDeclaration","scope":3781,"src":"8612:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"8612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3768,"initialValue":{"arguments":[{"expression":{"id":3762,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"8645:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"8645:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3764,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"8664:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3766,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"8672:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3761,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3694,4111,4528],"referencedDeclaration":4111,"src":"8626:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8626:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8612:64:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"8693:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3770,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"8700:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8693:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3774,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"8724:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"8724:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3776,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"8743:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3773,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"8710:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8710:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3718,"src":"8710:44:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8693:61:17","trueExpression":{"hexValue":"30","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8706:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3752,"id":3780,"nodeType":"Return","src":"8686:68:17"}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"8322:139:17","text":" @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none."},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8475:11:17","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"self","nameLocation":"8504:4:17","nodeType":"VariableDeclaration","scope":3782,"src":"8487:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3745,"nodeType":"UserDefinedTypeName","pathNode":{"id":3744,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3714,"src":"8487:8:17"},"referencedDeclaration":3714,"src":"8487:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"key","nameLocation":"8517:3:17","nodeType":"VariableDeclaration","scope":3782,"src":"8510:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3747,"name":"uint32","nodeType":"ElementaryTypeName","src":"8510:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8486:35:17"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3782,"src":"8545:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3750,"name":"uint224","nodeType":"ElementaryTypeName","src":"8545:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8544:9:17"},"scope":4544,"src":"8466:295:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"8976:209:17","statements":[{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"len","nameLocation":"8994:3:17","nodeType":"VariableDeclaration","scope":3823,"src":"8986:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3798,"initialValue":{"expression":{"expression":{"id":3795,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"9000:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"9000:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9000:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8986:38:17"},{"assignments":[3800],"declarations":[{"constant":false,"id":3800,"mutability":"mutable","name":"pos","nameLocation":"9042:3:17","nodeType":"VariableDeclaration","scope":3823,"src":"9034:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"9034:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3808,"initialValue":{"arguments":[{"expression":{"id":3802,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"9067:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"9067:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3804,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"9086:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9091:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3806,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"9094:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3801,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3642,4059,4476],"referencedDeclaration":4059,"src":"9048:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9048:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9034:64:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"9115:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9122:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9115:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3814,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"9144:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"9144:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"9163:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9169:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9163:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3813,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"9130:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9130:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3718,"src":"9130:48:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9115:63:17","trueExpression":{"hexValue":"30","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9126:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3792,"id":3822,"nodeType":"Return","src":"9108:70:17"}]},"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"8767:116:17","text":" @dev Returns the value in the most recent checkpoint with key lower or equal than the search key."},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8897:11:17","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"self","nameLocation":"8926:4:17","nodeType":"VariableDeclaration","scope":3824,"src":"8909:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3785,"nodeType":"UserDefinedTypeName","pathNode":{"id":3784,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3714,"src":"8909:8:17"},"referencedDeclaration":3714,"src":"8909:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"key","nameLocation":"8939:3:17","nodeType":"VariableDeclaration","scope":3824,"src":"8932:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3787,"name":"uint32","nodeType":"ElementaryTypeName","src":"8932:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8908:35:17"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3824,"src":"8967:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3790,"name":"uint224","nodeType":"ElementaryTypeName","src":"8967:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8966:9:17"},"scope":4544,"src":"8888:297:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3853,"nodeType":"Block","src":"9376:135:17","statements":[{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"pos","nameLocation":"9394:3:17","nodeType":"VariableDeclaration","scope":3853,"src":"9386:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"9386:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3838,"initialValue":{"expression":{"expression":{"id":3835,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"9400:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"9400:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9400:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9386:38:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"9441:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9448:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9441:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3844,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"9470:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"9470:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"9489:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3843,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"9456:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9456:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3718,"src":"9456:48:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9441:63:17","trueExpression":{"hexValue":"30","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9452:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3832,"id":3852,"nodeType":"Return","src":"9434:70:17"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"9191:109:17","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":3854,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"9314:6:17","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"self","nameLocation":"9338:4:17","nodeType":"VariableDeclaration","scope":3854,"src":"9321:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3827,"nodeType":"UserDefinedTypeName","pathNode":{"id":3826,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3714,"src":"9321:8:17"},"referencedDeclaration":3714,"src":"9321:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"9320:23:17"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3854,"src":"9367:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3830,"name":"uint224","nodeType":"ElementaryTypeName","src":"9367:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9366:9:17"},"scope":4544,"src":"9305:206:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3902,"nodeType":"Block","src":"9878:274:17","statements":[{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"pos","nameLocation":"9896:3:17","nodeType":"VariableDeclaration","scope":3902,"src":"9888:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"9888:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3872,"initialValue":{"expression":{"expression":{"id":3869,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"9902:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"9902:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9902:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9888:38:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"9940:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9947:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9940:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3900,"nodeType":"Block","src":"10001:145:17","statements":[{"assignments":[3884],"declarations":[{"constant":false,"id":3884,"mutability":"mutable","name":"ckpt","nameLocation":"10036:4:17","nodeType":"VariableDeclaration","scope":3900,"src":"10015:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3883,"nodeType":"UserDefinedTypeName","pathNode":{"id":3882,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"10015:13:17"},"referencedDeclaration":3719,"src":"10015:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":3892,"initialValue":{"arguments":[{"expression":{"id":3886,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"10057:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"10057:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"10076:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10082:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10076:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3885,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"10043:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10043:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10015:69:17"},{"expression":{"components":[{"hexValue":"74727565","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10106:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3894,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"10112:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3716,"src":"10112:9:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3896,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"10123:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3718,"src":"10123:11:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10105:30:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":3866,"id":3899,"nodeType":"Return","src":"10098:37:17"}]},"id":3901,"nodeType":"IfStatement","src":"9936:210:17","trueBody":{"id":3881,"nodeType":"Block","src":"9950:45:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9972:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9979:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9982:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9971:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":3866,"id":3880,"nodeType":"Return","src":"9964:20:17"}]}}]},"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"9517:168:17","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3903,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"9699:16:17","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"self","nameLocation":"9733:4:17","nodeType":"VariableDeclaration","scope":3903,"src":"9716:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3857,"nodeType":"UserDefinedTypeName","pathNode":{"id":3856,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3714,"src":"9716:8:17"},"referencedDeclaration":3714,"src":"9716:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"9715:23:17"},"returnParameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"exists","nameLocation":"9804:6:17","nodeType":"VariableDeclaration","scope":3903,"src":"9799:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3860,"name":"bool","nodeType":"ElementaryTypeName","src":"9799:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3863,"mutability":"mutable","name":"_key","nameLocation":"9831:4:17","nodeType":"VariableDeclaration","scope":3903,"src":"9824:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3862,"name":"uint32","nodeType":"ElementaryTypeName","src":"9824:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3865,"mutability":"mutable","name":"_value","nameLocation":"9857:6:17","nodeType":"VariableDeclaration","scope":3903,"src":"9849:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3864,"name":"uint224","nodeType":"ElementaryTypeName","src":"9849:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9785:88:17"},"scope":4544,"src":"9690:462:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3916,"nodeType":"Block","src":"10291:48:17","statements":[{"expression":{"expression":{"expression":{"id":3912,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"10308:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3713,"src":"10308:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10308:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3911,"id":3915,"nodeType":"Return","src":"10301:31:17"}]},"documentation":{"id":3904,"nodeType":"StructuredDocumentation","src":"10158:57:17","text":" @dev Returns the number of checkpoint."},"id":3917,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10229:6:17","nodeType":"FunctionDefinition","parameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"self","nameLocation":"10253:4:17","nodeType":"VariableDeclaration","scope":3917,"src":"10236:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3906,"nodeType":"UserDefinedTypeName","pathNode":{"id":3905,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3714,"src":"10236:8:17"},"referencedDeclaration":3714,"src":"10236:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3714_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"10235:23:17"},"returnParameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3917,"src":"10282:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"10282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:9:17"},"scope":4544,"src":"10220:119:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4006,"nodeType":"Block","src":"10654:720:17","statements":[{"assignments":[3934],"declarations":[{"constant":false,"id":3934,"mutability":"mutable","name":"pos","nameLocation":"10672:3:17","nodeType":"VariableDeclaration","scope":4006,"src":"10664:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3937,"initialValue":{"expression":{"id":3935,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10678:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10678:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10664:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"10704:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10710:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10704:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4004,"nodeType":"Block","src":"11260:108:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3995,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"11305:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11318:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3994,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11284:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"11284:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":3991,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"11274:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"11274:9:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3719_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11274:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3999,"nodeType":"ExpressionStatement","src":"11274:52:17"},{"expression":{"components":[{"hexValue":"30","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11348:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11351:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":4002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11347:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":3932,"id":4003,"nodeType":"Return","src":"11340:17:17"}]},"id":4005,"nodeType":"IfStatement","src":"10700:668:17","trueBody":{"id":3990,"nodeType":"Block","src":"10713:541:17","statements":[{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"last","nameLocation":"10800:4:17","nodeType":"VariableDeclaration","scope":3990,"src":"10779:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3942,"nodeType":"UserDefinedTypeName","pathNode":{"id":3941,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"10779:13:17"},"referencedDeclaration":3719,"src":"10779:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":3950,"initialValue":{"arguments":[{"id":3945,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10821:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"10827:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10833:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10827:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3944,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"10807:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10807:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10779:56:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3952,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"10910:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3716,"src":"10910:9:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3954,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"10923:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10910:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10928:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":3951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10902:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10902:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3958,"nodeType":"ExpressionStatement","src":"10902:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3959,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"11018:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3716,"src":"11018:9:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3961,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"11031:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11018:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3983,"nodeType":"Block","src":"11118:85:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3978,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"11167:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11180:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3977,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11146:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"11146:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":3974,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"11136:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"11136:9:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3719_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11136:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3982,"nodeType":"ExpressionStatement","src":"11136:52:17"}]},"id":3984,"nodeType":"IfStatement","src":"11014:189:17","trueBody":{"id":3973,"nodeType":"Block","src":"11036:76:17","statements":[{"expression":{"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3964,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"11068:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"11074:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11080:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11074:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3963,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"11054:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11054:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3718,"src":"11054:35:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11092:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"11054:43:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3972,"nodeType":"ExpressionStatement","src":"11054:43:17"}]}},{"expression":{"components":[{"expression":{"id":3985,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"11224:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3718,"src":"11224:11:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11237:5:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11223:20:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3932,"id":3989,"nodeType":"Return","src":"11216:27:17"}]}}]},"documentation":{"id":3918,"nodeType":"StructuredDocumentation","src":"10345:165:17","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":4007,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"10524:7:17","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"self","nameLocation":"10565:4:17","nodeType":"VariableDeclaration","scope":4007,"src":"10541:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3920,"nodeType":"UserDefinedTypeName","pathNode":{"id":3919,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"10541:13:17"},"referencedDeclaration":3719,"src":"10541:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3921,"nodeType":"ArrayTypeName","src":"10541:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"key","nameLocation":"10586:3:17","nodeType":"VariableDeclaration","scope":4007,"src":"10579:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3923,"name":"uint32","nodeType":"ElementaryTypeName","src":"10579:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"value","nameLocation":"10607:5:17","nodeType":"VariableDeclaration","scope":4007,"src":"10599:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3925,"name":"uint224","nodeType":"ElementaryTypeName","src":"10599:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10531:87:17"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4007,"src":"10636:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3928,"name":"uint224","nodeType":"ElementaryTypeName","src":"10636:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4007,"src":"10645:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3930,"name":"uint224","nodeType":"ElementaryTypeName","src":"10645:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10635:18:17"},"scope":4544,"src":"10515:859:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4058,"nodeType":"Block","src":"11871:267:17","statements":[{"body":{"id":4054,"nodeType":"Block","src":"11900:211:17","statements":[{"assignments":[4027],"declarations":[{"constant":false,"id":4027,"mutability":"mutable","name":"mid","nameLocation":"11922:3:17","nodeType":"VariableDeclaration","scope":4054,"src":"11914:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"11914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4033,"initialValue":{"arguments":[{"id":4030,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11941:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4031,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"11946:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4028,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"11928:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5435,"src":"11928:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11928:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11914:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4035,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"11983:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":4036,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"11989:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"11969:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11969:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3716,"src":"11969:29:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4039,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"12001:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11969:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4052,"nodeType":"Block","src":"12055:46:17","statements":[{"expression":{"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4046,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12073:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"12079:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12085:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12073:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4051,"nodeType":"ExpressionStatement","src":"12073:13:17"}]},"id":4053,"nodeType":"IfStatement","src":"11965:136:17","trueBody":{"id":4045,"nodeType":"Block","src":"12006:43:17","statements":[{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4041,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"12024:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4042,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"12031:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12024:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"nodeType":"ExpressionStatement","src":"12024:10:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11888:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4024,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"11894:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11888:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4055,"nodeType":"WhileStatement","src":"11881:230:17"},{"expression":{"id":4056,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"12127:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4022,"id":4057,"nodeType":"Return","src":"12120:11:17"}]},"documentation":{"id":4008,"nodeType":"StructuredDocumentation","src":"11380:320:17","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4059,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"11714:18:17","nodeType":"FunctionDefinition","parameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"self","nameLocation":"11766:4:17","nodeType":"VariableDeclaration","scope":4059,"src":"11742:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":4010,"nodeType":"UserDefinedTypeName","pathNode":{"id":4009,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"11742:13:17"},"referencedDeclaration":3719,"src":"11742:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":4011,"nodeType":"ArrayTypeName","src":"11742:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"key","nameLocation":"11787:3:17","nodeType":"VariableDeclaration","scope":4059,"src":"11780:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4013,"name":"uint32","nodeType":"ElementaryTypeName","src":"11780:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"low","nameLocation":"11808:3:17","nodeType":"VariableDeclaration","scope":4059,"src":"11800:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"11800:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"high","nameLocation":"11829:4:17","nodeType":"VariableDeclaration","scope":4059,"src":"11821:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11732:107:17"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4059,"src":"11862:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"11862:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11861:9:17"},"scope":4544,"src":"11705:433:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4110,"nodeType":"Block","src":"12644:267:17","statements":[{"body":{"id":4106,"nodeType":"Block","src":"12673:211:17","statements":[{"assignments":[4079],"declarations":[{"constant":false,"id":4079,"mutability":"mutable","name":"mid","nameLocation":"12695:3:17","nodeType":"VariableDeclaration","scope":4106,"src":"12687:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"12687:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4085,"initialValue":{"arguments":[{"id":4082,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"12714:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4083,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"12719:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4080,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"12701:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5435,"src":"12701:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12701:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12687:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4087,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"12756:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":4088,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"12762:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4086,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4126,"src":"12742:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3719_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12742:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3716,"src":"12742:29:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4091,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"12774:3:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12742:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4104,"nodeType":"Block","src":"12831:43:17","statements":[{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4100,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"12849:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4101,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"12856:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12849:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4103,"nodeType":"ExpressionStatement","src":"12849:10:17"}]},"id":4105,"nodeType":"IfStatement","src":"12738:136:17","trueBody":{"id":4099,"nodeType":"Block","src":"12779:46:17","statements":[{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4093,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"12797:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4094,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"12803:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12809:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12803:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12797:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4098,"nodeType":"ExpressionStatement","src":"12797:13:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"12661:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4076,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"12667:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12661:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4107,"nodeType":"WhileStatement","src":"12654:230:17"},{"expression":{"id":4108,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"12900:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4074,"id":4109,"nodeType":"Return","src":"12893:11:17"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"12144:329:17","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4111,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"12487:18:17","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"self","nameLocation":"12539:4:17","nodeType":"VariableDeclaration","scope":4111,"src":"12515:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":4062,"nodeType":"UserDefinedTypeName","pathNode":{"id":4061,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"12515:13:17"},"referencedDeclaration":3719,"src":"12515:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":4063,"nodeType":"ArrayTypeName","src":"12515:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":4066,"mutability":"mutable","name":"key","nameLocation":"12560:3:17","nodeType":"VariableDeclaration","scope":4111,"src":"12553:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4065,"name":"uint32","nodeType":"ElementaryTypeName","src":"12553:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"low","nameLocation":"12581:3:17","nodeType":"VariableDeclaration","scope":4111,"src":"12573:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"12573:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"high","nameLocation":"12602:4:17","nodeType":"VariableDeclaration","scope":4111,"src":"12594:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"12594:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12505:107:17"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4111,"src":"12635:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"12635:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12634:9:17"},"scope":4544,"src":"12478:433:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4125,"nodeType":"Block","src":"13200:125:17","statements":[{"AST":{"nodeType":"YulBlock","src":"13219:100:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13240:1:17","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"13243:9:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13233:6:17"},"nodeType":"YulFunctionCall","src":"13233:20:17"},"nodeType":"YulExpressionStatement","src":"13233:20:17"},{"nodeType":"YulAssignment","src":"13266:43:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13295:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13298:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13285:9:17"},"nodeType":"YulFunctionCall","src":"13285:18:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13305:3:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13281:3:17"},"nodeType":"YulFunctionCall","src":"13281:28:17"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"13266:11:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4118,"isOffset":false,"isSlot":false,"src":"13305:3:17","valueSize":1},{"declaration":4122,"isOffset":false,"isSlot":true,"src":"13266:11:17","suffix":"slot","valueSize":1},{"declaration":4116,"isOffset":false,"isSlot":true,"src":"13243:9:17","suffix":"slot","valueSize":1}],"id":4124,"nodeType":"InlineAssembly","src":"13210:109:17"}]},"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"12917:132:17","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":4126,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"13063:13:17","nodeType":"FunctionDefinition","parameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"self","nameLocation":"13101:4:17","nodeType":"VariableDeclaration","scope":4126,"src":"13077:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":4114,"nodeType":"UserDefinedTypeName","pathNode":{"id":4113,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"13077:13:17"},"referencedDeclaration":3719,"src":"13077:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":4115,"nodeType":"ArrayTypeName","src":"13077:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3719_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":4118,"mutability":"mutable","name":"pos","nameLocation":"13115:3:17","nodeType":"VariableDeclaration","scope":4126,"src":"13107:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"13107:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13076:43:17"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"result","nameLocation":"13188:6:17","nodeType":"VariableDeclaration","scope":4126,"src":"13166:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":4121,"nodeType":"UserDefinedTypeName","pathNode":{"id":4120,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3719,"src":"13166:13:17"},"referencedDeclaration":3719,"src":"13166:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3719_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"13165:30:17"},"scope":4544,"src":"13054:271:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":4131,"members":[{"constant":false,"id":4130,"mutability":"mutable","name":"_checkpoints","nameLocation":"13373:12:17","nodeType":"VariableDeclaration","scope":4131,"src":"13357:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4128,"nodeType":"UserDefinedTypeName","pathNode":{"id":4127,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"13357:13:17"},"referencedDeclaration":4136,"src":"13357:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4129,"nodeType":"ArrayTypeName","src":"13357:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"13338:8:17","nodeType":"StructDefinition","scope":4544,"src":"13331:61:17","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":4136,"members":[{"constant":false,"id":4133,"mutability":"mutable","name":"_key","nameLocation":"13436:4:17","nodeType":"VariableDeclaration","scope":4136,"src":"13429:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4132,"name":"uint96","nodeType":"ElementaryTypeName","src":"13429:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"_value","nameLocation":"13458:6:17","nodeType":"VariableDeclaration","scope":4136,"src":"13450:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4134,"name":"uint160","nodeType":"ElementaryTypeName","src":"13450:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"13405:13:17","nodeType":"StructDefinition","scope":4544,"src":"13398:73:17","visibility":"public"},{"body":{"id":4158,"nodeType":"Block","src":"13774:62:17","statements":[{"expression":{"arguments":[{"expression":{"id":4152,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"13799:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"13799:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4154,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"13818:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"13823:5:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4151,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3590,4007,4424],"referencedDeclaration":4424,"src":"13791:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13791:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":4150,"id":4157,"nodeType":"Return","src":"13784:45:17"}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"13477:162:17","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":4159,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"13653:4:17","nodeType":"FunctionDefinition","parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"self","nameLocation":"13684:4:17","nodeType":"VariableDeclaration","scope":4159,"src":"13667:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4139,"nodeType":"UserDefinedTypeName","pathNode":{"id":4138,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"13667:8:17"},"referencedDeclaration":4131,"src":"13667:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"key","nameLocation":"13705:3:17","nodeType":"VariableDeclaration","scope":4159,"src":"13698:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4141,"name":"uint96","nodeType":"ElementaryTypeName","src":"13698:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"value","nameLocation":"13726:5:17","nodeType":"VariableDeclaration","scope":4159,"src":"13718:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4143,"name":"uint160","nodeType":"ElementaryTypeName","src":"13718:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13657:80:17"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4159,"src":"13756:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4146,"name":"uint160","nodeType":"ElementaryTypeName","src":"13756:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4159,"src":"13765:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4148,"name":"uint160","nodeType":"ElementaryTypeName","src":"13765:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13755:18:17"},"scope":4544,"src":"13644:192:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4198,"nodeType":"Block","src":"14074:207:17","statements":[{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"len","nameLocation":"14092:3:17","nodeType":"VariableDeclaration","scope":4198,"src":"14084:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"14084:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4175,"initialValue":{"expression":{"expression":{"id":4172,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"14098:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14098:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14098:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14084:38:17"},{"assignments":[4177],"declarations":[{"constant":false,"id":4177,"mutability":"mutable","name":"pos","nameLocation":"14140:3:17","nodeType":"VariableDeclaration","scope":4198,"src":"14132:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"14132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4185,"initialValue":{"arguments":[{"expression":{"id":4179,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"14165:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14165:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4181,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"14184:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14189:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4183,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"14192:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4178,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3694,4111,4528],"referencedDeclaration":4528,"src":"14146:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14146:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14132:64:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"14213:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4187,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"14220:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14213:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4191,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"14244:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14244:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4193,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"14263:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"14230:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14230:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4135,"src":"14230:44:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14213:61:17","trueExpression":{"hexValue":"30","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14226:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4169,"id":4197,"nodeType":"Return","src":"14206:68:17"}]},"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"13842:139:17","text":" @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none."},"id":4199,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"13995:11:17","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"self","nameLocation":"14024:4:17","nodeType":"VariableDeclaration","scope":4199,"src":"14007:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4162,"nodeType":"UserDefinedTypeName","pathNode":{"id":4161,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"14007:8:17"},"referencedDeclaration":4131,"src":"14007:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"key","nameLocation":"14037:3:17","nodeType":"VariableDeclaration","scope":4199,"src":"14030:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4164,"name":"uint96","nodeType":"ElementaryTypeName","src":"14030:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14006:35:17"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4199,"src":"14065:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4167,"name":"uint160","nodeType":"ElementaryTypeName","src":"14065:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14064:9:17"},"scope":4544,"src":"13986:295:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4240,"nodeType":"Block","src":"14496:209:17","statements":[{"assignments":[4211],"declarations":[{"constant":false,"id":4211,"mutability":"mutable","name":"len","nameLocation":"14514:3:17","nodeType":"VariableDeclaration","scope":4240,"src":"14506:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"14506:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4215,"initialValue":{"expression":{"expression":{"id":4212,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"14520:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14520:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14520:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14506:38:17"},{"assignments":[4217],"declarations":[{"constant":false,"id":4217,"mutability":"mutable","name":"pos","nameLocation":"14562:3:17","nodeType":"VariableDeclaration","scope":4240,"src":"14554:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"14554:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4225,"initialValue":{"arguments":[{"expression":{"id":4219,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"14587:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14587:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4221,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"14606:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14611:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4223,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"14614:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4218,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3642,4059,4476],"referencedDeclaration":4476,"src":"14568:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14568:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14554:64:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"14635:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14642:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14635:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4231,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"14664:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14664:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4233,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"14683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14689:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14683:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4230,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"14650:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14650:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4135,"src":"14650:48:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14635:63:17","trueExpression":{"hexValue":"30","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14646:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4209,"id":4239,"nodeType":"Return","src":"14628:70:17"}]},"documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"14287:116:17","text":" @dev Returns the value in the most recent checkpoint with key lower or equal than the search key."},"id":4241,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"14417:11:17","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"self","nameLocation":"14446:4:17","nodeType":"VariableDeclaration","scope":4241,"src":"14429:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4202,"nodeType":"UserDefinedTypeName","pathNode":{"id":4201,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"14429:8:17"},"referencedDeclaration":4131,"src":"14429:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"key","nameLocation":"14459:3:17","nodeType":"VariableDeclaration","scope":4241,"src":"14452:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4204,"name":"uint96","nodeType":"ElementaryTypeName","src":"14452:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14428:35:17"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4241,"src":"14487:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4207,"name":"uint160","nodeType":"ElementaryTypeName","src":"14487:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14486:9:17"},"scope":4544,"src":"14408:297:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4270,"nodeType":"Block","src":"14896:135:17","statements":[{"assignments":[4251],"declarations":[{"constant":false,"id":4251,"mutability":"mutable","name":"pos","nameLocation":"14914:3:17","nodeType":"VariableDeclaration","scope":4270,"src":"14906:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"14906:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4255,"initialValue":{"expression":{"expression":{"id":4252,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"14920:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14920:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14920:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14906:38:17"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"14961:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14968:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14961:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4261,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"14990:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"14990:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"15009:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15015:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15009:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4260,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"14976:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14976:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4135,"src":"14976:48:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14961:63:17","trueExpression":{"hexValue":"30","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14972:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4249,"id":4269,"nodeType":"Return","src":"14954:70:17"}]},"documentation":{"id":4242,"nodeType":"StructuredDocumentation","src":"14711:109:17","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"14834:6:17","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"self","nameLocation":"14858:4:17","nodeType":"VariableDeclaration","scope":4271,"src":"14841:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4244,"nodeType":"UserDefinedTypeName","pathNode":{"id":4243,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"14841:8:17"},"referencedDeclaration":4131,"src":"14841:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"14840:23:17"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"14887:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4247,"name":"uint160","nodeType":"ElementaryTypeName","src":"14887:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14886:9:17"},"scope":4544,"src":"14825:206:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4319,"nodeType":"Block","src":"15398:274:17","statements":[{"assignments":[4285],"declarations":[{"constant":false,"id":4285,"mutability":"mutable","name":"pos","nameLocation":"15416:3:17","nodeType":"VariableDeclaration","scope":4319,"src":"15408:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"15408:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4289,"initialValue":{"expression":{"expression":{"id":4286,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15422:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"15422:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15422:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15408:38:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"15460:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15467:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15460:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4317,"nodeType":"Block","src":"15521:145:17","statements":[{"assignments":[4301],"declarations":[{"constant":false,"id":4301,"mutability":"mutable","name":"ckpt","nameLocation":"15556:4:17","nodeType":"VariableDeclaration","scope":4317,"src":"15535:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4300,"nodeType":"UserDefinedTypeName","pathNode":{"id":4299,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"15535:13:17"},"referencedDeclaration":4136,"src":"15535:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":4309,"initialValue":{"arguments":[{"expression":{"id":4303,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15577:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"15577:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4305,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"15596:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15602:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15596:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4302,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"15563:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15563:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"15535:69:17"},{"expression":{"components":[{"hexValue":"74727565","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15626:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":4311,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"15632:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4133,"src":"15632:9:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":4313,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"15643:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4135,"src":"15643:11:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15625:30:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":4283,"id":4316,"nodeType":"Return","src":"15618:37:17"}]},"id":4318,"nodeType":"IfStatement","src":"15456:210:17","trueBody":{"id":4298,"nodeType":"Block","src":"15470:45:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15492:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15499:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15502:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15491:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":4283,"id":4297,"nodeType":"Return","src":"15484:20:17"}]}}]},"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"15037:168:17","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":4320,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"15219:16:17","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"self","nameLocation":"15253:4:17","nodeType":"VariableDeclaration","scope":4320,"src":"15236:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4274,"nodeType":"UserDefinedTypeName","pathNode":{"id":4273,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"15236:8:17"},"referencedDeclaration":4131,"src":"15236:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"15235:23:17"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"exists","nameLocation":"15324:6:17","nodeType":"VariableDeclaration","scope":4320,"src":"15319:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4277,"name":"bool","nodeType":"ElementaryTypeName","src":"15319:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"_key","nameLocation":"15351:4:17","nodeType":"VariableDeclaration","scope":4320,"src":"15344:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4279,"name":"uint96","nodeType":"ElementaryTypeName","src":"15344:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"_value","nameLocation":"15377:6:17","nodeType":"VariableDeclaration","scope":4320,"src":"15369:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4281,"name":"uint160","nodeType":"ElementaryTypeName","src":"15369:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15305:88:17"},"scope":4544,"src":"15210:462:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4333,"nodeType":"Block","src":"15811:48:17","statements":[{"expression":{"expression":{"expression":{"id":4329,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"15828:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4130,"src":"15828:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15828:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4328,"id":4332,"nodeType":"Return","src":"15821:31:17"}]},"documentation":{"id":4321,"nodeType":"StructuredDocumentation","src":"15678:57:17","text":" @dev Returns the number of checkpoint."},"id":4334,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"15749:6:17","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"self","nameLocation":"15773:4:17","nodeType":"VariableDeclaration","scope":4334,"src":"15756:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4323,"nodeType":"UserDefinedTypeName","pathNode":{"id":4322,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"15756:8:17"},"referencedDeclaration":4131,"src":"15756:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4131_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"15755:23:17"},"returnParameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4334,"src":"15802:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4326,"name":"uint256","nodeType":"ElementaryTypeName","src":"15802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15801:9:17"},"scope":4544,"src":"15740:119:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4423,"nodeType":"Block","src":"16174:720:17","statements":[{"assignments":[4351],"declarations":[{"constant":false,"id":4351,"mutability":"mutable","name":"pos","nameLocation":"16192:3:17","nodeType":"VariableDeclaration","scope":4423,"src":"16184:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"16184:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4354,"initialValue":{"expression":{"id":4352,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"16198:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16198:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16184:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"16224:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16230:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16224:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4421,"nodeType":"Block","src":"16780:108:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":4412,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"16825:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"16838:5:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4411,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"16804:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"16804:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":4408,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"16794:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"16794:9:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$4136_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16794:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4416,"nodeType":"ExpressionStatement","src":"16794:52:17"},{"expression":{"components":[{"hexValue":"30","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16868:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"16871:5:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16867:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":4349,"id":4420,"nodeType":"Return","src":"16860:17:17"}]},"id":4422,"nodeType":"IfStatement","src":"16220:668:17","trueBody":{"id":4407,"nodeType":"Block","src":"16233:541:17","statements":[{"assignments":[4360],"declarations":[{"constant":false,"id":4360,"mutability":"mutable","name":"last","nameLocation":"16320:4:17","nodeType":"VariableDeclaration","scope":4407,"src":"16299:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4359,"nodeType":"UserDefinedTypeName","pathNode":{"id":4358,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"16299:13:17"},"referencedDeclaration":4136,"src":"16299:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":4367,"initialValue":{"arguments":[{"id":4362,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"16341:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"16347:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16353:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16347:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4361,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"16327:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16327:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16299:56:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4369,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"16430:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4133,"src":"16430:9:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4371,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"16443:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16430:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16448:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":4368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16422:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16422:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4375,"nodeType":"ExpressionStatement","src":"16422:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4376,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"16538:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4133,"src":"16538:9:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4378,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"16551:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16538:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4400,"nodeType":"Block","src":"16638:85:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":4395,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"16687:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"16700:5:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4394,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"16666:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"16666:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":4391,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"16656:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"16656:9:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$4136_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16656:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4399,"nodeType":"ExpressionStatement","src":"16656:52:17"}]},"id":4401,"nodeType":"IfStatement","src":"16534:189:17","trueBody":{"id":4390,"nodeType":"Block","src":"16556:76:17","statements":[{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":4381,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"16588:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"16594:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16600:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16594:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4380,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"16574:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16574:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4135,"src":"16574:35:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"16612:5:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"16574:43:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4389,"nodeType":"ExpressionStatement","src":"16574:43:17"}]}},{"expression":{"components":[{"expression":{"id":4402,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"16744:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4135,"src":"16744:11:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":4404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"16757:5:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16743:20:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":4349,"id":4406,"nodeType":"Return","src":"16736:27:17"}]}}]},"documentation":{"id":4335,"nodeType":"StructuredDocumentation","src":"15865:165:17","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":4424,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"16044:7:17","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"self","nameLocation":"16085:4:17","nodeType":"VariableDeclaration","scope":4424,"src":"16061:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4337,"nodeType":"UserDefinedTypeName","pathNode":{"id":4336,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"16061:13:17"},"referencedDeclaration":4136,"src":"16061:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4338,"nodeType":"ArrayTypeName","src":"16061:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"key","nameLocation":"16106:3:17","nodeType":"VariableDeclaration","scope":4424,"src":"16099:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4340,"name":"uint96","nodeType":"ElementaryTypeName","src":"16099:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"value","nameLocation":"16127:5:17","nodeType":"VariableDeclaration","scope":4424,"src":"16119:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4342,"name":"uint160","nodeType":"ElementaryTypeName","src":"16119:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16051:87:17"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4424,"src":"16156:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4345,"name":"uint160","nodeType":"ElementaryTypeName","src":"16156:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4424,"src":"16165:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4347,"name":"uint160","nodeType":"ElementaryTypeName","src":"16165:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16155:18:17"},"scope":4544,"src":"16035:859:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4475,"nodeType":"Block","src":"17391:267:17","statements":[{"body":{"id":4471,"nodeType":"Block","src":"17420:211:17","statements":[{"assignments":[4444],"declarations":[{"constant":false,"id":4444,"mutability":"mutable","name":"mid","nameLocation":"17442:3:17","nodeType":"VariableDeclaration","scope":4471,"src":"17434:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"17434:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4450,"initialValue":{"arguments":[{"id":4447,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"17461:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4448,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"17466:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4445,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"17448:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5435,"src":"17448:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17448:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17434:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4452,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"17503:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4453,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"17509:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4451,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"17489:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17489:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4133,"src":"17489:29:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4456,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"17521:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"17489:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4469,"nodeType":"Block","src":"17575:46:17","statements":[{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4463,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"17593:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"17599:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17605:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17599:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17593:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4468,"nodeType":"ExpressionStatement","src":"17593:13:17"}]},"id":4470,"nodeType":"IfStatement","src":"17485:136:17","trueBody":{"id":4462,"nodeType":"Block","src":"17526:43:17","statements":[{"expression":{"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4458,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"17544:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4459,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"17551:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17544:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4461,"nodeType":"ExpressionStatement","src":"17544:10:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"17408:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4441,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"17414:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17408:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"nodeType":"WhileStatement","src":"17401:230:17"},{"expression":{"id":4473,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"17647:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4439,"id":4474,"nodeType":"Return","src":"17640:11:17"}]},"documentation":{"id":4425,"nodeType":"StructuredDocumentation","src":"16900:320:17","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4476,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"17234:18:17","nodeType":"FunctionDefinition","parameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"self","nameLocation":"17286:4:17","nodeType":"VariableDeclaration","scope":4476,"src":"17262:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4427,"nodeType":"UserDefinedTypeName","pathNode":{"id":4426,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"17262:13:17"},"referencedDeclaration":4136,"src":"17262:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4428,"nodeType":"ArrayTypeName","src":"17262:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"key","nameLocation":"17307:3:17","nodeType":"VariableDeclaration","scope":4476,"src":"17300:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4430,"name":"uint96","nodeType":"ElementaryTypeName","src":"17300:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4433,"mutability":"mutable","name":"low","nameLocation":"17328:3:17","nodeType":"VariableDeclaration","scope":4476,"src":"17320:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4432,"name":"uint256","nodeType":"ElementaryTypeName","src":"17320:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4435,"mutability":"mutable","name":"high","nameLocation":"17349:4:17","nodeType":"VariableDeclaration","scope":4476,"src":"17341:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"17341:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17252:107:17"},"returnParameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4476,"src":"17382:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"17382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17381:9:17"},"scope":4544,"src":"17225:433:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4527,"nodeType":"Block","src":"18164:267:17","statements":[{"body":{"id":4523,"nodeType":"Block","src":"18193:211:17","statements":[{"assignments":[4496],"declarations":[{"constant":false,"id":4496,"mutability":"mutable","name":"mid","nameLocation":"18215:3:17","nodeType":"VariableDeclaration","scope":4523,"src":"18207:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"18207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4502,"initialValue":{"arguments":[{"id":4499,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"18234:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4500,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"18239:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4497,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"18221:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5435,"src":"18221:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18221:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18207:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4504,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"18276:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4505,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"18282:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4503,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3709,4126,4543],"referencedDeclaration":4543,"src":"18262:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4136_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18262:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4133,"src":"18262:29:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4508,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"18294:3:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18262:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4521,"nodeType":"Block","src":"18351:43:17","statements":[{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4517,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"18369:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4518,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"18376:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18369:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"nodeType":"ExpressionStatement","src":"18369:10:17"}]},"id":4522,"nodeType":"IfStatement","src":"18258:136:17","trueBody":{"id":4516,"nodeType":"Block","src":"18299:46:17","statements":[{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4510,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"18317:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4511,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"18323:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18329:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18317:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"18317:13:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"18181:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4493,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"18187:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18181:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4524,"nodeType":"WhileStatement","src":"18174:230:17"},{"expression":{"id":4525,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"18420:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4491,"id":4526,"nodeType":"Return","src":"18413:11:17"}]},"documentation":{"id":4477,"nodeType":"StructuredDocumentation","src":"17664:329:17","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4528,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"18007:18:17","nodeType":"FunctionDefinition","parameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"self","nameLocation":"18059:4:17","nodeType":"VariableDeclaration","scope":4528,"src":"18035:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4479,"nodeType":"UserDefinedTypeName","pathNode":{"id":4478,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"18035:13:17"},"referencedDeclaration":4136,"src":"18035:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4480,"nodeType":"ArrayTypeName","src":"18035:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4483,"mutability":"mutable","name":"key","nameLocation":"18080:3:17","nodeType":"VariableDeclaration","scope":4528,"src":"18073:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4482,"name":"uint96","nodeType":"ElementaryTypeName","src":"18073:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4485,"mutability":"mutable","name":"low","nameLocation":"18101:3:17","nodeType":"VariableDeclaration","scope":4528,"src":"18093:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"18093:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4487,"mutability":"mutable","name":"high","nameLocation":"18122:4:17","nodeType":"VariableDeclaration","scope":4528,"src":"18114:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"18114:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18025:107:17"},"returnParameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4528,"src":"18155:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"18155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18154:9:17"},"scope":4544,"src":"17998:433:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4542,"nodeType":"Block","src":"18720:125:17","statements":[{"AST":{"nodeType":"YulBlock","src":"18739:100:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18760:1:17","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"18763:9:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18753:6:17"},"nodeType":"YulFunctionCall","src":"18753:20:17"},"nodeType":"YulExpressionStatement","src":"18753:20:17"},{"nodeType":"YulAssignment","src":"18786:43:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18815:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18818:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18805:9:17"},"nodeType":"YulFunctionCall","src":"18805:18:17"},{"name":"pos","nodeType":"YulIdentifier","src":"18825:3:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18801:3:17"},"nodeType":"YulFunctionCall","src":"18801:28:17"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"18786:11:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4535,"isOffset":false,"isSlot":false,"src":"18825:3:17","valueSize":1},{"declaration":4539,"isOffset":false,"isSlot":true,"src":"18786:11:17","suffix":"slot","valueSize":1},{"declaration":4533,"isOffset":false,"isSlot":true,"src":"18763:9:17","suffix":"slot","valueSize":1}],"id":4541,"nodeType":"InlineAssembly","src":"18730:109:17"}]},"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"18437:132:17","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":4543,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"18583:13:17","nodeType":"FunctionDefinition","parameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"self","nameLocation":"18621:4:17","nodeType":"VariableDeclaration","scope":4543,"src":"18597:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4531,"nodeType":"UserDefinedTypeName","pathNode":{"id":4530,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"18597:13:17"},"referencedDeclaration":4136,"src":"18597:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4532,"nodeType":"ArrayTypeName","src":"18597:15:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4136_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"pos","nameLocation":"18635:3:17","nodeType":"VariableDeclaration","scope":4543,"src":"18627:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"18627:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18596:43:17"},"returnParameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4539,"mutability":"mutable","name":"result","nameLocation":"18708:6:17","nodeType":"VariableDeclaration","scope":4543,"src":"18686:28:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4538,"nodeType":"UserDefinedTypeName","pathNode":{"id":4537,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4136,"src":"18686:13:17"},"referencedDeclaration":4136,"src":"18686:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4136_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18685:30:17"},"scope":4544,"src":"18574:271:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4545,"src":"708:18139:17","usedErrors":[]}],"src":"193:18655:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4566]},"id":4567,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4546,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"111:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4566,"linearizedBaseContracts":[4566],"name":"Context","nameLocation":"626:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":4555,"nodeType":"Block","src":"702:34:18","statements":[{"expression":{"expression":{"id":4552,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4551,"id":4554,"nodeType":"Return","src":"712:17:18"}]},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:18","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[],"src":"659:2:18"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"693:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4549,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:18"},"scope":4566,"src":"640:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4564,"nodeType":"Block","src":"809:32:18","statements":[{"expression":{"expression":{"id":4561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4560,"id":4563,"nodeType":"Return","src":"819:15:18"}]},"id":4565,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:18","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[],"src":"759:2:18"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4565,"src":"793:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4558,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:18"},"scope":4566,"src":"742:99:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4567,"src":"608:235:18","usedErrors":[]}],"src":"86:758:18"},"id":18},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[4640]},"id":4641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4568,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"112:311:19","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":4640,"linearizedBaseContracts":[4640],"name":"Counters","nameLocation":"432:8:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":4572,"members":[{"constant":false,"id":4571,"mutability":"mutable","name":"_value","nameLocation":"794:6:19","nodeType":"VariableDeclaration","scope":4572,"src":"786:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:19","nodeType":"StructDefinition","scope":4640,"src":"447:374:19","visibility":"public"},{"body":{"id":4583,"nodeType":"Block","src":"901:38:19","statements":[{"expression":{"expression":{"id":4580,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"918:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"918:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4579,"id":4582,"nodeType":"Return","src":"911:21:19"}]},"id":4584,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:19","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"counter","nameLocation":"860:7:19","nodeType":"VariableDeclaration","scope":4584,"src":"844:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4574,"nodeType":"UserDefinedTypeName","pathNode":{"id":4573,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"844:7:19"},"referencedDeclaration":4572,"src":"844:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:19"},"returnParameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4584,"src":"892:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:19"},"scope":4640,"src":"827:112:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4597,"nodeType":"Block","src":"998:70:19","statements":[{"id":4596,"nodeType":"UncheckedBlock","src":"1008:54:19","statements":[{"expression":{"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4590,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"1032:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"1032:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4595,"nodeType":"ExpressionStatement","src":"1032:19:19"}]}]},"id":4598,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:19","nodeType":"FunctionDefinition","parameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"counter","nameLocation":"980:7:19","nodeType":"VariableDeclaration","scope":4598,"src":"964:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4586,"nodeType":"UserDefinedTypeName","pathNode":{"id":4585,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"964:7:19"},"referencedDeclaration":4572,"src":"964:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:19"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[],"src":"998:0:19"},"scope":4640,"src":"945:123:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4625,"nodeType":"Block","src":"1127:176:19","statements":[{"assignments":[4605],"declarations":[{"constant":false,"id":4605,"mutability":"mutable","name":"value","nameLocation":"1145:5:19","nodeType":"VariableDeclaration","scope":4625,"src":"1137:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4608,"initialValue":{"expression":{"id":4606,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"1153:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"1153:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"1185:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":4609,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4615,"nodeType":"ExpressionStatement","src":"1177:49:19"},{"id":4624,"nodeType":"UncheckedBlock","src":"1236:61:19","statements":[{"expression":{"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4616,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"1260:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"1260:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"1277:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4623,"nodeType":"ExpressionStatement","src":"1260:26:19"}]}]},"id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:19","nodeType":"FunctionDefinition","parameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"counter","nameLocation":"1109:7:19","nodeType":"VariableDeclaration","scope":4626,"src":"1093:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4600,"nodeType":"UserDefinedTypeName","pathNode":{"id":4599,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"1093:7:19"},"referencedDeclaration":4572,"src":"1093:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:19"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[],"src":"1127:0:19"},"scope":4640,"src":"1074:229:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4638,"nodeType":"Block","src":"1358:35:19","statements":[{"expression":{"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4632,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"1368:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"1368:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4637,"nodeType":"ExpressionStatement","src":"1368:18:19"}]},"id":4639,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:19","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"counter","nameLocation":"1340:7:19","nodeType":"VariableDeclaration","scope":4639,"src":"1324:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4628,"nodeType":"UserDefinedTypeName","pathNode":{"id":4627,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"1324:7:19"},"referencedDeclaration":4572,"src":"1324:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:19"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[],"src":"1358:0:19"},"scope":4640,"src":"1309:84:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4641,"src":"424:971:19","usedErrors":[]}],"src":"87:1309:19"},"id":19},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6234],"Strings":[4815]},"id":4816,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4642,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4816,"sourceUnit":6235,"src":"126:25:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4644,"nodeType":"StructuredDocumentation","src":"153:34:20","text":" @dev String operations."},"fullyImplemented":true,"id":4815,"linearizedBaseContracts":[4815],"name":"Strings","nameLocation":"196:7:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4647,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:20","nodeType":"VariableDeclaration","scope":4815,"src":"210:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4645,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4650,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:20","nodeType":"VariableDeclaration","scope":4815,"src":"270:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4648,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":4697,"nodeType":"Block","src":"486:625:20","statements":[{"id":4696,"nodeType":"UncheckedBlock","src":"496:609:20","statements":[{"assignments":[4659],"declarations":[{"constant":false,"id":4659,"mutability":"mutable","name":"length","nameLocation":"528:6:20","nodeType":"VariableDeclaration","scope":4696,"src":"520:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4666,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"548:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4660,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"537:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6071,"src":"537:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:20"},{"assignments":[4668],"declarations":[{"constant":false,"id":4668,"mutability":"mutable","name":"buffer","nameLocation":"586:6:20","nodeType":"VariableDeclaration","scope":4696,"src":"572:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4667,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4673,"initialValue":{"arguments":[{"id":4671,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"606:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4669,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:20"},{"assignments":[4675],"declarations":[{"constant":false,"id":4675,"mutability":"mutable","name":"ptr","nameLocation":"635:3:20","nodeType":"VariableDeclaration","scope":4696,"src":"627:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4676,"nodeType":"VariableDeclarationStatement","src":"627:11:20"},{"AST":{"nodeType":"YulBlock","src":"708:67:20","statements":[{"nodeType":"YulAssignment","src":"726:35:20","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:20","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:20"},"nodeType":"YulFunctionCall","src":"745:15:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:20"},"nodeType":"YulFunctionCall","src":"733:28:20"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4668,"isOffset":false,"isSlot":false,"src":"737:6:20","valueSize":1},{"declaration":4659,"isOffset":false,"isSlot":false,"src":"753:6:20","valueSize":1},{"declaration":4675,"isOffset":false,"isSlot":false,"src":"726:3:20","valueSize":1}],"id":4677,"nodeType":"InlineAssembly","src":"699:76:20"},{"body":{"id":4692,"nodeType":"Block","src":"801:267:20","statements":[{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:20","subExpression":{"id":4679,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"819:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ExpressionStatement","src":"819:5:20"},{"AST":{"nodeType":"YulBlock","src":"902:84:20","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:20","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:20"},"nodeType":"YulFunctionCall","src":"942:14:20"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:20"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:20"},"nodeType":"YulFunctionCall","src":"937:30:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:20"},"nodeType":"YulFunctionCall","src":"924:44:20"},"nodeType":"YulExpressionStatement","src":"924:44:20"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4647,"isOffset":false,"isSlot":false,"src":"958:8:20","valueSize":1},{"declaration":4675,"isOffset":false,"isSlot":false,"src":"932:3:20","valueSize":1},{"declaration":4653,"isOffset":false,"isSlot":false,"src":"946:5:20","valueSize":1}],"id":4682,"nodeType":"InlineAssembly","src":"893:93:20"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"1003:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4686,"nodeType":"ExpressionStatement","src":"1003:11:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"1036:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4691,"nodeType":"IfStatement","src":"1032:21:20","trueBody":{"id":4690,"nodeType":"Break","src":"1048:5:20"}}]},"condition":{"hexValue":"74727565","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4693,"nodeType":"WhileStatement","src":"788:280:20"},{"expression":{"id":4694,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"1088:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4657,"id":4695,"nodeType":"Return","src":"1081:13:20"}]}]},"documentation":{"id":4651,"nodeType":"StructuredDocumentation","src":"320:90:20","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4698,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:20","nodeType":"FunctionDefinition","parameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"value","nameLocation":"441:5:20","nodeType":"VariableDeclaration","scope":4698,"src":"433:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:20"},"returnParameters":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4698,"src":"471:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4655,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:20"},"scope":4815,"src":"415:696:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4717,"nodeType":"Block","src":"1290:100:20","statements":[{"id":4716,"nodeType":"UncheckedBlock","src":"1300:84:20","statements":[{"expression":{"arguments":[{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"1343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"1362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4708,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"1350:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6234_$","typeString":"type(library Math)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6194,"src":"1350:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4706,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4718,4794,4814],"referencedDeclaration":4794,"src":"1331:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4705,"id":4715,"nodeType":"Return","src":"1324:49:20"}]}]},"documentation":{"id":4699,"nodeType":"StructuredDocumentation","src":"1117:94:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:20","nodeType":"FunctionDefinition","parameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"value","nameLocation":"1245:5:20","nodeType":"VariableDeclaration","scope":4718,"src":"1237:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:20"},"returnParameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4718,"src":"1275:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4703,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:20"},"scope":4815,"src":"1216:174:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4793,"nodeType":"Block","src":"1603:347:20","statements":[{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:20","nodeType":"VariableDeclaration","scope":4793,"src":"1613:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4728,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4738,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4733,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"1649:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4730,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:20"},{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4739,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"1670:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4741,"indexExpression":{"hexValue":"30","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4744,"nodeType":"ExpressionStatement","src":"1670:15:20"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4745,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"1695:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4747,"indexExpression":{"hexValue":"31","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4750,"nodeType":"ExpressionStatement","src":"1695:15:20"},{"body":{"id":4779,"nodeType":"Block","src":"1765:83:20","statements":[{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4765,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"1779:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4767,"indexExpression":{"id":4766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"1786:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4768,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"1791:8:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4772,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"1800:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4774,"nodeType":"ExpressionStatement","src":"1779:33:20"},{"expression":{"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"1826:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4778,"nodeType":"ExpressionStatement","src":"1826:11:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"1753:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4780,"initializationExpression":{"assignments":[4752],"declarations":[{"constant":false,"id":4752,"mutability":"mutable","name":"i","nameLocation":"1733:1:20","nodeType":"VariableDeclaration","scope":4780,"src":"1725:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4758,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4754,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"1741:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:20"},"loopExpression":{"expression":{"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:20","subExpression":{"id":4762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"1762:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ExpressionStatement","src":"1760:3:20"},"nodeType":"ForStatement","src":"1720:128:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"1865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"1857:55:20"},{"expression":{"arguments":[{"id":4790,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"1936:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4788,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:20","typeDescriptions":{}}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4727,"id":4792,"nodeType":"Return","src":"1922:21:20"}]},"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"1396:112:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4794,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:20","nodeType":"FunctionDefinition","parameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"value","nameLocation":"1542:5:20","nodeType":"VariableDeclaration","scope":4794,"src":"1534:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4723,"mutability":"mutable","name":"length","nameLocation":"1557:6:20","nodeType":"VariableDeclaration","scope":4794,"src":"1549:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:20"},"returnParameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4794,"src":"1588:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4725,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:20"},"scope":4815,"src":"1513:437:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4813,"nodeType":"Block","src":"2175:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4807,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"2220:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4805,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:20","typeDescriptions":{}}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:20","typeDescriptions":{}}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4810,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"2228:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4802,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4718,4794,4814],"referencedDeclaration":4794,"src":"2192:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4801,"id":4812,"nodeType":"Return","src":"2185:59:20"}]},"documentation":{"id":4795,"nodeType":"StructuredDocumentation","src":"1956:141:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4814,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:20","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"addr","nameLocation":"2131:4:20","nodeType":"VariableDeclaration","scope":4814,"src":"2123:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4796,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:20"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4814,"src":"2160:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4799,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:20"},"scope":4815,"src":"2102:149:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4816,"src":"188:2065:20","usedErrors":[]}],"src":"101:2153:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5176],"Math":[6234],"Strings":[4815]},"id":5177,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4817,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5177,"sourceUnit":4816,"src":"137:24:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4819,"nodeType":"StructuredDocumentation","src":"163:205:21","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5176,"linearizedBaseContracts":[5176],"name":"ECDSA","nameLocation":"377:5:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4825,"members":[{"id":4820,"name":"NoError","nameLocation":"417:7:21","nodeType":"EnumValue","src":"417:7:21"},{"id":4821,"name":"InvalidSignature","nameLocation":"434:16:21","nodeType":"EnumValue","src":"434:16:21"},{"id":4822,"name":"InvalidSignatureLength","nameLocation":"460:22:21","nodeType":"EnumValue","src":"460:22:21"},{"id":4823,"name":"InvalidSignatureS","nameLocation":"492:17:21","nodeType":"EnumValue","src":"492:17:21"},{"id":4824,"name":"InvalidSignatureV","nameLocation":"519:17:21","nodeType":"EnumValue","src":"519:17:21"}],"name":"RecoverError","nameLocation":"394:12:21","nodeType":"EnumDefinition","src":"389:175:21"},{"body":{"id":4868,"nodeType":"Block","src":"624:457:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"638:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4832,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"647:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4820,"src":"647:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4837,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"734:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4838,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"743:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4821,"src":"743:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"843:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4847,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"852:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4822,"src":"852:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"965:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4856,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"974:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4823,"src":"974:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4864,"nodeType":"IfStatement","src":"961:114:21","trueBody":{"id":4863,"nodeType":"Block","src":"1006:69:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":4859,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4862,"nodeType":"ExpressionStatement","src":"1020:44:21"}]}},"id":4865,"nodeType":"IfStatement","src":"839:236:21","trueBody":{"id":4854,"nodeType":"Block","src":"889:66:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":4850,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4853,"nodeType":"ExpressionStatement","src":"903:41:21"}]}},"id":4866,"nodeType":"IfStatement","src":"730:345:21","trueBody":{"id":4845,"nodeType":"Block","src":"774:59:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":4841,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4844,"nodeType":"ExpressionStatement","src":"788:34:21"}]}},"id":4867,"nodeType":"IfStatement","src":"634:441:21","trueBody":{"id":4836,"nodeType":"Block","src":"669:55:21","statements":[{"functionReturnParameters":4830,"id":4835,"nodeType":"Return","src":"683:7:21"}]}}]},"id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:21","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"error","nameLocation":"604:5:21","nodeType":"VariableDeclaration","scope":4869,"src":"591:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4827,"nodeType":"UserDefinedTypeName","pathNode":{"id":4826,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4825,"src":"591:12:21"},"referencedDeclaration":4825,"src":"591:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:21"},"returnParameters":{"id":4830,"nodeType":"ParameterList","parameters":[],"src":"624:0:21"},"scope":5176,"src":"570:511:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4914,"nodeType":"Block","src":"2249:626:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4882,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"2263:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4912,"nodeType":"Block","src":"2788:81:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4904,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:21","typeDescriptions":{}}},"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4908,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"2822:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4822,"src":"2822:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}}],"id":4910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4881,"id":4911,"nodeType":"Return","src":"2802:56:21"}]},"id":4913,"nodeType":"IfStatement","src":"2259:610:21","trueBody":{"id":4903,"nodeType":"Block","src":"2287:495:21","statements":[{"assignments":[4887],"declarations":[{"constant":false,"id":4887,"mutability":"mutable","name":"r","nameLocation":"2309:1:21","nodeType":"VariableDeclaration","scope":4903,"src":"2301:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4888,"nodeType":"VariableDeclarationStatement","src":"2301:9:21"},{"assignments":[4890],"declarations":[{"constant":false,"id":4890,"mutability":"mutable","name":"s","nameLocation":"2332:1:21","nodeType":"VariableDeclaration","scope":4903,"src":"2324:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4891,"nodeType":"VariableDeclarationStatement","src":"2324:9:21"},{"assignments":[4893],"declarations":[{"constant":false,"id":4893,"mutability":"mutable","name":"v","nameLocation":"2353:1:21","nodeType":"VariableDeclaration","scope":4903,"src":"2347:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4892,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4894,"nodeType":"VariableDeclarationStatement","src":"2347:7:21"},{"AST":{"nodeType":"YulBlock","src":"2555:171:21","statements":[{"nodeType":"YulAssignment","src":"2573:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:21"},"nodeType":"YulFunctionCall","src":"2584:20:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:21"},"nodeType":"YulFunctionCall","src":"2578:27:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:21"}]},{"nodeType":"YulAssignment","src":"2622:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:21"},"nodeType":"YulFunctionCall","src":"2633:20:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:21"},"nodeType":"YulFunctionCall","src":"2627:27:21"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:21"}]},{"nodeType":"YulAssignment","src":"2671:41:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:21","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:21"},"nodeType":"YulFunctionCall","src":"2690:20:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:21"},"nodeType":"YulFunctionCall","src":"2684:27:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:21"},"nodeType":"YulFunctionCall","src":"2676:36:21"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4887,"isOffset":false,"isSlot":false,"src":"2573:1:21","valueSize":1},{"declaration":4890,"isOffset":false,"isSlot":false,"src":"2622:1:21","valueSize":1},{"declaration":4874,"isOffset":false,"isSlot":false,"src":"2588:9:21","valueSize":1},{"declaration":4874,"isOffset":false,"isSlot":false,"src":"2637:9:21","valueSize":1},{"declaration":4874,"isOffset":false,"isSlot":false,"src":"2694:9:21","valueSize":1},{"declaration":4893,"isOffset":false,"isSlot":false,"src":"2671:1:21","valueSize":1}],"id":4895,"nodeType":"InlineAssembly","src":"2546:180:21"},{"expression":{"arguments":[{"id":4897,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"2757:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4898,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"2763:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4899,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"2766:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4900,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"2769:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4896,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4915,4989,5083],"referencedDeclaration":5083,"src":"2746:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4881,"id":4902,"nodeType":"Return","src":"2739:32:21"}]}}]},"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"1087:1053:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":4915,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:21","nodeType":"FunctionDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"hash","nameLocation":"2173:4:21","nodeType":"VariableDeclaration","scope":4915,"src":"2165:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"signature","nameLocation":"2192:9:21","nodeType":"VariableDeclaration","scope":4915,"src":"2179:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4873,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:21"},"returnParameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4915,"src":"2226:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4876,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4915,"src":"2235:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4879,"nodeType":"UserDefinedTypeName","pathNode":{"id":4878,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4825,"src":"2235:12:21"},"referencedDeclaration":4825,"src":"2235:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:21"},"scope":5176,"src":"2145:730:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"3748:140:21","statements":[{"assignments":[4926,4929],"declarations":[{"constant":false,"id":4926,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:21","nodeType":"VariableDeclaration","scope":4941,"src":"3759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4925,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4929,"mutability":"mutable","name":"error","nameLocation":"3791:5:21","nodeType":"VariableDeclaration","scope":4941,"src":"3778:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4928,"nodeType":"UserDefinedTypeName","pathNode":{"id":4927,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4825,"src":"3778:12:21"},"referencedDeclaration":4825,"src":"3778:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4934,"initialValue":{"arguments":[{"id":4931,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3811:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4932,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"3817:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4930,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4915,4989,5083],"referencedDeclaration":4915,"src":"3800:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:21"},{"expression":{"arguments":[{"id":4936,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"3849:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}],"id":4935,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"3837:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4825_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4938,"nodeType":"ExpressionStatement","src":"3837:18:21"},{"expression":{"id":4939,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"3872:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4924,"id":4940,"nodeType":"Return","src":"3865:16:21"}]},"documentation":{"id":4916,"nodeType":"StructuredDocumentation","src":"2881:775:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:21","nodeType":"FunctionDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"hash","nameLocation":"3686:4:21","nodeType":"VariableDeclaration","scope":4942,"src":"3678:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4920,"mutability":"mutable","name":"signature","nameLocation":"3705:9:21","nodeType":"VariableDeclaration","scope":4942,"src":"3692:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4919,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:21"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"3739:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:21"},"scope":5176,"src":"3661:227:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"4275:203:21","statements":[{"assignments":[4958],"declarations":[{"constant":false,"id":4958,"mutability":"mutable","name":"s","nameLocation":"4293:1:21","nodeType":"VariableDeclaration","scope":4988,"src":"4285:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4965,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"4297:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:21","typeDescriptions":{}}},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:21"},{"assignments":[4967],"declarations":[{"constant":false,"id":4967,"mutability":"mutable","name":"v","nameLocation":"4393:1:21","nodeType":"VariableDeclaration","scope":4988,"src":"4387:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4966,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4980,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4972,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"4412:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:21","typeDescriptions":{}}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:21","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4968,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:21","typeDescriptions":{}}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:21"},{"expression":{"arguments":[{"id":4982,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"4457:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4983,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"4463:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4984,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"4466:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4985,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"4469:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4981,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4915,4989,5083],"referencedDeclaration":5083,"src":"4446:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4956,"id":4987,"nodeType":"Return","src":"4439:32:21"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"3894:243:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:21","nodeType":"FunctionDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"hash","nameLocation":"4179:4:21","nodeType":"VariableDeclaration","scope":4989,"src":"4171:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"r","nameLocation":"4201:1:21","nodeType":"VariableDeclaration","scope":4989,"src":"4193:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"vs","nameLocation":"4220:2:21","nodeType":"VariableDeclaration","scope":4989,"src":"4212:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:21"},"returnParameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4989,"src":"4252:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4951,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4989,"src":"4261:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4954,"nodeType":"UserDefinedTypeName","pathNode":{"id":4953,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4825,"src":"4261:12:21"},"referencedDeclaration":4825,"src":"4261:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:21"},"scope":5176,"src":"4142:336:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5018,"nodeType":"Block","src":"4759:136:21","statements":[{"assignments":[5002,5005],"declarations":[{"constant":false,"id":5002,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:21","nodeType":"VariableDeclaration","scope":5018,"src":"4770:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5001,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"error","nameLocation":"4802:5:21","nodeType":"VariableDeclaration","scope":5018,"src":"4789:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5004,"nodeType":"UserDefinedTypeName","pathNode":{"id":5003,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4825,"src":"4789:12:21"},"referencedDeclaration":4825,"src":"4789:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5011,"initialValue":{"arguments":[{"id":5007,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4822:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5008,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4828:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5009,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"4831:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5006,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4915,4989,5083],"referencedDeclaration":4989,"src":"4811:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:21"},{"expression":{"arguments":[{"id":5013,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"4856:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}],"id":5012,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"4844:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4825_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5015,"nodeType":"ExpressionStatement","src":"4844:18:21"},{"expression":{"id":5016,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"4879:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5000,"id":5017,"nodeType":"Return","src":"4872:16:21"}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"4484:154:21","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:21","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"hash","nameLocation":"4677:4:21","nodeType":"VariableDeclaration","scope":5019,"src":"4669:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"r","nameLocation":"4699:1:21","nodeType":"VariableDeclaration","scope":5019,"src":"4691:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4996,"mutability":"mutable","name":"vs","nameLocation":"4718:2:21","nodeType":"VariableDeclaration","scope":5019,"src":"4710:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:21"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5019,"src":"4750:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4998,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:21"},"scope":5176,"src":"4643:252:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5082,"nodeType":"Block","src":"5218:1345:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5038,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"6114:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5036,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:21","typeDescriptions":{}}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"nodeType":"IfStatement","src":"6102:161:21","trueBody":{"id":5050,"nodeType":"Block","src":"6187:76:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5042,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:21","typeDescriptions":{}}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5046,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"6221:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4823,"src":"6221:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}}],"id":5048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5035,"id":5049,"nodeType":"Return","src":"6201:51:21"}]}},{"assignments":[5053],"declarations":[{"constant":false,"id":5053,"mutability":"mutable","name":"signer","nameLocation":"6365:6:21","nodeType":"VariableDeclaration","scope":5082,"src":"6357:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5052,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5060,"initialValue":{"arguments":[{"id":5055,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"6384:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5056,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"6390:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5057,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"6393:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5058,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"6396:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5054,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:21","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"6412:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5062,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:21","typeDescriptions":{}}},"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5076,"nodeType":"IfStatement","src":"6408:101:21","trueBody":{"id":5075,"nodeType":"Block","src":"6434:75:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5067,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:21","typeDescriptions":{}}},"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6456:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5071,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"6468:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4821,"src":"6468:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}}],"id":5073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5035,"id":5074,"nodeType":"Return","src":"6448:50:21"}]}},{"expression":{"components":[{"id":5077,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"6527:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5078,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"6535:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4820,"src":"6535:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}}],"id":5080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5035,"id":5081,"nodeType":"Return","src":"6519:37:21"}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"4901:163:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":5083,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:21","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"hash","nameLocation":"5106:4:21","nodeType":"VariableDeclaration","scope":5083,"src":"5098:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"v","nameLocation":"5126:1:21","nodeType":"VariableDeclaration","scope":5083,"src":"5120:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5023,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5026,"mutability":"mutable","name":"r","nameLocation":"5145:1:21","nodeType":"VariableDeclaration","scope":5083,"src":"5137:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"s","nameLocation":"5164:1:21","nodeType":"VariableDeclaration","scope":5083,"src":"5156:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:21"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5083,"src":"5195:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5030,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5083,"src":"5204:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5033,"nodeType":"UserDefinedTypeName","pathNode":{"id":5032,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4825,"src":"5204:12:21"},"referencedDeclaration":4825,"src":"5204:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:21"},"scope":5176,"src":"5069:1494:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5115,"nodeType":"Block","src":"6828:138:21","statements":[{"assignments":[5098,5101],"declarations":[{"constant":false,"id":5098,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:21","nodeType":"VariableDeclaration","scope":5115,"src":"6839:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5097,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5101,"mutability":"mutable","name":"error","nameLocation":"6871:5:21","nodeType":"VariableDeclaration","scope":5115,"src":"6858:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5100,"nodeType":"UserDefinedTypeName","pathNode":{"id":5099,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":4825,"src":"6858:12:21"},"referencedDeclaration":4825,"src":"6858:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5108,"initialValue":{"arguments":[{"id":5103,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"6891:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5104,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"6897:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5105,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"6900:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5106,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"6903:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5102,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4915,4989,5083],"referencedDeclaration":5083,"src":"6880:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6880:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4825_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:21"},{"expression":{"arguments":[{"id":5110,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"6927:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4825","typeString":"enum ECDSA.RecoverError"}],"id":5109,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"6915:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4825_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5112,"nodeType":"ExpressionStatement","src":"6915:18:21"},{"expression":{"id":5113,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"6950:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5096,"id":5114,"nodeType":"Return","src":"6943:16:21"}]},"documentation":{"id":5084,"nodeType":"StructuredDocumentation","src":"6569:122:21","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5116,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:21","nodeType":"FunctionDefinition","parameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"hash","nameLocation":"6730:4:21","nodeType":"VariableDeclaration","scope":5116,"src":"6722:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"v","nameLocation":"6750:1:21","nodeType":"VariableDeclaration","scope":5116,"src":"6744:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5087,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5090,"mutability":"mutable","name":"r","nameLocation":"6769:1:21","nodeType":"VariableDeclaration","scope":5116,"src":"6761:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5092,"mutability":"mutable","name":"s","nameLocation":"6788:1:21","nodeType":"VariableDeclaration","scope":5116,"src":"6780:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:21"},"returnParameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5116,"src":"6819:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5094,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:21"},"scope":5176,"src":"6696:270:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5132,"nodeType":"Block","src":"7334:187:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":5128,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7508:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5125,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7455:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5124,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7445:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5123,"id":5131,"nodeType":"Return","src":"7438:76:21"}]},"documentation":{"id":5117,"nodeType":"StructuredDocumentation","src":"6972:279:21","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5133,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:21","nodeType":"FunctionDefinition","parameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"hash","nameLocation":"7296:4:21","nodeType":"VariableDeclaration","scope":5133,"src":"7288:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:21"},"returnParameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5133,"src":"7325:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:21"},"scope":5176,"src":"7256:265:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5154,"nodeType":"Block","src":"7886:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":5147,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"7981:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7981:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5145,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"7964:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4815_$","typeString":"type(library Strings)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4698,"src":"7964:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5150,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"7992:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5142,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5141,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7903:92:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5140,"id":5153,"nodeType":"Return","src":"7896:99:21"}]},"documentation":{"id":5134,"nodeType":"StructuredDocumentation","src":"7527:274:21","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5155,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:21","nodeType":"FunctionDefinition","parameters":{"id":5137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5136,"mutability":"mutable","name":"s","nameLocation":"7851:1:21","nodeType":"VariableDeclaration","scope":5155,"src":"7838:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5135,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:21"},"returnParameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5155,"src":"7877:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:21"},"scope":5176,"src":"7806:196:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"8443:92:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":5169,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"8499:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5170,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"8516:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5166,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5165,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8460:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5164,"id":5173,"nodeType":"Return","src":"8453:75:21"}]},"documentation":{"id":5156,"nodeType":"StructuredDocumentation","src":"8008:328:21","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:21","nodeType":"FunctionDefinition","parameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:21","nodeType":"VariableDeclaration","scope":5175,"src":"8366:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5160,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:21","nodeType":"VariableDeclaration","scope":5175,"src":"8391:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:21"},"returnParameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"8434:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:21"},"scope":5176,"src":"8341:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5177,"src":"369:8168:21","usedErrors":[]}],"src":"112:8426:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[5176],"EIP712":[5330],"Math":[6234],"Strings":[4815]},"id":5331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5178,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:22"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":5179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5331,"sourceUnit":5177,"src":"138:21:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":5180,"nodeType":"StructuredDocumentation","src":"161:1142:22","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":5330,"linearizedBaseContracts":[5330],"name":"EIP712","nameLocation":"1322:6:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5182,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1598:24:22","nodeType":"VariableDeclaration","scope":5330,"src":"1572:50:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1572:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5184,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1654:16:22","nodeType":"VariableDeclaration","scope":5330,"src":"1628:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5186,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1702:12:22","nodeType":"VariableDeclaration","scope":5330,"src":"1676:38:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5185,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":5188,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1747:12:22","nodeType":"VariableDeclaration","scope":5330,"src":"1721:38:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1721:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5190,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1791:15:22","nodeType":"VariableDeclaration","scope":5330,"src":"1765:41:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5192,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1838:10:22","nodeType":"VariableDeclaration","scope":5330,"src":"1812:36:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1812:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":5256,"nodeType":"Block","src":"2519:547:22","statements":[{"assignments":[5201],"declarations":[{"constant":false,"id":5201,"mutability":"mutable","name":"hashedName","nameLocation":"2537:10:22","nodeType":"VariableDeclaration","scope":5256,"src":"2529:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2529:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5208,"initialValue":{"arguments":[{"arguments":[{"id":5205,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"2566:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2560:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5203,"name":"bytes","nodeType":"ElementaryTypeName","src":"2560:5:22","typeDescriptions":{}}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2560:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5202,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2550:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2550:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2529:43:22"},{"assignments":[5210],"declarations":[{"constant":false,"id":5210,"mutability":"mutable","name":"hashedVersion","nameLocation":"2590:13:22","nodeType":"VariableDeclaration","scope":5256,"src":"2582:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2582:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5217,"initialValue":{"arguments":[{"arguments":[{"id":5214,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"2622:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2616:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5212,"name":"bytes","nodeType":"ElementaryTypeName","src":"2616:5:22","typeDescriptions":{}}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5211,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2606:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2606:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2582:49:22"},{"assignments":[5219],"declarations":[{"constant":false,"id":5219,"mutability":"mutable","name":"typeHash","nameLocation":"2649:8:22","nodeType":"VariableDeclaration","scope":5256,"src":"2641:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5223,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2683:84:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":5220,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2660:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2660:117:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2641:136:22"},{"expression":{"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5224,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"2787:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5225,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"2802:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2787:25:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5227,"nodeType":"ExpressionStatement","src":"2787:25:22"},{"expression":{"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5228,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"2822:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5229,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"2840:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2822:31:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5231,"nodeType":"ExpressionStatement","src":"2822:31:22"},{"expression":{"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"2863:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5233,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2882:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"2882:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5236,"nodeType":"ExpressionStatement","src":"2863:32:22"},{"expression":{"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5237,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"2905:24:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5239,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"2954:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5240,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"2964:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5241,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"2976:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5238,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"2932:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2932:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2905:85:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5244,"nodeType":"ExpressionStatement","src":"2905:85:22"},{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5245,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"3000:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5248,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3023:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5330","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5330","typeString":"contract EIP712"}],"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3015:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5246,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:22","typeDescriptions":{}}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3015:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3000:28:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5251,"nodeType":"ExpressionStatement","src":"3000:28:22"},{"expression":{"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5252,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"3038:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5253,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"3051:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3038:21:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5255,"nodeType":"ExpressionStatement","src":"3038:21:22"}]},"documentation":{"id":5193,"nodeType":"StructuredDocumentation","src":"1900:559:22","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":5257,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"name","nameLocation":"2490:4:22","nodeType":"VariableDeclaration","scope":5257,"src":"2476:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5194,"name":"string","nodeType":"ElementaryTypeName","src":"2476:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5197,"mutability":"mutable","name":"version","nameLocation":"2510:7:22","nodeType":"VariableDeclaration","scope":5257,"src":"2496:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5196,"name":"string","nodeType":"ElementaryTypeName","src":"2496:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2475:43:22"},"returnParameters":{"id":5199,"nodeType":"ParameterList","parameters":[],"src":"2519:0:22"},"scope":5330,"src":"2464:602:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5285,"nodeType":"Block","src":"3214:246:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5265,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5330","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5330","typeString":"contract EIP712"}],"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5263,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:22","typeDescriptions":{}}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5267,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"3245:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3228:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5269,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3261:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3261:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5271,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"3278:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3261:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3228:66:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5283,"nodeType":"Block","src":"3358:96:22","statements":[{"expression":{"arguments":[{"id":5278,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"3401:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5279,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"3413:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5280,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"3427:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5277,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"3379:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3379:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5262,"id":5282,"nodeType":"Return","src":"3372:71:22"}]},"id":5284,"nodeType":"IfStatement","src":"3224:230:22","trueBody":{"id":5276,"nodeType":"Block","src":"3296:56:22","statements":[{"expression":{"id":5274,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"3317:24:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5262,"id":5275,"nodeType":"Return","src":"3310:31:22"}]}}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"3072:75:22","text":" @dev Returns the domain separator for the current chain."},"id":5286,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3161:18:22","nodeType":"FunctionDefinition","parameters":{"id":5259,"nodeType":"ParameterList","parameters":[],"src":"3179:2:22"},"returnParameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5286,"src":"3205:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3204:9:22"},"scope":5330,"src":"3152:308:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"3615:108:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":5300,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"3653:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5301,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"3663:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5302,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"3673:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5303,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3686:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3686:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5307,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3709:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5330","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5330","typeString":"contract EIP712"}],"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5305,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:22","typeDescriptions":{}}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3701:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5298,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3642:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3642:10:22","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3642:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5297,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3632:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3632:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5296,"id":5311,"nodeType":"Return","src":"3625:91:22"}]},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3475:21:22","nodeType":"FunctionDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"typeHash","nameLocation":"3514:8:22","nodeType":"VariableDeclaration","scope":5313,"src":"3506:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3506:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5290,"mutability":"mutable","name":"nameHash","nameLocation":"3540:8:22","nodeType":"VariableDeclaration","scope":5313,"src":"3532:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3532:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"versionHash","nameLocation":"3566:11:22","nodeType":"VariableDeclaration","scope":5313,"src":"3558:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3558:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3496:87:22"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"3606:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3606:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3605:9:22"},"scope":5330,"src":"3466:257:22","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5328,"nodeType":"Block","src":"4434:79:22","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5323,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"4473:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4473:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5325,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"4495:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5321,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"4451:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5176_$","typeString":"type(library ECDSA)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":5175,"src":"4451:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4451:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5320,"id":5327,"nodeType":"Return","src":"4444:62:22"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"3729:614:22","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4357:16:22","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"structHash","nameLocation":"4382:10:22","nodeType":"VariableDeclaration","scope":5329,"src":"4374:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4374:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4373:20:22"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5329,"src":"4425:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4425:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4424:9:22"},"scope":5330,"src":"4348:165:22","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":5331,"src":"1304:3211:22","usedErrors":[]}],"src":"113:4403:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","exportedSymbols":{"ECDSA":[5176],"EIP712":[5330],"Math":[6234],"Strings":[4815]},"id":5334,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5332,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"119:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"./EIP712.sol","id":5333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5334,"sourceUnit":5331,"src":"208:22:23","symbolAliases":[],"unitAlias":""}],"src":"119:112:23"},"id":23},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5357],"IERC165":[5369]},"id":5358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5335,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:24"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5358,"sourceUnit":5370,"src":"124:23:24","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5338,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":5369,"src":"754:7:24"},"id":5339,"nodeType":"InheritanceSpecifier","src":"754:7:24"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5337,"nodeType":"StructuredDocumentation","src":"149:576:24","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":5357,"linearizedBaseContracts":[5357,5369],"name":"ERC165","nameLocation":"744:6:24","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5368],"body":{"id":5355,"nodeType":"Block","src":"920:64:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"937:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5350,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"957:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5369_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5369_$","typeString":"type(contract IERC165)"}],"id":5349,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5369","typeString":"type(contract IERC165)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5347,"id":5354,"nodeType":"Return","src":"930:47:24"}]},"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"768:56:24","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5356,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:24","nodeType":"FunctionDefinition","overrides":{"id":5344,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:24"},"parameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:24","nodeType":"VariableDeclaration","scope":5356,"src":"856:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5341,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:24"},"returnParameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5356,"src":"914:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5345,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:24"},"scope":5357,"src":"829:155:24","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5358,"src":"726:260:24","usedErrors":[]}],"src":"99:888:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5369]},"id":5370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5359,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"125:279:25","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5369,"linearizedBaseContracts":[5369],"name":"IERC165","nameLocation":"415:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5361,"nodeType":"StructuredDocumentation","src":"429:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5368,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:25","nodeType":"FunctionDefinition","parameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:25","nodeType":"VariableDeclaration","scope":5368,"src":"801:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5362,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:25"},"returnParameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5368,"src":"844:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5365,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:25"},"scope":5369,"src":"774:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5370,"src":"405:447:25","usedErrors":[]}],"src":"100:753:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6234]},"id":6235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5371,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"128:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6234,"linearizedBaseContracts":[6234],"name":"Math","nameLocation":"210:4:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5376,"members":[{"id":5373,"name":"Down","nameLocation":"245:4:26","nodeType":"EnumValue","src":"245:4:26"},{"id":5374,"name":"Up","nameLocation":"287:2:26","nodeType":"EnumValue","src":"287:2:26"},{"id":5375,"name":"Zero","nameLocation":"318:4:26","nodeType":"EnumValue","src":"318:4:26"}],"name":"Rounding","nameLocation":"226:8:26","nodeType":"EnumDefinition","src":"221:122:26"},{"body":{"id":5393,"nodeType":"Block","src":"480:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"497:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"501:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"509:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:26","trueExpression":{"id":5389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"505:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5385,"id":5392,"nodeType":"Return","src":"490:20:26"}]},"documentation":{"id":5377,"nodeType":"StructuredDocumentation","src":"349:59:26","text":" @dev Returns the largest of two numbers."},"id":5394,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:26","nodeType":"FunctionDefinition","parameters":{"id":5382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"a","nameLocation":"434:1:26","nodeType":"VariableDeclaration","scope":5394,"src":"426:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5378,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5381,"mutability":"mutable","name":"b","nameLocation":"445:1:26","nodeType":"VariableDeclaration","scope":5394,"src":"437:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5380,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:26"},"returnParameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5394,"src":"471:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:26"},"scope":6234,"src":"413:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5411,"nodeType":"Block","src":"655:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"672:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5405,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"676:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5408,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"684:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:26","trueExpression":{"id":5407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"680:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5403,"id":5410,"nodeType":"Return","src":"665:20:26"}]},"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"523:60:26","text":" @dev Returns the smallest of two numbers."},"id":5412,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:26","nodeType":"FunctionDefinition","parameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"a","nameLocation":"609:1:26","nodeType":"VariableDeclaration","scope":5412,"src":"601:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5399,"mutability":"mutable","name":"b","nameLocation":"620:1:26","nodeType":"VariableDeclaration","scope":5412,"src":"612:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:26"},"returnParameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5412,"src":"646:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:26"},"scope":6234,"src":"588:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5434,"nodeType":"Block","src":"876:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"931:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"935:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"941:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"945:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5421,"id":5433,"nodeType":"Return","src":"923:28:26"}]},"documentation":{"id":5413,"nodeType":"StructuredDocumentation","src":"698:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5435,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:26","nodeType":"FunctionDefinition","parameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"a","nameLocation":"830:1:26","nodeType":"VariableDeclaration","scope":5435,"src":"822:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5417,"mutability":"mutable","name":"b","nameLocation":"841:1:26","nodeType":"VariableDeclaration","scope":5435,"src":"833:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:26"},"returnParameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5435,"src":"867:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:26"},"scope":6234,"src":"805:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5459,"nodeType":"Block","src":"1228:123:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"1316:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"1330:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"1339:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:26","trueExpression":{"hexValue":"30","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5444,"id":5458,"nodeType":"Return","src":"1309:35:26"}]},"documentation":{"id":5436,"nodeType":"StructuredDocumentation","src":"964:188:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":5460,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:26","nodeType":"FunctionDefinition","parameters":{"id":5441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"a","nameLocation":"1182:1:26","nodeType":"VariableDeclaration","scope":5460,"src":"1174:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5440,"mutability":"mutable","name":"b","nameLocation":"1193:1:26","nodeType":"VariableDeclaration","scope":5460,"src":"1185:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:26"},"returnParameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5460,"src":"1219:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:26"},"scope":6234,"src":"1157:194:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5581,"nodeType":"Block","src":"1795:3797:26","statements":[{"id":5580,"nodeType":"UncheckedBlock","src":"1805:3781:26","statements":[{"assignments":[5473],"declarations":[{"constant":false,"id":5473,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:26","nodeType":"VariableDeclaration","scope":5580,"src":"2126:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5474,"nodeType":"VariableDeclarationStatement","src":"2126:13:26"},{"assignments":[5476],"declarations":[{"constant":false,"id":5476,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:26","nodeType":"VariableDeclaration","scope":5580,"src":"2198:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5477,"nodeType":"VariableDeclarationStatement","src":"2198:13:26"},{"AST":{"nodeType":"YulBlock","src":"2278:157:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:26"},"nodeType":"YulFunctionCall","src":"2319:6:26"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:26"},"nodeType":"YulFunctionCall","src":"2306:20:26"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:26","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:26"},"nodeType":"YulFunctionCall","src":"2352:9:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:26"}]},{"nodeType":"YulAssignment","src":"2378:43:26","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:26"},"nodeType":"YulFunctionCall","src":"2391:14:26"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:26"},"nodeType":"YulFunctionCall","src":"2407:13:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:26"},"nodeType":"YulFunctionCall","src":"2387:34:26"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:26"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5473,"isOffset":false,"isSlot":false,"src":"2343:5:26","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"2399:5:26","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"2414:5:26","valueSize":1},{"declaration":5476,"isOffset":false,"isSlot":false,"src":"2378:5:26","valueSize":1},{"declaration":5463,"isOffset":false,"isSlot":false,"src":"2313:1:26","valueSize":1},{"declaration":5463,"isOffset":false,"isSlot":false,"src":"2356:1:26","valueSize":1},{"declaration":5465,"isOffset":false,"isSlot":false,"src":"2316:1:26","valueSize":1},{"declaration":5465,"isOffset":false,"isSlot":false,"src":"2359:1:26","valueSize":1}],"id":5478,"nodeType":"InlineAssembly","src":"2269:166:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"2516:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5487,"nodeType":"IfStatement","src":"2512:75:26","trueBody":{"id":5486,"nodeType":"Block","src":"2528:59:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"2553:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5483,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"2561:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5471,"id":5485,"nodeType":"Return","src":"2546:26:26"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5489,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"2697:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5490,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"2711:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5493,"nodeType":"ExpressionStatement","src":"2689:28:26"},{"assignments":[5495],"declarations":[{"constant":false,"id":5495,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:26","nodeType":"VariableDeclaration","scope":5580,"src":"2973:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5496,"nodeType":"VariableDeclarationStatement","src":"2973:17:26"},{"AST":{"nodeType":"YulBlock","src":"3013:291:26","statements":[{"nodeType":"YulAssignment","src":"3082:38:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:26"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:26"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:26"},"nodeType":"YulFunctionCall","src":"3095:25:26"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:26"}]},{"nodeType":"YulAssignment","src":"3202:41:26","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:26"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:26"},"nodeType":"YulFunctionCall","src":"3222:20:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:26"},"nodeType":"YulFunctionCall","src":"3211:32:26"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:26"}]},{"nodeType":"YulAssignment","src":"3260:30:26","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:26"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:26"},"nodeType":"YulFunctionCall","src":"3269:21:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:26"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5467,"isOffset":false,"isSlot":false,"src":"3108:11:26","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"3236:5:26","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"3260:5:26","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"3273:5:26","valueSize":1},{"declaration":5476,"isOffset":false,"isSlot":false,"src":"3202:5:26","valueSize":1},{"declaration":5476,"isOffset":false,"isSlot":false,"src":"3215:5:26","valueSize":1},{"declaration":5495,"isOffset":false,"isSlot":false,"src":"3082:9:26","valueSize":1},{"declaration":5495,"isOffset":false,"isSlot":false,"src":"3225:9:26","valueSize":1},{"declaration":5495,"isOffset":false,"isSlot":false,"src":"3280:9:26","valueSize":1},{"declaration":5463,"isOffset":false,"isSlot":false,"src":"3102:1:26","valueSize":1},{"declaration":5465,"isOffset":false,"isSlot":false,"src":"3105:1:26","valueSize":1}],"id":5497,"nodeType":"InlineAssembly","src":"3004:300:26"},{"assignments":[5499],"declarations":[{"constant":false,"id":5499,"mutability":"mutable","name":"twos","nameLocation":"3619:4:26","nodeType":"VariableDeclaration","scope":5580,"src":"3611:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5507,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5500,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"3626:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:26","subExpression":{"id":5501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"3642:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:26"},{"AST":{"nodeType":"YulBlock","src":"3681:362:26","statements":[{"nodeType":"YulAssignment","src":"3746:37:26","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:26"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:26"},"nodeType":"YulFunctionCall","src":"3761:22:26"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:26"}]},{"nodeType":"YulAssignment","src":"3850:25:26","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:26"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:26"},"nodeType":"YulFunctionCall","src":"3859:16:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:26"}]},{"nodeType":"YulAssignment","src":"3990:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:26","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:26"},"nodeType":"YulFunctionCall","src":"4006:12:26"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:26"},"nodeType":"YulFunctionCall","src":"4002:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:26"},"nodeType":"YulFunctionCall","src":"3998:31:26"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:26"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5467,"isOffset":false,"isSlot":false,"src":"3746:11:26","valueSize":1},{"declaration":5467,"isOffset":false,"isSlot":false,"src":"3765:11:26","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"3850:5:26","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"3863:5:26","valueSize":1},{"declaration":5499,"isOffset":false,"isSlot":false,"src":"3778:4:26","valueSize":1},{"declaration":5499,"isOffset":false,"isSlot":false,"src":"3870:4:26","valueSize":1},{"declaration":5499,"isOffset":false,"isSlot":false,"src":"3990:4:26","valueSize":1},{"declaration":5499,"isOffset":false,"isSlot":false,"src":"4013:4:26","valueSize":1},{"declaration":5499,"isOffset":false,"isSlot":false,"src":"4020:4:26","valueSize":1}],"id":5508,"nodeType":"InlineAssembly","src":"3672:371:26"},{"expression":{"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"4109:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"4118:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5511,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"4126:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5514,"nodeType":"ExpressionStatement","src":"4109:21:26"},{"assignments":[5516],"declarations":[{"constant":false,"id":5516,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:26","nodeType":"VariableDeclaration","scope":5580,"src":"4448:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5523,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5518,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"4471:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:26"},{"expression":{"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5524,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"4719:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5527,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4733:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5531,"nodeType":"ExpressionStatement","src":"4704:36:26"},{"expression":{"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5532,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4773:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5534,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"4788:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5535,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4802:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5539,"nodeType":"ExpressionStatement","src":"4773:36:26"},{"expression":{"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5540,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4843:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"4858:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5543,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4872:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5547,"nodeType":"ExpressionStatement","src":"4843:36:26"},{"expression":{"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5548,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4913:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5550,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"4928:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5551,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4942:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5555,"nodeType":"ExpressionStatement","src":"4913:36:26"},{"expression":{"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5556,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4983:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"4998:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5559,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"5012:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5563,"nodeType":"ExpressionStatement","src":"4983:36:26"},{"expression":{"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5564,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"5054:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"5069:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5567,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"5083:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5571,"nodeType":"ExpressionStatement","src":"5054:36:26"},{"expression":{"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"5524:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"5533:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5574,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"5541:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5577,"nodeType":"ExpressionStatement","src":"5524:24:26"},{"expression":{"id":5578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"5569:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5471,"id":5579,"nodeType":"Return","src":"5562:13:26"}]}]},"documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"1357:305:26","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":5582,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:26","nodeType":"FunctionDefinition","parameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"x","nameLocation":"1700:1:26","nodeType":"VariableDeclaration","scope":5582,"src":"1692:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5465,"mutability":"mutable","name":"y","nameLocation":"1719:1:26","nodeType":"VariableDeclaration","scope":5582,"src":"1711:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5467,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:26","nodeType":"VariableDeclaration","scope":5582,"src":"1730:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:26"},"returnParameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"result","nameLocation":"1787:6:26","nodeType":"VariableDeclaration","scope":5582,"src":"1779:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:26"},"scope":6234,"src":"1667:3925:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5625,"nodeType":"Block","src":"5872:189:26","statements":[{"assignments":[5598],"declarations":[{"constant":false,"id":5598,"mutability":"mutable","name":"result","nameLocation":"5890:6:26","nodeType":"VariableDeclaration","scope":5625,"src":"5882:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5604,"initialValue":{"arguments":[{"id":5600,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"5906:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5601,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"5909:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5602,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"5912:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5599,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5582,5626],"referencedDeclaration":5582,"src":"5899:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5605,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"5938:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5606,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"5950:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5376_$","typeString":"type(enum Math.Rounding)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5374,"src":"5950:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"src":"5938:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5610,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"5972:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5611,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"5975:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5612,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"5978:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"5934:98:26","trueBody":{"id":5621,"nodeType":"Block","src":"5996:36:26","statements":[{"expression":{"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"6010:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5620,"nodeType":"ExpressionStatement","src":"6010:11:26"}]}},{"expression":{"id":5623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"6048:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5596,"id":5624,"nodeType":"Return","src":"6041:13:26"}]},"documentation":{"id":5583,"nodeType":"StructuredDocumentation","src":"5598:121:26","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5626,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:26","nodeType":"FunctionDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"x","nameLocation":"5757:1:26","nodeType":"VariableDeclaration","scope":5626,"src":"5749:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5584,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5587,"mutability":"mutable","name":"y","nameLocation":"5776:1:26","nodeType":"VariableDeclaration","scope":5626,"src":"5768:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5586,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5589,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:26","nodeType":"VariableDeclaration","scope":5626,"src":"5787:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5592,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:26","nodeType":"VariableDeclaration","scope":5626,"src":"5816:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"typeName":{"id":5591,"nodeType":"UserDefinedTypeName","pathNode":{"id":5590,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5376,"src":"5816:8:26"},"referencedDeclaration":5376,"src":"5816:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:26"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5626,"src":"5863:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:26"},"scope":6234,"src":"5724:337:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5737,"nodeType":"Block","src":"6337:1585:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"6351:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5640,"nodeType":"IfStatement","src":"6347:45:26","trueBody":{"id":5639,"nodeType":"Block","src":"6359:33:26","statements":[{"expression":{"hexValue":"30","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5633,"id":5638,"nodeType":"Return","src":"6373:8:26"}]}},{"assignments":[5642],"declarations":[{"constant":false,"id":5642,"mutability":"mutable","name":"result","nameLocation":"7079:6:26","nodeType":"VariableDeclaration","scope":5737,"src":"7071:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7099:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5644,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5906,5942],"referencedDeclaration":5906,"src":"7094:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:26"},{"id":5736,"nodeType":"UncheckedBlock","src":"7508:408:26","statements":[{"expression":{"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7532:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7542:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7551:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7555:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5662,"nodeType":"ExpressionStatement","src":"7532:35:26"},{"expression":{"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7581:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7591:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7600:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7604:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5673,"nodeType":"ExpressionStatement","src":"7581:35:26"},{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7630:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7640:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7649:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7653:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5684,"nodeType":"ExpressionStatement","src":"7630:35:26"},{"expression":{"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7679:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7689:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7698:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7702:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5695,"nodeType":"ExpressionStatement","src":"7679:35:26"},{"expression":{"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7728:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7738:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7747:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7751:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5706,"nodeType":"ExpressionStatement","src":"7728:35:26"},{"expression":{"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7777:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7787:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7796:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7800:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5717,"nodeType":"ExpressionStatement","src":"7777:35:26"},{"expression":{"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7826:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7836:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7845:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7849:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5728,"nodeType":"ExpressionStatement","src":"7826:35:26"},{"expression":{"arguments":[{"id":5730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7886:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"7894:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"7898:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"7882:3:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5633,"id":5735,"nodeType":"Return","src":"7875:30:26"}]}]},"documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"6067:208:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5738,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:26","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"a","nameLocation":"6302:1:26","nodeType":"VariableDeclaration","scope":5738,"src":"6294:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5628,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:26"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5738,"src":"6328:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:26"},"scope":6234,"src":"6280:1642:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5773,"nodeType":"Block","src":"8098:161:26","statements":[{"id":5772,"nodeType":"UncheckedBlock","src":"8108:145:26","statements":[{"assignments":[5750],"declarations":[{"constant":false,"id":5750,"mutability":"mutable","name":"result","nameLocation":"8140:6:26","nodeType":"VariableDeclaration","scope":5772,"src":"8132:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5749,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5754,"initialValue":{"arguments":[{"id":5752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"8154:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5751,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5738,5774],"referencedDeclaration":5738,"src":"8149:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"8177:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5756,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"8187:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5757,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"8199:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5376_$","typeString":"type(enum Math.Rounding)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5374,"src":"8199:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"src":"8187:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"8214:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"8223:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"8232:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:26","trueExpression":{"hexValue":"31","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5748,"id":5771,"nodeType":"Return","src":"8170:72:26"}]}]},"documentation":{"id":5739,"nodeType":"StructuredDocumentation","src":"7928:89:26","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5774,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:26","nodeType":"FunctionDefinition","parameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"a","nameLocation":"8044:1:26","nodeType":"VariableDeclaration","scope":5774,"src":"8036:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5740,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5744,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:26","nodeType":"VariableDeclaration","scope":5774,"src":"8047:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"typeName":{"id":5743,"nodeType":"UserDefinedTypeName","pathNode":{"id":5742,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5376,"src":"8047:8:26"},"referencedDeclaration":5376,"src":"8047:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:26"},"returnParameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5774,"src":"8089:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5746,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:26"},"scope":6234,"src":"8022:237:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5905,"nodeType":"Block","src":"8444:922:26","statements":[{"assignments":[5783],"declarations":[{"constant":false,"id":5783,"mutability":"mutable","name":"result","nameLocation":"8462:6:26","nodeType":"VariableDeclaration","scope":5905,"src":"8454:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5785,"initialValue":{"hexValue":"30","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:26"},{"id":5902,"nodeType":"UncheckedBlock","src":"8482:855:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8510:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5800,"nodeType":"IfStatement","src":"8506:99:26","trueBody":{"id":5799,"nodeType":"Block","src":"8528:77:26","statements":[{"expression":{"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8546:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5794,"nodeType":"ExpressionStatement","src":"8546:13:26"},{"expression":{"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"8577:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5798,"nodeType":"ExpressionStatement","src":"8577:13:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8622:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5815,"nodeType":"IfStatement","src":"8618:96:26","trueBody":{"id":5814,"nodeType":"Block","src":"8639:75:26","statements":[{"expression":{"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8657:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5809,"nodeType":"ExpressionStatement","src":"8657:12:26"},{"expression":{"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"8687:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5813,"nodeType":"ExpressionStatement","src":"8687:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8731:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5830,"nodeType":"IfStatement","src":"8727:96:26","trueBody":{"id":5829,"nodeType":"Block","src":"8748:75:26","statements":[{"expression":{"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8766:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5824,"nodeType":"ExpressionStatement","src":"8766:12:26"},{"expression":{"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"8796:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5828,"nodeType":"ExpressionStatement","src":"8796:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8840:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5845,"nodeType":"IfStatement","src":"8836:96:26","trueBody":{"id":5844,"nodeType":"Block","src":"8857:75:26","statements":[{"expression":{"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8875:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5839,"nodeType":"ExpressionStatement","src":"8875:12:26"},{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"8905:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5843,"nodeType":"ExpressionStatement","src":"8905:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8949:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5860,"nodeType":"IfStatement","src":"8945:93:26","trueBody":{"id":5859,"nodeType":"Block","src":"8965:73:26","statements":[{"expression":{"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"8983:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5854,"nodeType":"ExpressionStatement","src":"8983:11:26"},{"expression":{"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"9012:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5858,"nodeType":"ExpressionStatement","src":"9012:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"9055:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"9051:93:26","trueBody":{"id":5874,"nodeType":"Block","src":"9071:73:26","statements":[{"expression":{"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"9089:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5869,"nodeType":"ExpressionStatement","src":"9089:11:26"},{"expression":{"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"9118:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5873,"nodeType":"ExpressionStatement","src":"9118:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"9161:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5890,"nodeType":"IfStatement","src":"9157:93:26","trueBody":{"id":5889,"nodeType":"Block","src":"9177:73:26","statements":[{"expression":{"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"9195:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5884,"nodeType":"ExpressionStatement","src":"9195:11:26"},{"expression":{"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"9224:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5888,"nodeType":"ExpressionStatement","src":"9224:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"9267:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5901,"nodeType":"IfStatement","src":"9263:64:26","trueBody":{"id":5900,"nodeType":"Block","src":"9283:44:26","statements":[{"expression":{"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"9301:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5899,"nodeType":"ExpressionStatement","src":"9301:11:26"}]}}]},{"expression":{"id":5903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"9353:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5781,"id":5904,"nodeType":"Return","src":"9346:13:26"}]},"documentation":{"id":5775,"nodeType":"StructuredDocumentation","src":"8265:113:26","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5906,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:26","nodeType":"FunctionDefinition","parameters":{"id":5778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"value","nameLocation":"8405:5:26","nodeType":"VariableDeclaration","scope":5906,"src":"8397:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5776,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:26"},"returnParameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5906,"src":"8435:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5779,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:26"},"scope":6234,"src":"8383:983:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5941,"nodeType":"Block","src":"9599:165:26","statements":[{"id":5940,"nodeType":"UncheckedBlock","src":"9609:149:26","statements":[{"assignments":[5918],"declarations":[{"constant":false,"id":5918,"mutability":"mutable","name":"result","nameLocation":"9641:6:26","nodeType":"VariableDeclaration","scope":5940,"src":"9633:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5917,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5922,"initialValue":{"arguments":[{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"9655:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5919,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5906,5942],"referencedDeclaration":5906,"src":"9650:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"9682:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"9692:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5925,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"9704:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5376_$","typeString":"type(enum Math.Rounding)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5374,"src":"9704:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"src":"9692:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"9724:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"9733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:26","trueExpression":{"hexValue":"31","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5916,"id":5939,"nodeType":"Return","src":"9675:72:26"}]}]},"documentation":{"id":5907,"nodeType":"StructuredDocumentation","src":"9372:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5942,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:26","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"value","nameLocation":"9541:5:26","nodeType":"VariableDeclaration","scope":5942,"src":"9533:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5908,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5912,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:26","nodeType":"VariableDeclaration","scope":5942,"src":"9548:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"typeName":{"id":5911,"nodeType":"UserDefinedTypeName","pathNode":{"id":5910,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5376,"src":"9548:8:26"},"referencedDeclaration":5376,"src":"9548:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:26"},"returnParameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5942,"src":"9590:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5914,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:26"},"scope":6234,"src":"9519:245:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6070,"nodeType":"Block","src":"9951:828:26","statements":[{"assignments":[5951],"declarations":[{"constant":false,"id":5951,"mutability":"mutable","name":"result","nameLocation":"9969:6:26","nodeType":"VariableDeclaration","scope":6070,"src":"9961:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5953,"initialValue":{"hexValue":"30","id":5952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:26"},{"id":6067,"nodeType":"UncheckedBlock","src":"9989:761:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10017:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5970,"nodeType":"IfStatement","src":"10013:99:26","trueBody":{"id":5969,"nodeType":"Block","src":"10034:78:26","statements":[{"expression":{"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10052:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5964,"nodeType":"ExpressionStatement","src":"10052:15:26"},{"expression":{"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10085:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5968,"nodeType":"ExpressionStatement","src":"10085:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10129:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5987,"nodeType":"IfStatement","src":"10125:99:26","trueBody":{"id":5986,"nodeType":"Block","src":"10146:78:26","statements":[{"expression":{"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10164:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5981,"nodeType":"ExpressionStatement","src":"10164:15:26"},{"expression":{"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10197:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5985,"nodeType":"ExpressionStatement","src":"10197:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10241:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6004,"nodeType":"IfStatement","src":"10237:99:26","trueBody":{"id":6003,"nodeType":"Block","src":"10258:78:26","statements":[{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10276:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5998,"nodeType":"ExpressionStatement","src":"10276:15:26"},{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10309:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ExpressionStatement","src":"10309:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10353:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"10349:96:26","trueBody":{"id":6020,"nodeType":"Block","src":"10369:76:26","statements":[{"expression":{"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10387:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6015,"nodeType":"ExpressionStatement","src":"10387:14:26"},{"expression":{"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10419:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6019,"nodeType":"ExpressionStatement","src":"10419:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10462:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6038,"nodeType":"IfStatement","src":"10458:96:26","trueBody":{"id":6037,"nodeType":"Block","src":"10478:76:26","statements":[{"expression":{"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6032,"nodeType":"ExpressionStatement","src":"10496:14:26"},{"expression":{"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10528:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6036,"nodeType":"ExpressionStatement","src":"10528:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10571:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6055,"nodeType":"IfStatement","src":"10567:96:26","trueBody":{"id":6054,"nodeType":"Block","src":"10587:76:26","statements":[{"expression":{"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10605:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6049,"nodeType":"ExpressionStatement","src":"10605:14:26"},{"expression":{"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10637:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6053,"nodeType":"ExpressionStatement","src":"10637:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"10680:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"10676:64:26","trueBody":{"id":6065,"nodeType":"Block","src":"10696:44:26","statements":[{"expression":{"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10714:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6064,"nodeType":"ExpressionStatement","src":"10714:11:26"}]}}]},{"expression":{"id":6068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"10766:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5949,"id":6069,"nodeType":"Return","src":"10759:13:26"}]},"documentation":{"id":5943,"nodeType":"StructuredDocumentation","src":"9770:114:26","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6071,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:26","nodeType":"FunctionDefinition","parameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"value","nameLocation":"9912:5:26","nodeType":"VariableDeclaration","scope":6071,"src":"9904:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:26"},"returnParameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6071,"src":"9942:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:26"},"scope":6234,"src":"9889:890:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6106,"nodeType":"Block","src":"11014:165:26","statements":[{"id":6105,"nodeType":"UncheckedBlock","src":"11024:149:26","statements":[{"assignments":[6083],"declarations":[{"constant":false,"id":6083,"mutability":"mutable","name":"result","nameLocation":"11056:6:26","nodeType":"VariableDeclaration","scope":6105,"src":"11048:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6087,"initialValue":{"arguments":[{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"11071:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6084,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6071,6107],"referencedDeclaration":6071,"src":"11065:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"11098:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6089,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"11108:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6090,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"11120:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5376_$","typeString":"type(enum Math.Rounding)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5374,"src":"11120:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"src":"11108:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"11139:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"11148:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:26","trueExpression":{"hexValue":"31","id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6081,"id":6104,"nodeType":"Return","src":"11091:71:26"}]}]},"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"10785:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6107,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:26","nodeType":"FunctionDefinition","parameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"value","nameLocation":"10956:5:26","nodeType":"VariableDeclaration","scope":6107,"src":"10948:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6077,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:26","nodeType":"VariableDeclaration","scope":6107,"src":"10963:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"typeName":{"id":6076,"nodeType":"UserDefinedTypeName","pathNode":{"id":6075,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5376,"src":"10963:8:26"},"referencedDeclaration":5376,"src":"10963:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:26"},"returnParameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6107,"src":"11005:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:26"},"scope":6234,"src":"10933:246:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6193,"nodeType":"Block","src":"11493:600:26","statements":[{"assignments":[6116],"declarations":[{"constant":false,"id":6116,"mutability":"mutable","name":"result","nameLocation":"11511:6:26","nodeType":"VariableDeclaration","scope":6193,"src":"11503:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6115,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6118,"initialValue":{"hexValue":"30","id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:26"},{"id":6190,"nodeType":"UncheckedBlock","src":"11531:533:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11559:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6133,"nodeType":"IfStatement","src":"11555:98:26","trueBody":{"id":6132,"nodeType":"Block","src":"11577:76:26","statements":[{"expression":{"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11595:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6127,"nodeType":"ExpressionStatement","src":"11595:13:26"},{"expression":{"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"11626:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6131,"nodeType":"ExpressionStatement","src":"11626:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11670:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6148,"nodeType":"IfStatement","src":"11666:95:26","trueBody":{"id":6147,"nodeType":"Block","src":"11687:74:26","statements":[{"expression":{"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11705:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6142,"nodeType":"ExpressionStatement","src":"11705:12:26"},{"expression":{"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"11735:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6146,"nodeType":"ExpressionStatement","src":"11735:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11778:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6163,"nodeType":"IfStatement","src":"11774:95:26","trueBody":{"id":6162,"nodeType":"Block","src":"11795:74:26","statements":[{"expression":{"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11813:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6157,"nodeType":"ExpressionStatement","src":"11813:12:26"},{"expression":{"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"11843:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6161,"nodeType":"ExpressionStatement","src":"11843:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11886:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6178,"nodeType":"IfStatement","src":"11882:95:26","trueBody":{"id":6177,"nodeType":"Block","src":"11903:74:26","statements":[{"expression":{"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11921:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6172,"nodeType":"ExpressionStatement","src":"11921:12:26"},{"expression":{"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"11951:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6176,"nodeType":"ExpressionStatement","src":"11951:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"11994:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6189,"nodeType":"IfStatement","src":"11990:64:26","trueBody":{"id":6188,"nodeType":"Block","src":"12010:44:26","statements":[{"expression":{"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"12028:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6187,"nodeType":"ExpressionStatement","src":"12028:11:26"}]}}]},{"expression":{"id":6191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"12080:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6114,"id":6192,"nodeType":"Return","src":"12073:13:26"}]},"documentation":{"id":6108,"nodeType":"StructuredDocumentation","src":"11185:240:26","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6194,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:26","nodeType":"FunctionDefinition","parameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"value","nameLocation":"11454:5:26","nodeType":"VariableDeclaration","scope":6194,"src":"11446:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6109,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:26"},"returnParameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6194,"src":"11484:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:26"},"scope":6234,"src":"11430:663:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6232,"nodeType":"Block","src":"12329:173:26","statements":[{"id":6231,"nodeType":"UncheckedBlock","src":"12339:157:26","statements":[{"assignments":[6206],"declarations":[{"constant":false,"id":6206,"mutability":"mutable","name":"result","nameLocation":"12371:6:26","nodeType":"VariableDeclaration","scope":6231,"src":"12363:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6205,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6210,"initialValue":{"arguments":[{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"12387:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6207,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6194,6233],"referencedDeclaration":6194,"src":"12380:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"12414:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6212,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"12424:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6213,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"12436:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5376_$","typeString":"type(enum Math.Rounding)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5374,"src":"12436:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"src":"12424:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"12457:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"12471:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:26","trueExpression":{"hexValue":"31","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6204,"id":6230,"nodeType":"Return","src":"12407:78:26"}]}]},"documentation":{"id":6195,"nodeType":"StructuredDocumentation","src":"12099:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6233,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:26","nodeType":"FunctionDefinition","parameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"value","nameLocation":"12271:5:26","nodeType":"VariableDeclaration","scope":6233,"src":"12263:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6200,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:26","nodeType":"VariableDeclaration","scope":6233,"src":"12278:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"},"typeName":{"id":6199,"nodeType":"UserDefinedTypeName","pathNode":{"id":6198,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":5376,"src":"12278:8:26"},"referencedDeclaration":5376,"src":"12278:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5376","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:26"},"returnParameters":{"id":6204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6233,"src":"12320:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6202,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:26"},"scope":6234,"src":"12247:255:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6235,"src":"202:12302:26","usedErrors":[]}],"src":"103:12402:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7775]},"id":7776,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6236,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6237,"nodeType":"StructuredDocumentation","src":"217:709:27","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":7775,"linearizedBaseContracts":[7775],"name":"SafeCast","nameLocation":"935:8:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":6261,"nodeType":"Block","src":"1339:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"1357:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6248,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6247,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1366:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":6245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6255,"nodeType":"ExpressionStatement","src":"1349:78:27"},{"expression":{"arguments":[{"id":6258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"1452:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6256,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:27","typeDescriptions":{}}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6244,"id":6260,"nodeType":"Return","src":"1437:21:27"}]},"documentation":{"id":6238,"nodeType":"StructuredDocumentation","src":"950:318:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":6262,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:27","nodeType":"FunctionDefinition","parameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"value","nameLocation":"1300:5:27","nodeType":"VariableDeclaration","scope":6262,"src":"1292:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:27"},"returnParameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6262,"src":"1330:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6242,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:27"},"scope":7775,"src":"1273:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6286,"nodeType":"Block","src":"1860:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"1878:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6273,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1887:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":6278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":6270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6280,"nodeType":"ExpressionStatement","src":"1870:78:27"},{"expression":{"arguments":[{"id":6283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"1973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6281,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:27","typeDescriptions":{}}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6269,"id":6285,"nodeType":"Return","src":"1958:21:27"}]},"documentation":{"id":6263,"nodeType":"StructuredDocumentation","src":"1471:318:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":6287,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:27","nodeType":"FunctionDefinition","parameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"value","nameLocation":"1821:5:27","nodeType":"VariableDeclaration","scope":6287,"src":"1813:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:27"},"returnParameters":{"id":6269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6287,"src":"1851:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6267,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:27"},"scope":7775,"src":"1794:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6311,"nodeType":"Block","src":"2381:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"2399:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6298,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6297,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2408:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":6295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6305,"nodeType":"ExpressionStatement","src":"2391:78:27"},{"expression":{"arguments":[{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"2494:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6306,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:27","typeDescriptions":{}}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6294,"id":6310,"nodeType":"Return","src":"2479:21:27"}]},"documentation":{"id":6288,"nodeType":"StructuredDocumentation","src":"1992:318:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":6312,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:27","nodeType":"FunctionDefinition","parameters":{"id":6291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6290,"mutability":"mutable","name":"value","nameLocation":"2342:5:27","nodeType":"VariableDeclaration","scope":6312,"src":"2334:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:27"},"returnParameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6312,"src":"2372:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6292,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:27"},"scope":7775,"src":"2315:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6336,"nodeType":"Block","src":"2902:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"2920:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6323,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2929:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2929:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":6320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"ExpressionStatement","src":"2912:78:27"},{"expression":{"arguments":[{"id":6333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"3015:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6331,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:27","typeDescriptions":{}}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6319,"id":6335,"nodeType":"Return","src":"3000:21:27"}]},"documentation":{"id":6313,"nodeType":"StructuredDocumentation","src":"2513:318:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":6337,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:27","nodeType":"FunctionDefinition","parameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"value","nameLocation":"2863:5:27","nodeType":"VariableDeclaration","scope":6337,"src":"2855:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:27"},"returnParameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6337,"src":"2893:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6317,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:27"},"scope":7775,"src":"2836:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6361,"nodeType":"Block","src":"3423:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"3441:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6348,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6347,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3450:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":6345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6355,"nodeType":"ExpressionStatement","src":"3433:78:27"},{"expression":{"arguments":[{"id":6358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"3536:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6356,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:27","typeDescriptions":{}}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6344,"id":6360,"nodeType":"Return","src":"3521:21:27"}]},"documentation":{"id":6338,"nodeType":"StructuredDocumentation","src":"3034:318:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":6362,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:27","nodeType":"FunctionDefinition","parameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"value","nameLocation":"3384:5:27","nodeType":"VariableDeclaration","scope":6362,"src":"3376:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6339,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:27"},"returnParameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6362,"src":"3414:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6342,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:27"},"scope":7775,"src":"3357:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6386,"nodeType":"Block","src":"3944:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"3962:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6373,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3971:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":6370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6380,"nodeType":"ExpressionStatement","src":"3954:78:27"},{"expression":{"arguments":[{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"4057:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6381,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:27","typeDescriptions":{}}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6369,"id":6385,"nodeType":"Return","src":"4042:21:27"}]},"documentation":{"id":6363,"nodeType":"StructuredDocumentation","src":"3555:318:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":6387,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:27","nodeType":"FunctionDefinition","parameters":{"id":6366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6365,"mutability":"mutable","name":"value","nameLocation":"3905:5:27","nodeType":"VariableDeclaration","scope":6387,"src":"3897:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:27"},"returnParameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6387,"src":"3935:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6367,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:27"},"scope":7775,"src":"3878:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6411,"nodeType":"Block","src":"4465:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"4483:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6398,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4492:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":6395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4475:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"ExpressionStatement","src":"4475:78:27"},{"expression":{"arguments":[{"id":6408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"4578:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6406,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:27","typeDescriptions":{}}},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6394,"id":6410,"nodeType":"Return","src":"4563:21:27"}]},"documentation":{"id":6388,"nodeType":"StructuredDocumentation","src":"4076:318:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":6412,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:27","nodeType":"FunctionDefinition","parameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"value","nameLocation":"4426:5:27","nodeType":"VariableDeclaration","scope":6412,"src":"4418:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6389,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:27"},"returnParameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6412,"src":"4456:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6392,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:27"},"scope":7775,"src":"4399:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6436,"nodeType":"Block","src":"4986:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"5004:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6423,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6422,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5013:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5013:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":6420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6430,"nodeType":"ExpressionStatement","src":"4996:78:27"},{"expression":{"arguments":[{"id":6433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"5099:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6431,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:27","typeDescriptions":{}}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6419,"id":6435,"nodeType":"Return","src":"5084:21:27"}]},"documentation":{"id":6413,"nodeType":"StructuredDocumentation","src":"4597:318:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":6437,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:27","nodeType":"FunctionDefinition","parameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"value","nameLocation":"4947:5:27","nodeType":"VariableDeclaration","scope":6437,"src":"4939:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:27"},"returnParameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6437,"src":"4977:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6417,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:27"},"scope":7775,"src":"4920:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6461,"nodeType":"Block","src":"5507:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"5525:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6448,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5534:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":6445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6455,"nodeType":"ExpressionStatement","src":"5517:78:27"},{"expression":{"arguments":[{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"5620:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6456,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:27","typeDescriptions":{}}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6444,"id":6460,"nodeType":"Return","src":"5605:21:27"}]},"documentation":{"id":6438,"nodeType":"StructuredDocumentation","src":"5118:318:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":6462,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:27","nodeType":"FunctionDefinition","parameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"value","nameLocation":"5468:5:27","nodeType":"VariableDeclaration","scope":6462,"src":"5460:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6439,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:27"},"returnParameters":{"id":6444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6462,"src":"5498:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6442,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:27"},"scope":7775,"src":"5441:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"6028:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"6046:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6473,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6055:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6055:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":6470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"ExpressionStatement","src":"6038:78:27"},{"expression":{"arguments":[{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"6141:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6481,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:27","typeDescriptions":{}}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6469,"id":6485,"nodeType":"Return","src":"6126:21:27"}]},"documentation":{"id":6463,"nodeType":"StructuredDocumentation","src":"5639:318:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:27","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"value","nameLocation":"5989:5:27","nodeType":"VariableDeclaration","scope":6487,"src":"5981:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6464,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:27"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6487,"src":"6019:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6467,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:27"},"scope":7775,"src":"5962:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6511,"nodeType":"Block","src":"6549:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"6567:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6498,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6576:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":6495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6505,"nodeType":"ExpressionStatement","src":"6559:78:27"},{"expression":{"arguments":[{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"6662:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6506,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:27","typeDescriptions":{}}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6654:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6494,"id":6510,"nodeType":"Return","src":"6647:21:27"}]},"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"6160:318:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":6512,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:27","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"value","nameLocation":"6510:5:27","nodeType":"VariableDeclaration","scope":6512,"src":"6502:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:27"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6512,"src":"6540:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6492,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:27"},"scope":7775,"src":"6483:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6536,"nodeType":"Block","src":"7070:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"7088:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6523,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7097:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":6528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":6520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7080:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6530,"nodeType":"ExpressionStatement","src":"7080:78:27"},{"expression":{"arguments":[{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"7183:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6531,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:27","typeDescriptions":{}}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7175:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6519,"id":6535,"nodeType":"Return","src":"7168:21:27"}]},"documentation":{"id":6513,"nodeType":"StructuredDocumentation","src":"6681:318:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":6537,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:27","nodeType":"FunctionDefinition","parameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"value","nameLocation":"7031:5:27","nodeType":"VariableDeclaration","scope":6537,"src":"7023:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6514,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:27"},"returnParameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6537,"src":"7061:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6517,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:27"},"scope":7775,"src":"7004:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6561,"nodeType":"Block","src":"7591:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"7609:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6548,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6547,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7618:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7618:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":6553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":6545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7601:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6555,"nodeType":"ExpressionStatement","src":"7601:78:27"},{"expression":{"arguments":[{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"7704:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6556,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:27","typeDescriptions":{}}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7696:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6544,"id":6560,"nodeType":"Return","src":"7689:21:27"}]},"documentation":{"id":6538,"nodeType":"StructuredDocumentation","src":"7202:318:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":6562,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:27","nodeType":"FunctionDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"value","nameLocation":"7552:5:27","nodeType":"VariableDeclaration","scope":6562,"src":"7544:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6539,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:27"},"returnParameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6562,"src":"7582:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6542,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:27"},"scope":7775,"src":"7525:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6586,"nodeType":"Block","src":"8112:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"8130:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6573,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8139:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8139:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":6578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":6570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6580,"nodeType":"ExpressionStatement","src":"8122:78:27"},{"expression":{"arguments":[{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"8225:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6581,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:27","typeDescriptions":{}}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8217:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6569,"id":6585,"nodeType":"Return","src":"8210:21:27"}]},"documentation":{"id":6563,"nodeType":"StructuredDocumentation","src":"7723:318:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":6587,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:27","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6565,"mutability":"mutable","name":"value","nameLocation":"8073:5:27","nodeType":"VariableDeclaration","scope":6587,"src":"8065:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6564,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:27"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6587,"src":"8103:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6567,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:27"},"scope":7775,"src":"8046:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6611,"nodeType":"Block","src":"8633:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"8651:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6598,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6597,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8660:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":6603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":6595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6605,"nodeType":"ExpressionStatement","src":"8643:78:27"},{"expression":{"arguments":[{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"8746:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6606,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:27","typeDescriptions":{}}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8738:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6594,"id":6610,"nodeType":"Return","src":"8731:21:27"}]},"documentation":{"id":6588,"nodeType":"StructuredDocumentation","src":"8244:318:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":6612,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:27","nodeType":"FunctionDefinition","parameters":{"id":6591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6590,"mutability":"mutable","name":"value","nameLocation":"8594:5:27","nodeType":"VariableDeclaration","scope":6612,"src":"8586:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6589,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:27"},"returnParameters":{"id":6594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6612,"src":"8624:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6592,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:27"},"scope":7775,"src":"8567:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6636,"nodeType":"Block","src":"9154:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"9172:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6623,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9181:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":6620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9164:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6630,"nodeType":"ExpressionStatement","src":"9164:78:27"},{"expression":{"arguments":[{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"9267:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6631,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:27","typeDescriptions":{}}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9259:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6619,"id":6635,"nodeType":"Return","src":"9252:21:27"}]},"documentation":{"id":6613,"nodeType":"StructuredDocumentation","src":"8765:318:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":6637,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:27","nodeType":"FunctionDefinition","parameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"value","nameLocation":"9115:5:27","nodeType":"VariableDeclaration","scope":6637,"src":"9107:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6614,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:27"},"returnParameters":{"id":6619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6637,"src":"9145:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6617,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:27"},"scope":7775,"src":"9088:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6661,"nodeType":"Block","src":"9675:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"9693:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6648,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9702:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9702:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":6645,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9685:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6655,"nodeType":"ExpressionStatement","src":"9685:78:27"},{"expression":{"arguments":[{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"9788:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6656,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:27","typeDescriptions":{}}},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9780:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6644,"id":6660,"nodeType":"Return","src":"9773:21:27"}]},"documentation":{"id":6638,"nodeType":"StructuredDocumentation","src":"9286:318:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":6662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:27","nodeType":"FunctionDefinition","parameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"value","nameLocation":"9636:5:27","nodeType":"VariableDeclaration","scope":6662,"src":"9628:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:27"},"returnParameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6662,"src":"9666:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6642,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:27"},"scope":7775,"src":"9609:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6686,"nodeType":"Block","src":"10196:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"10214:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6673,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6672,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10223:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10223:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":6670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6680,"nodeType":"ExpressionStatement","src":"10206:78:27"},{"expression":{"arguments":[{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"10309:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6681,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:27","typeDescriptions":{}}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6669,"id":6685,"nodeType":"Return","src":"10294:21:27"}]},"documentation":{"id":6663,"nodeType":"StructuredDocumentation","src":"9807:318:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":6687,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:27","nodeType":"FunctionDefinition","parameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"value","nameLocation":"10157:5:27","nodeType":"VariableDeclaration","scope":6687,"src":"10149:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:27"},"returnParameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6687,"src":"10187:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6667,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:27"},"scope":7775,"src":"10130:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6711,"nodeType":"Block","src":"10717:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"10735:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6698,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6697,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10744:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":6695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10727:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6705,"nodeType":"ExpressionStatement","src":"10727:78:27"},{"expression":{"arguments":[{"id":6708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"10830:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6706,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:27","typeDescriptions":{}}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6694,"id":6710,"nodeType":"Return","src":"10815:21:27"}]},"documentation":{"id":6688,"nodeType":"StructuredDocumentation","src":"10328:318:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":6712,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:27","nodeType":"FunctionDefinition","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"mutability":"mutable","name":"value","nameLocation":"10678:5:27","nodeType":"VariableDeclaration","scope":6712,"src":"10670:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:27"},"returnParameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6712,"src":"10708:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6692,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:27"},"scope":7775,"src":"10651:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6736,"nodeType":"Block","src":"11232:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"11250:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6723,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11259:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":6720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11242:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6730,"nodeType":"ExpressionStatement","src":"11242:76:27"},{"expression":{"arguments":[{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"11342:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6731,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:27","typeDescriptions":{}}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6719,"id":6735,"nodeType":"Return","src":"11328:20:27"}]},"documentation":{"id":6713,"nodeType":"StructuredDocumentation","src":"10849:314:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":6737,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:27","nodeType":"FunctionDefinition","parameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"value","nameLocation":"11194:5:27","nodeType":"VariableDeclaration","scope":6737,"src":"11186:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6714,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:27"},"returnParameters":{"id":6719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6737,"src":"11224:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6717,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:27"},"scope":7775,"src":"11168:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6761,"nodeType":"Block","src":"11744:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"11762:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6748,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6747,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11771:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11771:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":6753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":6745,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11754:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6755,"nodeType":"ExpressionStatement","src":"11754:76:27"},{"expression":{"arguments":[{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"11854:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6756,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:27","typeDescriptions":{}}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11847:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6744,"id":6760,"nodeType":"Return","src":"11840:20:27"}]},"documentation":{"id":6738,"nodeType":"StructuredDocumentation","src":"11361:314:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":6762,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:27","nodeType":"FunctionDefinition","parameters":{"id":6741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6740,"mutability":"mutable","name":"value","nameLocation":"11706:5:27","nodeType":"VariableDeclaration","scope":6762,"src":"11698:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:27"},"returnParameters":{"id":6744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6762,"src":"11736:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6742,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:27"},"scope":7775,"src":"11680:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6786,"nodeType":"Block","src":"12256:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"12274:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6773,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12283:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":6778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":6770,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12266:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6780,"nodeType":"ExpressionStatement","src":"12266:76:27"},{"expression":{"arguments":[{"id":6783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"12366:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6781,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:27","typeDescriptions":{}}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12359:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6769,"id":6785,"nodeType":"Return","src":"12352:20:27"}]},"documentation":{"id":6763,"nodeType":"StructuredDocumentation","src":"11873:314:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":6787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:27","nodeType":"FunctionDefinition","parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"value","nameLocation":"12218:5:27","nodeType":"VariableDeclaration","scope":6787,"src":"12210:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6764,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:27"},"returnParameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6787,"src":"12248:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6767,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:27"},"scope":7775,"src":"12192:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6811,"nodeType":"Block","src":"12768:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"12786:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6798,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12795:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12795:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":6795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12778:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6805,"nodeType":"ExpressionStatement","src":"12778:76:27"},{"expression":{"arguments":[{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"12878:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6806,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:27","typeDescriptions":{}}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12871:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6794,"id":6810,"nodeType":"Return","src":"12864:20:27"}]},"documentation":{"id":6788,"nodeType":"StructuredDocumentation","src":"12385:314:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":6812,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:27","nodeType":"FunctionDefinition","parameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6790,"mutability":"mutable","name":"value","nameLocation":"12730:5:27","nodeType":"VariableDeclaration","scope":6812,"src":"12722:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6789,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:27"},"returnParameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6812,"src":"12760:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6792,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:27"},"scope":7775,"src":"12704:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6836,"nodeType":"Block","src":"13280:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6815,"src":"13298:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6823,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6822,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13307:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13307:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":6820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13290:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6830,"nodeType":"ExpressionStatement","src":"13290:76:27"},{"expression":{"arguments":[{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6815,"src":"13390:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6831,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:27","typeDescriptions":{}}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13383:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6819,"id":6835,"nodeType":"Return","src":"13376:20:27"}]},"documentation":{"id":6813,"nodeType":"StructuredDocumentation","src":"12897:314:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":6837,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:27","nodeType":"FunctionDefinition","parameters":{"id":6816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6815,"mutability":"mutable","name":"value","nameLocation":"13242:5:27","nodeType":"VariableDeclaration","scope":6837,"src":"13234:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6814,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:27"},"returnParameters":{"id":6819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6837,"src":"13272:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6817,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:27"},"scope":7775,"src":"13216:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6861,"nodeType":"Block","src":"13792:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"13810:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6848,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13819:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13819:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":6853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":6845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6855,"nodeType":"ExpressionStatement","src":"13802:76:27"},{"expression":{"arguments":[{"id":6858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"13902:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6856,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:27","typeDescriptions":{}}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6844,"id":6860,"nodeType":"Return","src":"13888:20:27"}]},"documentation":{"id":6838,"nodeType":"StructuredDocumentation","src":"13409:314:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":6862,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:27","nodeType":"FunctionDefinition","parameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"value","nameLocation":"13754:5:27","nodeType":"VariableDeclaration","scope":6862,"src":"13746:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6839,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:27"},"returnParameters":{"id":6844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6862,"src":"13784:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6842,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:27"},"scope":7775,"src":"13728:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6886,"nodeType":"Block","src":"14304:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"14322:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6873,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14331:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14331:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":6870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14314:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6880,"nodeType":"ExpressionStatement","src":"14314:76:27"},{"expression":{"arguments":[{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"14414:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6881,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:27","typeDescriptions":{}}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14407:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6869,"id":6885,"nodeType":"Return","src":"14400:20:27"}]},"documentation":{"id":6863,"nodeType":"StructuredDocumentation","src":"13921:314:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":6887,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:27","nodeType":"FunctionDefinition","parameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"value","nameLocation":"14266:5:27","nodeType":"VariableDeclaration","scope":6887,"src":"14258:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:27"},"returnParameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6887,"src":"14296:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6867,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:27"},"scope":7775,"src":"14240:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6911,"nodeType":"Block","src":"14816:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"14834:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6898,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6897,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14843:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14843:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":6895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6905,"nodeType":"ExpressionStatement","src":"14826:76:27"},{"expression":{"arguments":[{"id":6908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"14926:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6906,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:27","typeDescriptions":{}}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14919:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6894,"id":6910,"nodeType":"Return","src":"14912:20:27"}]},"documentation":{"id":6888,"nodeType":"StructuredDocumentation","src":"14433:314:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":6912,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:27","nodeType":"FunctionDefinition","parameters":{"id":6891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"value","nameLocation":"14778:5:27","nodeType":"VariableDeclaration","scope":6912,"src":"14770:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6889,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:27"},"returnParameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6912,"src":"14808:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6892,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:27"},"scope":7775,"src":"14752:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6936,"nodeType":"Block","src":"15328:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"15346:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6923,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15355:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15355:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":6920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15338:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6930,"nodeType":"ExpressionStatement","src":"15338:76:27"},{"expression":{"arguments":[{"id":6933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"15438:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6931,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:27","typeDescriptions":{}}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6919,"id":6935,"nodeType":"Return","src":"15424:20:27"}]},"documentation":{"id":6913,"nodeType":"StructuredDocumentation","src":"14945:314:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":6937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:27","nodeType":"FunctionDefinition","parameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"value","nameLocation":"15290:5:27","nodeType":"VariableDeclaration","scope":6937,"src":"15282:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:27"},"returnParameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6937,"src":"15320:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6917,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:27"},"scope":7775,"src":"15264:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6961,"nodeType":"Block","src":"15840:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"15858:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6948,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6947,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15867:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15867:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6945,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15850:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6955,"nodeType":"ExpressionStatement","src":"15850:76:27"},{"expression":{"arguments":[{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"15950:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6956,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:27","typeDescriptions":{}}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15943:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6944,"id":6960,"nodeType":"Return","src":"15936:20:27"}]},"documentation":{"id":6938,"nodeType":"StructuredDocumentation","src":"15457:314:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6962,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:27","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"value","nameLocation":"15802:5:27","nodeType":"VariableDeclaration","scope":6962,"src":"15794:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6939,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:27"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6962,"src":"15832:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6942,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:27"},"scope":7775,"src":"15776:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6986,"nodeType":"Block","src":"16352:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"16370:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6973,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16379:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16379:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16362:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6980,"nodeType":"ExpressionStatement","src":"16362:76:27"},{"expression":{"arguments":[{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"16462:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6981,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:27","typeDescriptions":{}}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16455:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6969,"id":6985,"nodeType":"Return","src":"16448:20:27"}]},"documentation":{"id":6963,"nodeType":"StructuredDocumentation","src":"15969:314:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":6987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:27","nodeType":"FunctionDefinition","parameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6965,"mutability":"mutable","name":"value","nameLocation":"16314:5:27","nodeType":"VariableDeclaration","scope":6987,"src":"16306:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6964,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:27"},"returnParameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6987,"src":"16344:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6967,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:27"},"scope":7775,"src":"16288:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7011,"nodeType":"Block","src":"16858:120:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"16876:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6998,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6997,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16885:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16868:74:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7005,"nodeType":"ExpressionStatement","src":"16868:74:27"},{"expression":{"arguments":[{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"16965:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7006,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:27","typeDescriptions":{}}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6994,"id":7010,"nodeType":"Return","src":"16952:19:27"}]},"documentation":{"id":6988,"nodeType":"StructuredDocumentation","src":"16481:310:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":7012,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:27","nodeType":"FunctionDefinition","parameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"value","nameLocation":"16821:5:27","nodeType":"VariableDeclaration","scope":7012,"src":"16813:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:27"},"returnParameters":{"id":6994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7012,"src":"16851:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6992,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:27"},"scope":7775,"src":"16796:182:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7032,"nodeType":"Block","src":"17252:103:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"17270:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":7020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17262:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7026,"nodeType":"ExpressionStatement","src":"17262:55:27"},{"expression":{"arguments":[{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"17342:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7027,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:27","typeDescriptions":{}}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17334:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7019,"id":7031,"nodeType":"Return","src":"17327:21:27"}]},"documentation":{"id":7013,"nodeType":"StructuredDocumentation","src":"16984:198:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":7033,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:27","nodeType":"FunctionDefinition","parameters":{"id":7016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7015,"mutability":"mutable","name":"value","nameLocation":"17213:5:27","nodeType":"VariableDeclaration","scope":7033,"src":"17206:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7014,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:27"},"returnParameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7033,"src":"17243:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:27"},"scope":7775,"src":"17187:168:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7055,"nodeType":"Block","src":"17790:124:27","statements":[{"expression":{"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"17800:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"17820:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7042,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:27","typeDescriptions":{}}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17813:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7047,"nodeType":"ExpressionStatement","src":"17800:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"17844:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"17858:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":7048,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17836:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"ExpressionStatement","src":"17836:71:27"}]},"documentation":{"id":7034,"nodeType":"StructuredDocumentation","src":"17361:350:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":7056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:27","nodeType":"FunctionDefinition","parameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7036,"mutability":"mutable","name":"value","nameLocation":"17741:5:27","nodeType":"VariableDeclaration","scope":7056,"src":"17734:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7035,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:27"},"returnParameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:27","nodeType":"VariableDeclaration","scope":7056,"src":"17771:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7038,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:27"},"scope":7775,"src":"17716:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7078,"nodeType":"Block","src":"18349:124:27","statements":[{"expression":{"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"18359:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"18379:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7065,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:27","typeDescriptions":{}}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18372:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7070,"nodeType":"ExpressionStatement","src":"18359:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"18403:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"18417:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":7071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18395:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7077,"nodeType":"ExpressionStatement","src":"18395:71:27"}]},"documentation":{"id":7057,"nodeType":"StructuredDocumentation","src":"17920:350:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":7079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:27","nodeType":"FunctionDefinition","parameters":{"id":7060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7059,"mutability":"mutable","name":"value","nameLocation":"18300:5:27","nodeType":"VariableDeclaration","scope":7079,"src":"18293:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7058,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:27"},"returnParameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:27","nodeType":"VariableDeclaration","scope":7079,"src":"18330:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7061,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:27"},"scope":7775,"src":"18275:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7101,"nodeType":"Block","src":"18908:124:27","statements":[{"expression":{"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"18918:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"18938:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7088,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:27","typeDescriptions":{}}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18931:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7093,"nodeType":"ExpressionStatement","src":"18918:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"18962:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"18976:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":7094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18954:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7100,"nodeType":"ExpressionStatement","src":"18954:71:27"}]},"documentation":{"id":7080,"nodeType":"StructuredDocumentation","src":"18479:350:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":7102,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:27","nodeType":"FunctionDefinition","parameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7082,"mutability":"mutable","name":"value","nameLocation":"18859:5:27","nodeType":"VariableDeclaration","scope":7102,"src":"18852:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7081,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:27"},"returnParameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:27","nodeType":"VariableDeclaration","scope":7102,"src":"18889:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7084,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:27"},"scope":7775,"src":"18834:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7124,"nodeType":"Block","src":"19467:124:27","statements":[{"expression":{"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"19477:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"19497:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7111,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:27","typeDescriptions":{}}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19490:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7116,"nodeType":"ExpressionStatement","src":"19477:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"19521:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"19535:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":7117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19513:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7123,"nodeType":"ExpressionStatement","src":"19513:71:27"}]},"documentation":{"id":7103,"nodeType":"StructuredDocumentation","src":"19038:350:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":7125,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:27","nodeType":"FunctionDefinition","parameters":{"id":7106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7105,"mutability":"mutable","name":"value","nameLocation":"19418:5:27","nodeType":"VariableDeclaration","scope":7125,"src":"19411:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7104,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:27"},"returnParameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:27","nodeType":"VariableDeclaration","scope":7125,"src":"19448:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7107,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:27"},"scope":7775,"src":"19393:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7147,"nodeType":"Block","src":"20026:124:27","statements":[{"expression":{"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"20036:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"20056:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7134,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:27","typeDescriptions":{}}},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20049:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7139,"nodeType":"ExpressionStatement","src":"20036:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"20080:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"20094:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":7140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20072:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7146,"nodeType":"ExpressionStatement","src":"20072:71:27"}]},"documentation":{"id":7126,"nodeType":"StructuredDocumentation","src":"19597:350:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":7148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:27","nodeType":"FunctionDefinition","parameters":{"id":7129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7128,"mutability":"mutable","name":"value","nameLocation":"19977:5:27","nodeType":"VariableDeclaration","scope":7148,"src":"19970:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7127,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:27"},"returnParameters":{"id":7132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:27","nodeType":"VariableDeclaration","scope":7148,"src":"20007:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7130,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:27"},"scope":7775,"src":"19952:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7170,"nodeType":"Block","src":"20585:124:27","statements":[{"expression":{"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"20595:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"20615:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7157,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:27","typeDescriptions":{}}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7162,"nodeType":"ExpressionStatement","src":"20595:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"20639:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"20653:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":7163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20631:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7169,"nodeType":"ExpressionStatement","src":"20631:71:27"}]},"documentation":{"id":7149,"nodeType":"StructuredDocumentation","src":"20156:350:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":7171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:27","nodeType":"FunctionDefinition","parameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"value","nameLocation":"20536:5:27","nodeType":"VariableDeclaration","scope":7171,"src":"20529:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7150,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:27"},"returnParameters":{"id":7155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7154,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:27","nodeType":"VariableDeclaration","scope":7171,"src":"20566:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7153,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:27"},"scope":7775,"src":"20511:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7193,"nodeType":"Block","src":"21144:124:27","statements":[{"expression":{"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"21154:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"21174:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7180,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:27","typeDescriptions":{}}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21167:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7185,"nodeType":"ExpressionStatement","src":"21154:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"21198:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"21212:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":7186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21190:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"ExpressionStatement","src":"21190:71:27"}]},"documentation":{"id":7172,"nodeType":"StructuredDocumentation","src":"20715:350:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":7194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:27","nodeType":"FunctionDefinition","parameters":{"id":7175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"value","nameLocation":"21095:5:27","nodeType":"VariableDeclaration","scope":7194,"src":"21088:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7173,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:27"},"returnParameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:27","nodeType":"VariableDeclaration","scope":7194,"src":"21125:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7176,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:27"},"scope":7775,"src":"21070:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7216,"nodeType":"Block","src":"21703:124:27","statements":[{"expression":{"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"21713:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"21733:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7203,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:27","typeDescriptions":{}}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7208,"nodeType":"ExpressionStatement","src":"21713:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"21757:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"21771:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":7213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":7209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21749:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7215,"nodeType":"ExpressionStatement","src":"21749:71:27"}]},"documentation":{"id":7195,"nodeType":"StructuredDocumentation","src":"21274:350:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":7217,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:27","nodeType":"FunctionDefinition","parameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"value","nameLocation":"21654:5:27","nodeType":"VariableDeclaration","scope":7217,"src":"21647:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7196,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:27"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:27","nodeType":"VariableDeclaration","scope":7217,"src":"21684:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7199,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:27"},"scope":7775,"src":"21629:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7239,"nodeType":"Block","src":"22262:124:27","statements":[{"expression":{"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"22272:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"22292:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7226,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:27","typeDescriptions":{}}},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22285:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7231,"nodeType":"ExpressionStatement","src":"22272:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"22316:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"22330:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":7232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7238,"nodeType":"ExpressionStatement","src":"22308:71:27"}]},"documentation":{"id":7218,"nodeType":"StructuredDocumentation","src":"21833:350:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":7240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:27","nodeType":"FunctionDefinition","parameters":{"id":7221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"value","nameLocation":"22213:5:27","nodeType":"VariableDeclaration","scope":7240,"src":"22206:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7219,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:27"},"returnParameters":{"id":7224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7223,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:27","nodeType":"VariableDeclaration","scope":7240,"src":"22243:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7222,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:27"},"scope":7775,"src":"22188:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7262,"nodeType":"Block","src":"22821:124:27","statements":[{"expression":{"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"22831:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"22851:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7249,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:27","typeDescriptions":{}}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22844:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7254,"nodeType":"ExpressionStatement","src":"22831:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"22875:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"22889:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":7255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22867:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7261,"nodeType":"ExpressionStatement","src":"22867:71:27"}]},"documentation":{"id":7241,"nodeType":"StructuredDocumentation","src":"22392:350:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":7263,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:27","nodeType":"FunctionDefinition","parameters":{"id":7244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7243,"mutability":"mutable","name":"value","nameLocation":"22772:5:27","nodeType":"VariableDeclaration","scope":7263,"src":"22765:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7242,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:27"},"returnParameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:27","nodeType":"VariableDeclaration","scope":7263,"src":"22802:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7245,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:27"},"scope":7775,"src":"22747:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7285,"nodeType":"Block","src":"23380:124:27","statements":[{"expression":{"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"23390:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7266,"src":"23410:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7272,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:27","typeDescriptions":{}}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23403:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7277,"nodeType":"ExpressionStatement","src":"23390:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"23434:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7266,"src":"23448:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":7278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23426:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7284,"nodeType":"ExpressionStatement","src":"23426:71:27"}]},"documentation":{"id":7264,"nodeType":"StructuredDocumentation","src":"22951:350:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":7286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:27","nodeType":"FunctionDefinition","parameters":{"id":7267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"mutability":"mutable","name":"value","nameLocation":"23331:5:27","nodeType":"VariableDeclaration","scope":7286,"src":"23324:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7265,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:27"},"returnParameters":{"id":7270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7269,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:27","nodeType":"VariableDeclaration","scope":7286,"src":"23361:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7268,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:27"},"scope":7775,"src":"23306:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7308,"nodeType":"Block","src":"23939:124:27","statements":[{"expression":{"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"23949:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"23969:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7295,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:27","typeDescriptions":{}}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23962:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7300,"nodeType":"ExpressionStatement","src":"23949:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"23993:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"24007:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":7301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23985:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7307,"nodeType":"ExpressionStatement","src":"23985:71:27"}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"23510:350:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":7309,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:27","nodeType":"FunctionDefinition","parameters":{"id":7290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"value","nameLocation":"23890:5:27","nodeType":"VariableDeclaration","scope":7309,"src":"23883:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7288,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:27"},"returnParameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:27","nodeType":"VariableDeclaration","scope":7309,"src":"23920:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7291,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:27"},"scope":7775,"src":"23865:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7331,"nodeType":"Block","src":"24498:124:27","statements":[{"expression":{"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"24508:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"24528:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7318,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:27","typeDescriptions":{}}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24521:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7323,"nodeType":"ExpressionStatement","src":"24508:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"24552:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"24566:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":7328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":7324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24544:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7330,"nodeType":"ExpressionStatement","src":"24544:71:27"}]},"documentation":{"id":7310,"nodeType":"StructuredDocumentation","src":"24069:350:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":7332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:27","nodeType":"FunctionDefinition","parameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"mutability":"mutable","name":"value","nameLocation":"24449:5:27","nodeType":"VariableDeclaration","scope":7332,"src":"24442:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7311,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:27"},"returnParameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7315,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:27","nodeType":"VariableDeclaration","scope":7332,"src":"24479:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7314,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:27"},"scope":7775,"src":"24424:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7354,"nodeType":"Block","src":"25057:124:27","statements":[{"expression":{"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"25067:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"25087:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7341,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:27","typeDescriptions":{}}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25080:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7346,"nodeType":"ExpressionStatement","src":"25067:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"25111:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"25125:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":7347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25103:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7353,"nodeType":"ExpressionStatement","src":"25103:71:27"}]},"documentation":{"id":7333,"nodeType":"StructuredDocumentation","src":"24628:350:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":7355,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:27","nodeType":"FunctionDefinition","parameters":{"id":7336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7335,"mutability":"mutable","name":"value","nameLocation":"25008:5:27","nodeType":"VariableDeclaration","scope":7355,"src":"25001:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7334,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:27"},"returnParameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:27","nodeType":"VariableDeclaration","scope":7355,"src":"25038:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7337,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:27"},"scope":7775,"src":"24983:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7377,"nodeType":"Block","src":"25616:124:27","statements":[{"expression":{"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"25626:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"25646:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7364,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:27","typeDescriptions":{}}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25639:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7369,"nodeType":"ExpressionStatement","src":"25626:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"25670:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"25684:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":7370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25662:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7376,"nodeType":"ExpressionStatement","src":"25662:71:27"}]},"documentation":{"id":7356,"nodeType":"StructuredDocumentation","src":"25187:350:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":7378,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:27","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7358,"mutability":"mutable","name":"value","nameLocation":"25567:5:27","nodeType":"VariableDeclaration","scope":7378,"src":"25560:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7357,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:27"},"returnParameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:27","nodeType":"VariableDeclaration","scope":7378,"src":"25597:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7360,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:27"},"scope":7775,"src":"25542:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7400,"nodeType":"Block","src":"26175:124:27","statements":[{"expression":{"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7386,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7384,"src":"26185:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"26205:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7387,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:27","typeDescriptions":{}}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26198:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7392,"nodeType":"ExpressionStatement","src":"26185:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7384,"src":"26229:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"26243:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":7397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":7393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26221:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7399,"nodeType":"ExpressionStatement","src":"26221:71:27"}]},"documentation":{"id":7379,"nodeType":"StructuredDocumentation","src":"25746:350:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":7401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:27","nodeType":"FunctionDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"value","nameLocation":"26126:5:27","nodeType":"VariableDeclaration","scope":7401,"src":"26119:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7380,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:27"},"returnParameters":{"id":7385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7384,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:27","nodeType":"VariableDeclaration","scope":7401,"src":"26156:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7383,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:27"},"scope":7775,"src":"26101:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7423,"nodeType":"Block","src":"26734:124:27","statements":[{"expression":{"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"26744:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"26764:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7410,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:27","typeDescriptions":{}}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26757:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7415,"nodeType":"ExpressionStatement","src":"26744:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"26788:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"26802:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":7416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26780:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7422,"nodeType":"ExpressionStatement","src":"26780:71:27"}]},"documentation":{"id":7402,"nodeType":"StructuredDocumentation","src":"26305:350:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":7424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:27","nodeType":"FunctionDefinition","parameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"value","nameLocation":"26685:5:27","nodeType":"VariableDeclaration","scope":7424,"src":"26678:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7403,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:27"},"returnParameters":{"id":7408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7407,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:27","nodeType":"VariableDeclaration","scope":7424,"src":"26715:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7406,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:27"},"scope":7775,"src":"26660:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7446,"nodeType":"Block","src":"27293:124:27","statements":[{"expression":{"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"27303:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"27323:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7433,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:27","typeDescriptions":{}}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27316:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7438,"nodeType":"ExpressionStatement","src":"27303:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"27347:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"27361:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":7443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":7439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27339:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7445,"nodeType":"ExpressionStatement","src":"27339:71:27"}]},"documentation":{"id":7425,"nodeType":"StructuredDocumentation","src":"26864:350:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":7447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:27","nodeType":"FunctionDefinition","parameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"value","nameLocation":"27244:5:27","nodeType":"VariableDeclaration","scope":7447,"src":"27237:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7426,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:27"},"returnParameters":{"id":7431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7430,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:27","nodeType":"VariableDeclaration","scope":7447,"src":"27274:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7429,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:27"},"scope":7775,"src":"27219:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7469,"nodeType":"Block","src":"27852:124:27","statements":[{"expression":{"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"27862:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"27882:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7456,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:27","typeDescriptions":{}}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27875:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7461,"nodeType":"ExpressionStatement","src":"27862:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"27906:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"27920:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":7462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27898:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7468,"nodeType":"ExpressionStatement","src":"27898:71:27"}]},"documentation":{"id":7448,"nodeType":"StructuredDocumentation","src":"27423:350:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":7470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:27","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"value","nameLocation":"27803:5:27","nodeType":"VariableDeclaration","scope":7470,"src":"27796:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7449,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:27"},"returnParameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:27","nodeType":"VariableDeclaration","scope":7470,"src":"27833:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7452,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:27"},"scope":7775,"src":"27778:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7492,"nodeType":"Block","src":"28404:122:27","statements":[{"expression":{"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"28414:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"28433:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7479,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:27","typeDescriptions":{}}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7484,"nodeType":"ExpressionStatement","src":"28414:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"28457:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"28471:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":7485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28449:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7491,"nodeType":"ExpressionStatement","src":"28449:70:27"}]},"documentation":{"id":7471,"nodeType":"StructuredDocumentation","src":"27982:345:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":7493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:27","nodeType":"FunctionDefinition","parameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"value","nameLocation":"28356:5:27","nodeType":"VariableDeclaration","scope":7493,"src":"28349:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7472,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:27"},"returnParameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:27","nodeType":"VariableDeclaration","scope":7493,"src":"28386:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7475,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:27"},"scope":7775,"src":"28332:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7515,"nodeType":"Block","src":"28954:122:27","statements":[{"expression":{"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"28964:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"28983:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7502,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:27","typeDescriptions":{}}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28977:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7507,"nodeType":"ExpressionStatement","src":"28964:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"29007:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"29021:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":7512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":7508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28999:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7514,"nodeType":"ExpressionStatement","src":"28999:70:27"}]},"documentation":{"id":7494,"nodeType":"StructuredDocumentation","src":"28532:345:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":7516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:27","nodeType":"FunctionDefinition","parameters":{"id":7497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7496,"mutability":"mutable","name":"value","nameLocation":"28906:5:27","nodeType":"VariableDeclaration","scope":7516,"src":"28899:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7495,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:27"},"returnParameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:27","nodeType":"VariableDeclaration","scope":7516,"src":"28936:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7498,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:27"},"scope":7775,"src":"28882:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7538,"nodeType":"Block","src":"29504:122:27","statements":[{"expression":{"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"29514:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"29533:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7525,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:27","typeDescriptions":{}}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29527:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7530,"nodeType":"ExpressionStatement","src":"29514:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"29557:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"29571:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":7535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":7531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29549:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7537,"nodeType":"ExpressionStatement","src":"29549:70:27"}]},"documentation":{"id":7517,"nodeType":"StructuredDocumentation","src":"29082:345:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":7539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:27","nodeType":"FunctionDefinition","parameters":{"id":7520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7519,"mutability":"mutable","name":"value","nameLocation":"29456:5:27","nodeType":"VariableDeclaration","scope":7539,"src":"29449:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7518,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:27"},"returnParameters":{"id":7523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7522,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:27","nodeType":"VariableDeclaration","scope":7539,"src":"29486:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7521,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:27"},"scope":7775,"src":"29432:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7561,"nodeType":"Block","src":"30054:122:27","statements":[{"expression":{"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"30064:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"30083:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7548,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:27","typeDescriptions":{}}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30077:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7553,"nodeType":"ExpressionStatement","src":"30064:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"30107:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"30121:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":7554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30099:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7560,"nodeType":"ExpressionStatement","src":"30099:70:27"}]},"documentation":{"id":7540,"nodeType":"StructuredDocumentation","src":"29632:345:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":7562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:27","nodeType":"FunctionDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"value","nameLocation":"30006:5:27","nodeType":"VariableDeclaration","scope":7562,"src":"29999:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7541,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:27"},"returnParameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7545,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:27","nodeType":"VariableDeclaration","scope":7562,"src":"30036:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7544,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:27"},"scope":7775,"src":"29982:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7584,"nodeType":"Block","src":"30604:122:27","statements":[{"expression":{"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"30614:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"30633:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7571,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:27","typeDescriptions":{}}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30627:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7576,"nodeType":"ExpressionStatement","src":"30614:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7578,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"30657:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"30671:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":7581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":7577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30649:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7583,"nodeType":"ExpressionStatement","src":"30649:70:27"}]},"documentation":{"id":7563,"nodeType":"StructuredDocumentation","src":"30182:345:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":7585,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:27","nodeType":"FunctionDefinition","parameters":{"id":7566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"value","nameLocation":"30556:5:27","nodeType":"VariableDeclaration","scope":7585,"src":"30549:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7564,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:27"},"returnParameters":{"id":7569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:27","nodeType":"VariableDeclaration","scope":7585,"src":"30586:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7567,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:27"},"scope":7775,"src":"30532:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7607,"nodeType":"Block","src":"31154:122:27","statements":[{"expression":{"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"31164:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"31183:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7594,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:27","typeDescriptions":{}}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31177:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7599,"nodeType":"ExpressionStatement","src":"31164:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"31207:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"31221:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":7604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":7600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31199:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7606,"nodeType":"ExpressionStatement","src":"31199:70:27"}]},"documentation":{"id":7586,"nodeType":"StructuredDocumentation","src":"30732:345:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":7608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:27","nodeType":"FunctionDefinition","parameters":{"id":7589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7588,"mutability":"mutable","name":"value","nameLocation":"31106:5:27","nodeType":"VariableDeclaration","scope":7608,"src":"31099:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7587,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:27"},"returnParameters":{"id":7592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7591,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:27","nodeType":"VariableDeclaration","scope":7608,"src":"31136:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7590,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:27"},"scope":7775,"src":"31082:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7630,"nodeType":"Block","src":"31704:122:27","statements":[{"expression":{"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"31714:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7611,"src":"31733:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7617,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:27","typeDescriptions":{}}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31727:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7622,"nodeType":"ExpressionStatement","src":"31714:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"31757:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7611,"src":"31771:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":7623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31749:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7629,"nodeType":"ExpressionStatement","src":"31749:70:27"}]},"documentation":{"id":7609,"nodeType":"StructuredDocumentation","src":"31282:345:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":7631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:27","nodeType":"FunctionDefinition","parameters":{"id":7612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7611,"mutability":"mutable","name":"value","nameLocation":"31656:5:27","nodeType":"VariableDeclaration","scope":7631,"src":"31649:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7610,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:27"},"returnParameters":{"id":7615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7614,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:27","nodeType":"VariableDeclaration","scope":7631,"src":"31686:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7613,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:27"},"scope":7775,"src":"31632:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7653,"nodeType":"Block","src":"32254:122:27","statements":[{"expression":{"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"32264:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"32283:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7640,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:27","typeDescriptions":{}}},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32277:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7645,"nodeType":"ExpressionStatement","src":"32264:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"32307:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"32321:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":7650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":7646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32299:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7652,"nodeType":"ExpressionStatement","src":"32299:70:27"}]},"documentation":{"id":7632,"nodeType":"StructuredDocumentation","src":"31832:345:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":7654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:27","nodeType":"FunctionDefinition","parameters":{"id":7635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7634,"mutability":"mutable","name":"value","nameLocation":"32206:5:27","nodeType":"VariableDeclaration","scope":7654,"src":"32199:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7633,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:27"},"returnParameters":{"id":7638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7637,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:27","nodeType":"VariableDeclaration","scope":7654,"src":"32236:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7636,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:27"},"scope":7775,"src":"32182:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7676,"nodeType":"Block","src":"32804:122:27","statements":[{"expression":{"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"32814:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"32833:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7663,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:27","typeDescriptions":{}}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32827:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7668,"nodeType":"ExpressionStatement","src":"32814:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"32857:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"32871:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":7669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32849:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7675,"nodeType":"ExpressionStatement","src":"32849:70:27"}]},"documentation":{"id":7655,"nodeType":"StructuredDocumentation","src":"32382:345:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":7677,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:27","nodeType":"FunctionDefinition","parameters":{"id":7658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7657,"mutability":"mutable","name":"value","nameLocation":"32756:5:27","nodeType":"VariableDeclaration","scope":7677,"src":"32749:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7656,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:27"},"returnParameters":{"id":7661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7660,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:27","nodeType":"VariableDeclaration","scope":7677,"src":"32786:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7659,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:27"},"scope":7775,"src":"32732:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7699,"nodeType":"Block","src":"33354:122:27","statements":[{"expression":{"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"33364:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"33383:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7686,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:27","typeDescriptions":{}}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7691,"nodeType":"ExpressionStatement","src":"33364:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7693,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"33407:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"33421:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":7696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":7692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33399:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7698,"nodeType":"ExpressionStatement","src":"33399:70:27"}]},"documentation":{"id":7678,"nodeType":"StructuredDocumentation","src":"32932:345:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":7700,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:27","nodeType":"FunctionDefinition","parameters":{"id":7681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"value","nameLocation":"33306:5:27","nodeType":"VariableDeclaration","scope":7700,"src":"33299:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7679,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:27"},"returnParameters":{"id":7684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7683,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:27","nodeType":"VariableDeclaration","scope":7700,"src":"33336:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7682,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:27"},"scope":7775,"src":"33282:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7722,"nodeType":"Block","src":"33904:122:27","statements":[{"expression":{"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7708,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"33914:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"33933:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7709,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:27","typeDescriptions":{}}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33927:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7714,"nodeType":"ExpressionStatement","src":"33914:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"33957:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"33971:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":7719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":7715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33949:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7721,"nodeType":"ExpressionStatement","src":"33949:70:27"}]},"documentation":{"id":7701,"nodeType":"StructuredDocumentation","src":"33482:345:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":7723,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:27","nodeType":"FunctionDefinition","parameters":{"id":7704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7703,"mutability":"mutable","name":"value","nameLocation":"33856:5:27","nodeType":"VariableDeclaration","scope":7723,"src":"33849:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7702,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:27"},"returnParameters":{"id":7707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7706,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:27","nodeType":"VariableDeclaration","scope":7723,"src":"33886:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7705,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:27"},"scope":7775,"src":"33832:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"34447:120:27","statements":[{"expression":{"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7729,"src":"34457:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"34475:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7732,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:27","typeDescriptions":{}}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34470:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7737,"nodeType":"ExpressionStatement","src":"34457:24:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7739,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7729,"src":"34499:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"34513:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":7742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":7738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34491:69:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7744,"nodeType":"ExpressionStatement","src":"34491:69:27"}]},"documentation":{"id":7724,"nodeType":"StructuredDocumentation","src":"34032:340:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:27","nodeType":"FunctionDefinition","parameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"value","nameLocation":"34400:5:27","nodeType":"VariableDeclaration","scope":7746,"src":"34393:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7725,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:27"},"returnParameters":{"id":7730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7729,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:27","nodeType":"VariableDeclaration","scope":7746,"src":"34430:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7728,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:27"},"scope":7775,"src":"34377:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7773,"nodeType":"Block","src":"34845:233:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"34962:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7759,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7758,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34979:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34979:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7756,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:27","typeDescriptions":{}}},"id":7763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34971:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":7765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":7754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34954:87:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7767,"nodeType":"ExpressionStatement","src":"34954:87:27"},{"expression":{"arguments":[{"id":7770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"35065:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7768,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:27","typeDescriptions":{}}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35058:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7753,"id":7772,"nodeType":"Return","src":"35051:20:27"}]},"documentation":{"id":7747,"nodeType":"StructuredDocumentation","src":"34573:203:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":7774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:27","nodeType":"FunctionDefinition","parameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"value","nameLocation":"34807:5:27","nodeType":"VariableDeclaration","scope":7774,"src":"34799:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7748,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:27"},"returnParameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7774,"src":"34837:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7751,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:27"},"scope":7775,"src":"34781:297:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7776,"src":"927:34153:27","usedErrors":[]}],"src":"192:34889:27"},"id":27},"contracts/DelFactory.sol":{"ast":{"absolutePath":"contracts/DelFactory.sol","exportedSymbols":{"AccessControl":[315],"Address":[3173],"Checkpoints":[4544],"Context":[4566],"Counters":[4640],"DelFactory":[7842],"ECDSA":[5176],"EIP712":[5330],"ERC165":[5357],"ERC721":[2086],"ERC721Burnable":[2250],"ERC721Enumerable":[2604],"ERC721URIStorage":[2729],"ERC721Votes":[2782],"IAccessControl":[388],"IERC165":[5369],"IERC721":[2202],"IERC721Enumerable":[2813],"IERC721Metadata":[2840],"IERC721Receiver":[2220],"IVotes":[579],"Math":[6234],"Ownable":[501],"Pausable":[1141],"SafeCast":[7775],"Strings":[4815],"Votes":[1033]},"id":7843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7777,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"31:23:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":2087,"src":"56:57:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","id":7779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":2251,"src":"114:76:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":7780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":1142,"src":"191:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","id":7781,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":5334,"src":"247:69:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/draft-ERC721Votes.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/draft-ERC721Votes.sol","id":7782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":2844,"src":"317:79:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7783,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":316,"src":"397:58:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":7784,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":4641,"src":"456:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":7785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":2605,"src":"509:78:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":502,"src":"588:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7787,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7843,"sourceUnit":2730,"src":"641:78:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7788,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":2729,"src":"744:16:28"},"id":7789,"nodeType":"InheritanceSpecifier","src":"744:16:28"},{"baseName":{"id":7790,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":501,"src":"762:7:28"},"id":7791,"nodeType":"InheritanceSpecifier","src":"762:7:28"}],"canonicalName":"DelFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7842,"linearizedBaseContracts":[7842,501,2729,2086,2840,2202,5357,5369,4566],"name":"DelFactory","nameLocation":"730:10:28","nodeType":"ContractDefinition","nodes":[{"id":7795,"libraryName":{"id":7792,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":4640,"src":"782:8:28"},"nodeType":"UsingForDirective","src":"776:36:28","typeName":{"id":7794,"nodeType":"UserDefinedTypeName","pathNode":{"id":7793,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"795:16:28"},"referencedDeclaration":4572,"src":"795:16:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":7798,"mutability":"mutable","name":"_tokenIds","nameLocation":"842:9:28","nodeType":"VariableDeclaration","scope":7842,"src":"817:34:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage","typeString":"struct Counters.Counter"},"typeName":{"id":7797,"nodeType":"UserDefinedTypeName","pathNode":{"id":7796,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4572,"src":"817:16:28"},"referencedDeclaration":4572,"src":"817:16:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"body":{"id":7805,"nodeType":"Block","src":"898:7:28","statements":[]},"id":7806,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"44454c204c6963656e7365","id":7801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"878:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c109dc1b4026c72c80af93c8a426598a7cf21a8c497a143028f5c1be39ecb1e","typeString":"literal_string \"DEL License\""},"value":"DEL License"},{"hexValue":"44454c","id":7802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"892:5:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_342e1b7d20f92e33ba7c6ebef5a7b50ebb59f7c23abdd1d63dd414420ab3c560","typeString":"literal_string \"DEL\""},"value":"DEL"}],"id":7803,"kind":"baseConstructorSpecifier","modifierName":{"id":7800,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"871:6:28"},"nodeType":"ModifierInvocation","src":"871:27:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7799,"nodeType":"ParameterList","parameters":[],"src":"869:2:28"},"returnParameters":{"id":7804,"nodeType":"ParameterList","parameters":[],"src":"898:0:28"},"scope":7842,"src":"858:47:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7840,"nodeType":"Block","src":"1027:199:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7817,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"1037:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage","typeString":"struct Counters.Counter storage ref"}},"id":7819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":4598,"src":"1037:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$4572_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$4572_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1037:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7821,"nodeType":"ExpressionStatement","src":"1037:21:28"},{"assignments":[7823],"declarations":[{"constant":false,"id":7823,"mutability":"mutable","name":"newItemId","nameLocation":"1077:9:28","nodeType":"VariableDeclaration","scope":7840,"src":"1069:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7827,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7824,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"1089:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4572_storage","typeString":"struct Counters.Counter storage ref"}},"id":7825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":4584,"src":"1089:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$4572_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4572_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1089:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1069:39:28"},{"expression":{"arguments":[{"id":7829,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7808,"src":"1128:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7830,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"1139:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7828,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1636,1665],"referencedDeclaration":1636,"src":"1118:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1118:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7832,"nodeType":"ExpressionStatement","src":"1118:31:28"},{"expression":{"arguments":[{"id":7834,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"1172:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7835,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"1183:8:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7833,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"1159:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1159:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7837,"nodeType":"ExpressionStatement","src":"1159:33:28"},{"expression":{"id":7838,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"1210:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7816,"id":7839,"nodeType":"Return","src":"1203:16:28"}]},"functionSelector":"eacabe14","id":7841,"implemented":true,"kind":"function","modifiers":[{"id":7813,"kind":"modifierInvocation","modifierName":{"id":7812,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"987:9:28"},"nodeType":"ModifierInvocation","src":"987:9:28"}],"name":"mintNFT","nameLocation":"921:7:28","nodeType":"FunctionDefinition","parameters":{"id":7811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7808,"mutability":"mutable","name":"recipient","nameLocation":"937:9:28","nodeType":"VariableDeclaration","scope":7841,"src":"929:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7807,"name":"address","nodeType":"ElementaryTypeName","src":"929:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7810,"mutability":"mutable","name":"tokenURI","nameLocation":"962:8:28","nodeType":"VariableDeclaration","scope":7841,"src":"948:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7809,"name":"string","nodeType":"ElementaryTypeName","src":"948:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"928:43:28"},"returnParameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7841,"src":"1014:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1013:9:28"},"scope":7842,"src":"912:314:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7843,"src":"721:507:28","usedErrors":[]}],"src":"31:1202:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_beforeTokenTransfer}). _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the contract's {EIP712} domain separator.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`). Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns an address nonce.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xbf868a3a3cd497eb5896303474d25b9b5fe487ba30391db0a3e5b950573498d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a8a3be23b60a30f621c275c3195740501dc69a202b8364b383b5dc5470f0d\",\"dweb:/ipfs/Qma8bNQEtBeoG1N2tqiPN6dYPbp3S4WGN6eBXAopjYEPjV\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1204":{"entryPoint":null,"id":1204,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"423:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:29"},"nodeType":"YulFunctionCall","src":"433:12:29"},"nodeType":"YulExpressionStatement","src":"433:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:29"},{"body":{"nodeType":"YulBlock","src":"546:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:29"},"nodeType":"YulFunctionCall","src":"556:12:29"},"nodeType":"YulExpressionStatement","src":"556:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:29"},{"body":{"nodeType":"YulBlock","src":"628:54:29","statements":[{"nodeType":"YulAssignment","src":"638:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:29"},"nodeType":"YulFunctionCall","src":"652:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:29"},"nodeType":"YulFunctionCall","src":"668:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:29"},"nodeType":"YulFunctionCall","src":"648:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:29","type":""}],"src":"580:102:29"},{"body":{"nodeType":"YulBlock","src":"716:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:29"},"nodeType":"YulFunctionCall","src":"726:88:29"},"nodeType":"YulExpressionStatement","src":"726:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:29"},"nodeType":"YulFunctionCall","src":"823:15:29"},"nodeType":"YulExpressionStatement","src":"823:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:29"},"nodeType":"YulFunctionCall","src":"847:15:29"},"nodeType":"YulExpressionStatement","src":"847:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:29"},{"body":{"nodeType":"YulBlock","src":"917:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:29"},"nodeType":"YulFunctionCall","src":"957:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:29"},"nodeType":"YulFunctionCall","src":"945:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:29"},"nodeType":"YulFunctionCall","src":"1098:18:29"},"nodeType":"YulExpressionStatement","src":"1098:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:29"},"nodeType":"YulFunctionCall","src":"1036:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:29"},"nodeType":"YulFunctionCall","src":"1072:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:29"},"nodeType":"YulFunctionCall","src":"1033:62:29"},"nodeType":"YulIf","src":"1030:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:29"},"nodeType":"YulFunctionCall","src":"1127:22:29"},"nodeType":"YulExpressionStatement","src":"1127:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:29","type":""}],"src":"874:281:29"},{"body":{"nodeType":"YulBlock","src":"1202:88:29","statements":[{"nodeType":"YulAssignment","src":"1212:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:29"},"nodeType":"YulFunctionCall","src":"1222:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:29"},"nodeType":"YulFunctionCall","src":"1251:33:29"},"nodeType":"YulExpressionStatement","src":"1251:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:29","type":""}],"src":"1161:129:29"},{"body":{"nodeType":"YulBlock","src":"1363:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:29"},"nodeType":"YulFunctionCall","src":"1470:18:29"},"nodeType":"YulExpressionStatement","src":"1470:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:29"},"nodeType":"YulFunctionCall","src":"1437:30:29"},"nodeType":"YulIf","src":"1434:56:29"},{"nodeType":"YulAssignment","src":"1500:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:29"},"nodeType":"YulFunctionCall","src":"1508:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:29"}]},{"nodeType":"YulAssignment","src":"1574:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:29"},"nodeType":"YulFunctionCall","src":"1582:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:29","type":""}],"src":"1296:308:29"},{"body":{"nodeType":"YulBlock","src":"1659:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:29"},"nodeType":"YulFunctionCall","src":"1759:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:29"},"nodeType":"YulFunctionCall","src":"1778:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:29"},"nodeType":"YulFunctionCall","src":"1772:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:29"},"nodeType":"YulFunctionCall","src":"1752:39:29"},"nodeType":"YulExpressionStatement","src":"1752:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:29"},"nodeType":"YulFunctionCall","src":"1696:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:29","statements":[{"nodeType":"YulAssignment","src":"1712:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:29"},"nodeType":"YulFunctionCall","src":"1717:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:29","statements":[]},"src":"1688:113:29"},{"body":{"nodeType":"YulBlock","src":"1835:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:29"},"nodeType":"YulFunctionCall","src":"1881:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:29"},"nodeType":"YulFunctionCall","src":"1874:27:29"},"nodeType":"YulExpressionStatement","src":"1874:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:29"},"nodeType":"YulFunctionCall","src":"1813:13:29"},"nodeType":"YulIf","src":"1810:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:29","type":""}],"src":"1610:307:29"},{"body":{"nodeType":"YulBlock","src":"2018:326:29","statements":[{"nodeType":"YulAssignment","src":"2028:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:29"},"nodeType":"YulFunctionCall","src":"2053:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:29"},"nodeType":"YulFunctionCall","src":"2037:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:29"},"nodeType":"YulFunctionCall","src":"2112:21:29"},"nodeType":"YulExpressionStatement","src":"2112:21:29"},{"nodeType":"YulVariableDeclaration","src":"2142:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:29"},"nodeType":"YulFunctionCall","src":"2153:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:29"},"nodeType":"YulFunctionCall","src":"2209:79:29"},"nodeType":"YulExpressionStatement","src":"2209:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:29"},"nodeType":"YulFunctionCall","src":"2184:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:29"},"nodeType":"YulFunctionCall","src":"2181:25:29"},"nodeType":"YulIf","src":"2178:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:29"},"nodeType":"YulFunctionCall","src":"2299:39:29"},"nodeType":"YulExpressionStatement","src":"2299:39:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:29","type":""}],"src":"1923:421:29"},{"body":{"nodeType":"YulBlock","src":"2437:282:29","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:29"},"nodeType":"YulFunctionCall","src":"2488:79:29"},"nodeType":"YulExpressionStatement","src":"2488:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:29"},"nodeType":"YulFunctionCall","src":"2461:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:29"},"nodeType":"YulFunctionCall","src":"2457:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:29"},"nodeType":"YulFunctionCall","src":"2450:35:29"},"nodeType":"YulIf","src":"2447:122:29"},{"nodeType":"YulVariableDeclaration","src":"2578:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:29"},"nodeType":"YulFunctionCall","src":"2592:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:29"},"nodeType":"YulFunctionCall","src":"2682:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:29"},"nodeType":"YulFunctionCall","src":"2623:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:29","type":""}],"src":"2364:355:29"},{"body":{"nodeType":"YulBlock","src":"2839:739:29","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:29"},"nodeType":"YulFunctionCall","src":"2887:79:29"},"nodeType":"YulExpressionStatement","src":"2887:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:29"},"nodeType":"YulFunctionCall","src":"2856:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:29"},"nodeType":"YulFunctionCall","src":"2852:32:29"},"nodeType":"YulIf","src":"2849:119:29"},{"nodeType":"YulBlock","src":"2978:291:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:29"},"nodeType":"YulFunctionCall","src":"3013:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:29"},"nodeType":"YulFunctionCall","src":"3007:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:29"},"nodeType":"YulFunctionCall","src":"3080:79:29"},"nodeType":"YulExpressionStatement","src":"3080:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:29"},"nodeType":"YulFunctionCall","src":"3047:30:29"},"nodeType":"YulIf","src":"3044:117:29"},{"nodeType":"YulAssignment","src":"3175:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:29"},"nodeType":"YulFunctionCall","src":"3227:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:29"},"nodeType":"YulFunctionCall","src":"3185:74:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:29"}]}]},{"nodeType":"YulBlock","src":"3279:292:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:29"},"nodeType":"YulFunctionCall","src":"3314:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:29"},"nodeType":"YulFunctionCall","src":"3308:25:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:29"},"nodeType":"YulFunctionCall","src":"3382:79:29"},"nodeType":"YulExpressionStatement","src":"3382:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:29"},"nodeType":"YulFunctionCall","src":"3349:30:29"},"nodeType":"YulIf","src":"3346:117:29"},{"nodeType":"YulAssignment","src":"3477:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:29"},"nodeType":"YulFunctionCall","src":"3529:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:29"},"nodeType":"YulFunctionCall","src":"3487:74:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:29","type":""}],"src":"2725:853:29"},{"body":{"nodeType":"YulBlock","src":"3612:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:29"},"nodeType":"YulFunctionCall","src":"3622:88:29"},"nodeType":"YulExpressionStatement","src":"3622:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:29"},"nodeType":"YulFunctionCall","src":"3719:15:29"},"nodeType":"YulExpressionStatement","src":"3719:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:29"},"nodeType":"YulFunctionCall","src":"3743:15:29"},"nodeType":"YulExpressionStatement","src":"3743:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:29"},{"body":{"nodeType":"YulBlock","src":"3821:269:29","statements":[{"nodeType":"YulAssignment","src":"3831:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:29"},"nodeType":"YulFunctionCall","src":"3841:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:29"},"nodeType":"YulFunctionCall","src":"3888:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:29","statements":[{"nodeType":"YulAssignment","src":"3953:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:29"},"nodeType":"YulFunctionCall","src":"3963:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:29"},"nodeType":"YulFunctionCall","src":"3912:26:29"},"nodeType":"YulIf","src":"3909:81:29"},{"body":{"nodeType":"YulBlock","src":"4042:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:29"},"nodeType":"YulFunctionCall","src":"4056:18:29"},"nodeType":"YulExpressionStatement","src":"4056:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:29"},"nodeType":"YulFunctionCall","src":"4026:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:29"},"nodeType":"YulFunctionCall","src":"4003:38:29"},"nodeType":"YulIf","src":"4000:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:29","type":""}],"src":"3770:320:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026da380380620026da8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61232280620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611633565b6102bc565b6040516100fb919061167b565b60405180910390f35b61010c61039e565b604051610119919061172f565b60405180910390f35b61013c60048036038101906101379190611787565b610430565b60405161014991906117f5565b60405180910390f35b61016c6004803603810190610167919061183c565b610476565b005b6101886004803603810190610183919061187c565b61058e565b005b6101a4600480360381019061019f919061187c565b6105ee565b005b6101c060048036038101906101bb9190611787565b61060e565b6040516101cd91906117f5565b60405180910390f35b6101f060048036038101906101eb91906118cf565b610695565b6040516101fd919061190b565b60405180910390f35b61020e61074d565b60405161021b919061172f565b60405180910390f35b61023e60048036038101906102399190611952565b6107df565b005b61025a60048036038101906102559190611ac7565b6107f5565b005b61027660048036038101906102719190611787565b610857565b604051610283919061172f565b60405180910390f35b6102a660048036038101906102a19190611b4a565b6108bf565b6040516102b3919061167b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611bb9565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611bb9565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c5d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cef565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611d81565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ded565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611e7f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611bb9565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611d81565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611edb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ded565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90612003565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611f71565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061206f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061167b565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612101565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a261199c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612121565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a919061217f565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a591906121b3565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b8152600401611326949392919061225e565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e91906122bf565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390612101565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4612121565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1612121565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510612121565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539612121565b5b0492506008810190505b612710831061156957612710838161155f5761155e612121565b5b0492506004810190505b6064831061158c576064838161158257611581612121565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611610816115db565b811461161b57600080fd5b50565b60008135905061162d81611607565b92915050565b600060208284031215611649576116486115d1565b5b60006116578482850161161e565b91505092915050565b60008115159050919050565b61167581611660565b82525050565b6000602082019050611690600083018461166c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116d05780820151818401526020810190506116b5565b838111156116df576000848401525b50505050565b6000601f19601f8301169050919050565b600061170182611696565b61170b81856116a1565b935061171b8185602086016116b2565b611724816116e5565b840191505092915050565b6000602082019050818103600083015261174981846116f6565b905092915050565b6000819050919050565b61176481611751565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60006020828403121561179d5761179c6115d1565b5b60006117ab84828501611772565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117df826117b4565b9050919050565b6117ef816117d4565b82525050565b600060208201905061180a60008301846117e6565b92915050565b611819816117d4565b811461182457600080fd5b50565b60008135905061183681611810565b92915050565b60008060408385031215611853576118526115d1565b5b600061186185828601611827565b925050602061187285828601611772565b9150509250929050565b600080600060608486031215611895576118946115d1565b5b60006118a386828701611827565b93505060206118b486828701611827565b92505060406118c586828701611772565b9150509250925092565b6000602082840312156118e5576118e46115d1565b5b60006118f384828501611827565b91505092915050565b61190581611751565b82525050565b600060208201905061192060008301846118fc565b92915050565b61192f81611660565b811461193a57600080fd5b50565b60008135905061194c81611926565b92915050565b60008060408385031215611969576119686115d1565b5b600061197785828601611827565b92505060206119888582860161193d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d4826116e5565b810181811067ffffffffffffffff821117156119f3576119f261199c565b5b80604052505050565b6000611a066115c7565b9050611a1282826119cb565b919050565b600067ffffffffffffffff821115611a3257611a3161199c565b5b611a3b826116e5565b9050602081019050919050565b82818337600083830152505050565b6000611a6a611a6584611a17565b6119fc565b905082815260208101848484011115611a8657611a85611997565b5b611a91848285611a48565b509392505050565b600082601f830112611aae57611aad611992565b5b8135611abe848260208601611a57565b91505092915050565b60008060008060808587031215611ae157611ae06115d1565b5b6000611aef87828801611827565b9450506020611b0087828801611827565b9350506040611b1187828801611772565b925050606085013567ffffffffffffffff811115611b3257611b316115d6565b5b611b3e87828801611a99565b91505092959194509250565b60008060408385031215611b6157611b606115d1565b5b6000611b6f85828601611827565b9250506020611b8085828601611827565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd157607f821691505b60208210811415611be557611be4611b8a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c476021836116a1565b9150611c5282611beb565b604082019050919050565b60006020820190508181036000830152611c7681611c3a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611cd9603d836116a1565b9150611ce482611c7d565b604082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d6b602d836116a1565b9150611d7682611d0f565b604082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611dd76018836116a1565b9150611de282611da1565b602082019050919050565b60006020820190508181036000830152611e0681611dca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e696029836116a1565b9150611e7482611e0d565b604082019050919050565b60006020820190508181036000830152611e9881611e5c565b9050919050565b600081905092915050565b6000611eb582611696565b611ebf8185611e9f565b9350611ecf8185602086016116b2565b80840191505092915050565b6000611ee78285611eaa565b9150611ef38284611eaa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f5b6025836116a1565b9150611f6682611eff565b604082019050919050565b60006020820190508181036000830152611f8a81611f4e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fed6024836116a1565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006120596019836116a1565b915061206482612023565b602082019050919050565b600060208201905081810360008301526120888161204c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120eb6032836116a1565b91506120f68261208f565b604082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218a82611751565b915061219583611751565b9250828210156121a8576121a7612150565b5b828203905092915050565b60006121be82611751565b91506121c983611751565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121fe576121fd612150565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b600061223082612209565b61223a8185612214565b935061224a8185602086016116b2565b612253816116e5565b840191505092915050565b600060808201905061227360008301876117e6565b61228060208301866117e6565b61228d60408301856118fc565b818103606083015261229f8184612225565b905095945050505050565b6000815190506122b981611607565b92915050565b6000602082840312156122d5576122d46115d1565b5b60006122e3848285016122aa565b9150509291505056fea2646970667358221220773aac1846fbb6554e39d2f4d3272c3082f1ea30229289fdb6a5f87ebcf98d7d64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DA CODESIZE SUB DUP1 PUSH3 0x26DA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2322 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x170B DUP2 DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x171B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1764 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP2 EQ PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1836 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1861 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1872 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1988 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19D4 DUP3 PUSH2 0x16E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A12 DUP3 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH2 0x1A3B DUP3 PUSH2 0x16E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH2 0x1A65 DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1A91 DUP5 DUP3 DUP6 PUSH2 0x1A48 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x1992 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ABE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3E DUP8 DUP3 DUP9 ADD PUSH2 0x1A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6F DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x21 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x3D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x2D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 PUSH1 0x18 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E06 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 PUSH1 0x29 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E74 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1EBF DUP2 DUP6 PUSH2 0x1E9F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP3 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP3 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B PUSH1 0x25 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP3 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x24 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH1 0x19 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x32 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2195 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BE DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C9 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x223A DUP2 DUP6 PUSH2 0x2214 JUMP JUMPDEST SWAP4 POP PUSH2 0x224A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2273 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x2280 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x228D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B9 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E3 DUP5 DUP3 DUP6 ADD PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x3AAC1846FBB6554E39D2F4D3272C3082F1EA30229289FDB6 0xA5 0xF8 PUSH31 0xBCF98D7D64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"628:16327:6:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:16327:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2085":{"entryPoint":4788,"id":2085,"parameterSlots":4,"returnSlots":0},"@_approve_1918":{"entryPoint":2576,"id":1918,"parameterSlots":2,"returnSlots":0},"@_baseURI_1355":{"entryPoint":4190,"id":1355,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2072":{"entryPoint":4494,"id":2072,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2026":{"entryPoint":4794,"id":2026,"parameterSlots":4,"returnSlots":1},"@_exists_1587":{"entryPoint":4429,"id":1587,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1621":{"entryPoint":2761,"id":1621,"parameterSlots":2,"returnSlots":1},"@_msgSender_4556":{"entryPoint":2568,"id":4556,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1569":{"entryPoint":3672,"id":1569,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1964":{"entryPoint":2493,"id":1964,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1556":{"entryPoint":4098,"id":1556,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1950":{"entryPoint":3733,"id":1950,"parameterSlots":3,"returnSlots":0},"@_transfer_1894":{"entryPoint":2910,"id":1894,"parameterSlots":3,"returnSlots":0},"@approve_1398":{"entryPoint":1142,"id":1398,"parameterSlots":2,"returnSlots":0},"@balanceOf_1259":{"entryPoint":1685,"id":1259,"parameterSlots":1,"returnSlots":1},"@getApproved_1416":{"entryPoint":1072,"id":1416,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1451":{"entryPoint":2239,"id":1451,"parameterSlots":2,"returnSlots":1},"@isContract_2861":{"entryPoint":5540,"id":2861,"parameterSlots":1,"returnSlots":1},"@log10_6071":{"entryPoint":5201,"id":6071,"parameterSlots":1,"returnSlots":1},"@name_1297":{"entryPoint":926,"id":1297,"parameterSlots":0,"returnSlots":1},"@ownerOf_1287":{"entryPoint":1550,"id":1287,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1497":{"entryPoint":1518,"id":1497,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1527":{"entryPoint":2037,"id":1527,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1433":{"entryPoint":2015,"id":1433,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1235":{"entryPoint":700,"id":1235,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5356":{"entryPoint":2387,"id":5356,"parameterSlots":1,"returnSlots":1},"@symbol_1307":{"entryPoint":1869,"id":1307,"parameterSlots":0,"returnSlots":1},"@toString_4698":{"entryPoint":4213,"id":4698,"parameterSlots":1,"returnSlots":1},"@tokenURI_1346":{"entryPoint":2135,"id":1346,"parameterSlots":1,"returnSlots":1},"@transferFrom_1478":{"entryPoint":1422,"id":1478,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6986,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6268,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6855,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6482,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6204,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6118,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5740,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7518,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":8014,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7772,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6396,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7899,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8798,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8449,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8195,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8303,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6411,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6652,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5575,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8713,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5782,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8724,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5793,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7839,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8627,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8575,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6100,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6068,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5969,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6728,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5810,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7097,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6603,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":8528,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8481,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6556,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6546,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6551,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5590,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5585,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5861,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7439,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8335,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7935,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8081,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8227,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7693,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7585,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":7147,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7293,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6160,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6438,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5639,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5979,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23861:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"378:105:29","statements":[{"nodeType":"YulAssignment","src":"388:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:29","type":""}],"src":"334:149:29"},{"body":{"nodeType":"YulBlock","src":"531:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:29"},"nodeType":"YulFunctionCall","src":"589:12:29"},"nodeType":"YulExpressionStatement","src":"589:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:29"},"nodeType":"YulFunctionCall","src":"561:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:29"},"nodeType":"YulFunctionCall","src":"544:42:29"},"nodeType":"YulIf","src":"541:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:29","type":""}],"src":"489:120:29"},{"body":{"nodeType":"YulBlock","src":"666:86:29","statements":[{"nodeType":"YulAssignment","src":"676:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:29"},"nodeType":"YulFunctionCall","src":"685:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:29"},"nodeType":"YulFunctionCall","src":"714:32:29"},"nodeType":"YulExpressionStatement","src":"714:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:29","type":""}],"src":"615:137:29"},{"body":{"nodeType":"YulBlock","src":"823:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:29"},"nodeType":"YulFunctionCall","src":"871:79:29"},"nodeType":"YulExpressionStatement","src":"871:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:29"},"nodeType":"YulFunctionCall","src":"840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:29"},"nodeType":"YulFunctionCall","src":"836:32:29"},"nodeType":"YulIf","src":"833:119:29"},{"nodeType":"YulBlock","src":"962:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:29"},"nodeType":"YulFunctionCall","src":"1016:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:29","type":""}],"src":"758:327:29"},{"body":{"nodeType":"YulBlock","src":"1133:48:29","statements":[{"nodeType":"YulAssignment","src":"1143:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:29"},"nodeType":"YulFunctionCall","src":"1161:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:29"},"nodeType":"YulFunctionCall","src":"1154:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:29","type":""}],"src":"1091:90:29"},{"body":{"nodeType":"YulBlock","src":"1246:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:29"},"nodeType":"YulFunctionCall","src":"1268:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:29"},"nodeType":"YulFunctionCall","src":"1256:34:29"},"nodeType":"YulExpressionStatement","src":"1256:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:29","type":""}],"src":"1187:109:29"},{"body":{"nodeType":"YulBlock","src":"1394:118:29","statements":[{"nodeType":"YulAssignment","src":"1404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:29"},"nodeType":"YulFunctionCall","src":"1487:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:29"},"nodeType":"YulFunctionCall","src":"1440:65:29"},"nodeType":"YulExpressionStatement","src":"1440:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:29","type":""}],"src":"1302:210:29"},{"body":{"nodeType":"YulBlock","src":"1577:40:29","statements":[{"nodeType":"YulAssignment","src":"1588:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:29"},"nodeType":"YulFunctionCall","src":"1598:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:29","type":""}],"src":"1518:99:29"},{"body":{"nodeType":"YulBlock","src":"1719:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:29"},"nodeType":"YulFunctionCall","src":"1729:19:29"},"nodeType":"YulExpressionStatement","src":"1729:19:29"},{"nodeType":"YulAssignment","src":"1757:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:29"},"nodeType":"YulFunctionCall","src":"1772:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:29","type":""}],"src":"1623:169:29"},{"body":{"nodeType":"YulBlock","src":"1847:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:29"},"nodeType":"YulFunctionCall","src":"1947:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:29"},"nodeType":"YulFunctionCall","src":"1966:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:29"},"nodeType":"YulFunctionCall","src":"1960:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:29"},"nodeType":"YulFunctionCall","src":"1940:39:29"},"nodeType":"YulExpressionStatement","src":"1940:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:29"},"nodeType":"YulFunctionCall","src":"1884:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:29","statements":[{"nodeType":"YulAssignment","src":"1900:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:29"},"nodeType":"YulFunctionCall","src":"1905:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:29","statements":[]},"src":"1876:113:29"},{"body":{"nodeType":"YulBlock","src":"2023:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:29"},"nodeType":"YulFunctionCall","src":"2069:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:29"},"nodeType":"YulFunctionCall","src":"2062:27:29"},"nodeType":"YulExpressionStatement","src":"2062:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:29"},"nodeType":"YulFunctionCall","src":"2001:13:29"},"nodeType":"YulIf","src":"1998:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:29","type":""}],"src":"1798:307:29"},{"body":{"nodeType":"YulBlock","src":"2159:54:29","statements":[{"nodeType":"YulAssignment","src":"2169:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:29"},"nodeType":"YulFunctionCall","src":"2183:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:29"},"nodeType":"YulFunctionCall","src":"2199:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:29"},"nodeType":"YulFunctionCall","src":"2179:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:29","type":""}],"src":"2111:102:29"},{"body":{"nodeType":"YulBlock","src":"2311:272:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:29"},"nodeType":"YulFunctionCall","src":"2335:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:29"},"nodeType":"YulFunctionCall","src":"2390:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:29"},"nodeType":"YulFunctionCall","src":"2492:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:29"},"nodeType":"YulFunctionCall","src":"2470:52:29"},"nodeType":"YulExpressionStatement","src":"2470:52:29"},{"nodeType":"YulAssignment","src":"2531:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:29"},"nodeType":"YulFunctionCall","src":"2547:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:29"},"nodeType":"YulFunctionCall","src":"2538:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:29","type":""}],"src":"2219:364:29"},{"body":{"nodeType":"YulBlock","src":"2707:195:29","statements":[{"nodeType":"YulAssignment","src":"2717:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:29"},"nodeType":"YulFunctionCall","src":"2725:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:29"},"nodeType":"YulFunctionCall","src":"2760:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:29"},"nodeType":"YulFunctionCall","src":"2779:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:29"},"nodeType":"YulFunctionCall","src":"2753:47:29"},"nodeType":"YulExpressionStatement","src":"2753:47:29"},{"nodeType":"YulAssignment","src":"2809:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:29"},"nodeType":"YulFunctionCall","src":"2817:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:29","type":""}],"src":"2589:313:29"},{"body":{"nodeType":"YulBlock","src":"2953:32:29","statements":[{"nodeType":"YulAssignment","src":"2963:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:29","type":""}],"src":"2908:77:29"},{"body":{"nodeType":"YulBlock","src":"3034:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:29"},"nodeType":"YulFunctionCall","src":"3093:12:29"},"nodeType":"YulExpressionStatement","src":"3093:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:29"},"nodeType":"YulFunctionCall","src":"3064:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:29"},"nodeType":"YulFunctionCall","src":"3054:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:29"},"nodeType":"YulFunctionCall","src":"3047:43:29"},"nodeType":"YulIf","src":"3044:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:29","type":""}],"src":"2991:122:29"},{"body":{"nodeType":"YulBlock","src":"3171:87:29","statements":[{"nodeType":"YulAssignment","src":"3181:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:29"},"nodeType":"YulFunctionCall","src":"3190:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:29"},"nodeType":"YulFunctionCall","src":"3219:33:29"},"nodeType":"YulExpressionStatement","src":"3219:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:29","type":""}],"src":"3119:139:29"},{"body":{"nodeType":"YulBlock","src":"3330:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:29"},"nodeType":"YulFunctionCall","src":"3378:79:29"},"nodeType":"YulExpressionStatement","src":"3378:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:29"},"nodeType":"YulFunctionCall","src":"3347:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:29"},"nodeType":"YulFunctionCall","src":"3343:32:29"},"nodeType":"YulIf","src":"3340:119:29"},{"nodeType":"YulBlock","src":"3469:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:29"},"nodeType":"YulFunctionCall","src":"3544:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:29"},"nodeType":"YulFunctionCall","src":"3523:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:29","type":""}],"src":"3264:329:29"},{"body":{"nodeType":"YulBlock","src":"3644:81:29","statements":[{"nodeType":"YulAssignment","src":"3654:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:29"},"nodeType":"YulFunctionCall","src":"3665:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:29","type":""}],"src":"3599:126:29"},{"body":{"nodeType":"YulBlock","src":"3776:51:29","statements":[{"nodeType":"YulAssignment","src":"3786:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:29"},"nodeType":"YulFunctionCall","src":"3797:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:29","type":""}],"src":"3731:96:29"},{"body":{"nodeType":"YulBlock","src":"3898:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:29"},"nodeType":"YulFunctionCall","src":"3920:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:29"},"nodeType":"YulFunctionCall","src":"3908:37:29"},"nodeType":"YulExpressionStatement","src":"3908:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:29","type":""}],"src":"3833:118:29"},{"body":{"nodeType":"YulBlock","src":"4055:124:29","statements":[{"nodeType":"YulAssignment","src":"4065:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:29"},"nodeType":"YulFunctionCall","src":"4073:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:29"},"nodeType":"YulFunctionCall","src":"4154:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:29"},"nodeType":"YulFunctionCall","src":"4101:71:29"},"nodeType":"YulExpressionStatement","src":"4101:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:29","type":""}],"src":"3957:222:29"},{"body":{"nodeType":"YulBlock","src":"4228:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:29"},"nodeType":"YulFunctionCall","src":"4287:12:29"},"nodeType":"YulExpressionStatement","src":"4287:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:29"},"nodeType":"YulFunctionCall","src":"4258:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:29"},"nodeType":"YulFunctionCall","src":"4248:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:29"},"nodeType":"YulFunctionCall","src":"4241:43:29"},"nodeType":"YulIf","src":"4238:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:29","type":""}],"src":"4185:122:29"},{"body":{"nodeType":"YulBlock","src":"4365:87:29","statements":[{"nodeType":"YulAssignment","src":"4375:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:29"},"nodeType":"YulFunctionCall","src":"4384:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:29"},"nodeType":"YulFunctionCall","src":"4413:33:29"},"nodeType":"YulExpressionStatement","src":"4413:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:29","type":""}],"src":"4313:139:29"},{"body":{"nodeType":"YulBlock","src":"4541:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:29"},"nodeType":"YulFunctionCall","src":"4589:79:29"},"nodeType":"YulExpressionStatement","src":"4589:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:29"},"nodeType":"YulFunctionCall","src":"4558:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:29"},"nodeType":"YulFunctionCall","src":"4554:32:29"},"nodeType":"YulIf","src":"4551:119:29"},{"nodeType":"YulBlock","src":"4680:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:29"},"nodeType":"YulFunctionCall","src":"4755:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:29"},"nodeType":"YulFunctionCall","src":"4734:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:29"}]}]},{"nodeType":"YulBlock","src":"4807:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:29"},"nodeType":"YulFunctionCall","src":"4883:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:29"},"nodeType":"YulFunctionCall","src":"4862:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:29","type":""}],"src":"4458:474:29"},{"body":{"nodeType":"YulBlock","src":"5038:519:29","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:29"},"nodeType":"YulFunctionCall","src":"5086:79:29"},"nodeType":"YulExpressionStatement","src":"5086:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:29"},"nodeType":"YulFunctionCall","src":"5055:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:29"},"nodeType":"YulFunctionCall","src":"5051:32:29"},"nodeType":"YulIf","src":"5048:119:29"},{"nodeType":"YulBlock","src":"5177:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:29"},"nodeType":"YulFunctionCall","src":"5252:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:29"},"nodeType":"YulFunctionCall","src":"5231:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:29"}]}]},{"nodeType":"YulBlock","src":"5304:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:29"},"nodeType":"YulFunctionCall","src":"5380:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:29"},"nodeType":"YulFunctionCall","src":"5359:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:29"}]}]},{"nodeType":"YulBlock","src":"5432:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:29"},"nodeType":"YulFunctionCall","src":"5508:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:29"},"nodeType":"YulFunctionCall","src":"5487:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:29","type":""}],"src":"4938:619:29"},{"body":{"nodeType":"YulBlock","src":"5629:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:29"},"nodeType":"YulFunctionCall","src":"5677:79:29"},"nodeType":"YulExpressionStatement","src":"5677:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:29"},"nodeType":"YulFunctionCall","src":"5646:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:29"},"nodeType":"YulFunctionCall","src":"5642:32:29"},"nodeType":"YulIf","src":"5639:119:29"},{"nodeType":"YulBlock","src":"5768:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:29"},"nodeType":"YulFunctionCall","src":"5843:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:29"},"nodeType":"YulFunctionCall","src":"5822:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:29","type":""}],"src":"5563:329:29"},{"body":{"nodeType":"YulBlock","src":"5963:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:29"},"nodeType":"YulFunctionCall","src":"5985:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:29"},"nodeType":"YulFunctionCall","src":"5973:37:29"},"nodeType":"YulExpressionStatement","src":"5973:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:29","type":""}],"src":"5898:118:29"},{"body":{"nodeType":"YulBlock","src":"6120:124:29","statements":[{"nodeType":"YulAssignment","src":"6130:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:29"},"nodeType":"YulFunctionCall","src":"6138:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:29"},"nodeType":"YulFunctionCall","src":"6219:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:29"},"nodeType":"YulFunctionCall","src":"6166:71:29"},"nodeType":"YulExpressionStatement","src":"6166:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:29","type":""}],"src":"6022:222:29"},{"body":{"nodeType":"YulBlock","src":"6290:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:29"},"nodeType":"YulFunctionCall","src":"6346:12:29"},"nodeType":"YulExpressionStatement","src":"6346:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:29"},"nodeType":"YulFunctionCall","src":"6320:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:29"},"nodeType":"YulFunctionCall","src":"6310:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:29"},"nodeType":"YulFunctionCall","src":"6303:40:29"},"nodeType":"YulIf","src":"6300:60:29"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:29","type":""}],"src":"6250:116:29"},{"body":{"nodeType":"YulBlock","src":"6421:84:29","statements":[{"nodeType":"YulAssignment","src":"6431:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:29"},"nodeType":"YulFunctionCall","src":"6440:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:29"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:29"},"nodeType":"YulFunctionCall","src":"6469:30:29"},"nodeType":"YulExpressionStatement","src":"6469:30:29"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:29","type":""}],"src":"6372:133:29"},{"body":{"nodeType":"YulBlock","src":"6591:388:29","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:29"},"nodeType":"YulFunctionCall","src":"6639:79:29"},"nodeType":"YulExpressionStatement","src":"6639:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:29"},"nodeType":"YulFunctionCall","src":"6608:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:29"},"nodeType":"YulFunctionCall","src":"6604:32:29"},"nodeType":"YulIf","src":"6601:119:29"},{"nodeType":"YulBlock","src":"6730:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:29"},"nodeType":"YulFunctionCall","src":"6805:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:29"},"nodeType":"YulFunctionCall","src":"6784:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:29"}]}]},{"nodeType":"YulBlock","src":"6857:115:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:29"},"nodeType":"YulFunctionCall","src":"6930:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:29"},"nodeType":"YulFunctionCall","src":"6912:50:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:29","type":""}],"src":"6511:468:29"},{"body":{"nodeType":"YulBlock","src":"7074:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:29"},"nodeType":"YulFunctionCall","src":"7084:12:29"},"nodeType":"YulExpressionStatement","src":"7084:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:29"},{"body":{"nodeType":"YulBlock","src":"7197:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:29"},"nodeType":"YulFunctionCall","src":"7207:12:29"},"nodeType":"YulExpressionStatement","src":"7207:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:29"},{"body":{"nodeType":"YulBlock","src":"7259:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:29"},"nodeType":"YulFunctionCall","src":"7269:88:29"},"nodeType":"YulExpressionStatement","src":"7269:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:29"},"nodeType":"YulFunctionCall","src":"7366:15:29"},"nodeType":"YulExpressionStatement","src":"7366:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:29"},"nodeType":"YulFunctionCall","src":"7390:15:29"},"nodeType":"YulExpressionStatement","src":"7390:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:29"},{"body":{"nodeType":"YulBlock","src":"7460:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:29"},"nodeType":"YulFunctionCall","src":"7500:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:29"},"nodeType":"YulFunctionCall","src":"7488:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:29"},"nodeType":"YulFunctionCall","src":"7641:18:29"},"nodeType":"YulExpressionStatement","src":"7641:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:29"},"nodeType":"YulFunctionCall","src":"7579:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:29"},"nodeType":"YulFunctionCall","src":"7615:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:29"},"nodeType":"YulFunctionCall","src":"7576:62:29"},"nodeType":"YulIf","src":"7573:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:29"},"nodeType":"YulFunctionCall","src":"7670:22:29"},"nodeType":"YulExpressionStatement","src":"7670:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:29","type":""}],"src":"7417:281:29"},{"body":{"nodeType":"YulBlock","src":"7745:88:29","statements":[{"nodeType":"YulAssignment","src":"7755:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:29"},"nodeType":"YulFunctionCall","src":"7765:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:29"},"nodeType":"YulFunctionCall","src":"7794:33:29"},"nodeType":"YulExpressionStatement","src":"7794:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:29","type":""}],"src":"7704:129:29"},{"body":{"nodeType":"YulBlock","src":"7905:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:29"},"nodeType":"YulFunctionCall","src":"8012:18:29"},"nodeType":"YulExpressionStatement","src":"8012:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:29"},"nodeType":"YulFunctionCall","src":"7979:30:29"},"nodeType":"YulIf","src":"7976:56:29"},{"nodeType":"YulAssignment","src":"8042:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:29"},"nodeType":"YulFunctionCall","src":"8050:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:29"}]},{"nodeType":"YulAssignment","src":"8116:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:29"},"nodeType":"YulFunctionCall","src":"8124:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:29","type":""}],"src":"7839:307:29"},{"body":{"nodeType":"YulBlock","src":"8203:103:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:29"},"nodeType":"YulFunctionCall","src":"8213:30:29"},"nodeType":"YulExpressionStatement","src":"8213:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:29"},"nodeType":"YulFunctionCall","src":"8280:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:29"},"nodeType":"YulFunctionCall","src":"8273:27:29"},"nodeType":"YulExpressionStatement","src":"8273:27:29"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:29","type":""}],"src":"8152:154:29"},{"body":{"nodeType":"YulBlock","src":"8395:327:29","statements":[{"nodeType":"YulAssignment","src":"8405:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:29"},"nodeType":"YulFunctionCall","src":"8430:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:29"},"nodeType":"YulFunctionCall","src":"8414:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:29"},"nodeType":"YulFunctionCall","src":"8488:21:29"},"nodeType":"YulExpressionStatement","src":"8488:21:29"},{"nodeType":"YulVariableDeclaration","src":"8518:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:29"},"nodeType":"YulFunctionCall","src":"8529:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:29"},"nodeType":"YulFunctionCall","src":"8585:79:29"},"nodeType":"YulExpressionStatement","src":"8585:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:29"},"nodeType":"YulFunctionCall","src":"8560:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:29"},"nodeType":"YulFunctionCall","src":"8557:25:29"},"nodeType":"YulIf","src":"8554:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:29"},"nodeType":"YulFunctionCall","src":"8675:41:29"},"nodeType":"YulExpressionStatement","src":"8675:41:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:29","type":""}],"src":"8312:410:29"},{"body":{"nodeType":"YulBlock","src":"8802:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:29"},"nodeType":"YulFunctionCall","src":"8853:79:29"},"nodeType":"YulExpressionStatement","src":"8853:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:29"},"nodeType":"YulFunctionCall","src":"8826:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:29"},"nodeType":"YulFunctionCall","src":"8822:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:29"},"nodeType":"YulFunctionCall","src":"8815:35:29"},"nodeType":"YulIf","src":"8812:122:29"},{"nodeType":"YulVariableDeclaration","src":"8943:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:29"},"nodeType":"YulFunctionCall","src":"8957:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:29"},"nodeType":"YulFunctionCall","src":"9042:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:29"},"nodeType":"YulFunctionCall","src":"8995:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:29","type":""}],"src":"8741:338:29"},{"body":{"nodeType":"YulBlock","src":"9211:817:29","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:29"},"nodeType":"YulFunctionCall","src":"9260:79:29"},"nodeType":"YulExpressionStatement","src":"9260:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:29"},"nodeType":"YulFunctionCall","src":"9228:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:29"},"nodeType":"YulFunctionCall","src":"9224:33:29"},"nodeType":"YulIf","src":"9221:120:29"},{"nodeType":"YulBlock","src":"9351:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:29"},"nodeType":"YulFunctionCall","src":"9426:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:29"},"nodeType":"YulFunctionCall","src":"9405:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:29"}]}]},{"nodeType":"YulBlock","src":"9478:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:29"},"nodeType":"YulFunctionCall","src":"9554:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:29"},"nodeType":"YulFunctionCall","src":"9533:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:29"}]}]},{"nodeType":"YulBlock","src":"9606:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:29"},"nodeType":"YulFunctionCall","src":"9682:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:29"},"nodeType":"YulFunctionCall","src":"9661:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:29"}]}]},{"nodeType":"YulBlock","src":"9734:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:29"},"nodeType":"YulFunctionCall","src":"9776:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:29"},"nodeType":"YulFunctionCall","src":"9763:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:29"},"nodeType":"YulFunctionCall","src":"9844:79:29"},"nodeType":"YulExpressionStatement","src":"9844:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:29"},"nodeType":"YulFunctionCall","src":"9811:30:29"},"nodeType":"YulIf","src":"9808:117:29"},{"nodeType":"YulAssignment","src":"9939:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:29"},"nodeType":"YulFunctionCall","src":"9979:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:29"},"nodeType":"YulFunctionCall","src":"9949:62:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:29","type":""}],"src":"9085:943:29"},{"body":{"nodeType":"YulBlock","src":"10117:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:29"},"nodeType":"YulFunctionCall","src":"10165:79:29"},"nodeType":"YulExpressionStatement","src":"10165:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:29"},"nodeType":"YulFunctionCall","src":"10134:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:29"},"nodeType":"YulFunctionCall","src":"10130:32:29"},"nodeType":"YulIf","src":"10127:119:29"},{"nodeType":"YulBlock","src":"10256:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:29"},"nodeType":"YulFunctionCall","src":"10331:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:29"},"nodeType":"YulFunctionCall","src":"10310:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:29"}]}]},{"nodeType":"YulBlock","src":"10383:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:29"},"nodeType":"YulFunctionCall","src":"10459:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:29"},"nodeType":"YulFunctionCall","src":"10438:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:29","type":""}],"src":"10034:474:29"},{"body":{"nodeType":"YulBlock","src":"10542:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:29"},"nodeType":"YulFunctionCall","src":"10552:88:29"},"nodeType":"YulExpressionStatement","src":"10552:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:29"},"nodeType":"YulFunctionCall","src":"10649:15:29"},"nodeType":"YulExpressionStatement","src":"10649:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:29"},"nodeType":"YulFunctionCall","src":"10673:15:29"},"nodeType":"YulExpressionStatement","src":"10673:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:29"},{"body":{"nodeType":"YulBlock","src":"10751:269:29","statements":[{"nodeType":"YulAssignment","src":"10761:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:29"},"nodeType":"YulFunctionCall","src":"10771:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:29"},"nodeType":"YulFunctionCall","src":"10818:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:29","statements":[{"nodeType":"YulAssignment","src":"10883:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:29"},"nodeType":"YulFunctionCall","src":"10893:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:29"},"nodeType":"YulFunctionCall","src":"10842:26:29"},"nodeType":"YulIf","src":"10839:81:29"},{"body":{"nodeType":"YulBlock","src":"10972:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:29"},"nodeType":"YulFunctionCall","src":"10986:18:29"},"nodeType":"YulExpressionStatement","src":"10986:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:29"},"nodeType":"YulFunctionCall","src":"10956:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:29"},"nodeType":"YulFunctionCall","src":"10933:38:29"},"nodeType":"YulIf","src":"10930:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:29","type":""}],"src":"10700:320:29"},{"body":{"nodeType":"YulBlock","src":"11132:114:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:29"},"nodeType":"YulFunctionCall","src":"11150:14:29"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:29","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:29"},"nodeType":"YulFunctionCall","src":"11143:58:29"},"nodeType":"YulExpressionStatement","src":"11143:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:29"},"nodeType":"YulFunctionCall","src":"11218:15:29"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:29","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:29"},"nodeType":"YulFunctionCall","src":"11211:28:29"},"nodeType":"YulExpressionStatement","src":"11211:28:29"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:29","type":""}],"src":"11026:220:29"},{"body":{"nodeType":"YulBlock","src":"11398:220:29","statements":[{"nodeType":"YulAssignment","src":"11408:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:29","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:29"},"nodeType":"YulFunctionCall","src":"11415:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:29"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:29"},"nodeType":"YulFunctionCall","src":"11491:93:29"},"nodeType":"YulExpressionStatement","src":"11491:93:29"},{"nodeType":"YulAssignment","src":"11593:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:29"},"nodeType":"YulFunctionCall","src":"11600:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:29"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:29","type":""}],"src":"11252:366:29"},{"body":{"nodeType":"YulBlock","src":"11795:248:29","statements":[{"nodeType":"YulAssignment","src":"11805:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:29"},"nodeType":"YulFunctionCall","src":"11813:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:29"},"nodeType":"YulFunctionCall","src":"11848:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:29"},"nodeType":"YulFunctionCall","src":"11867:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:29"},"nodeType":"YulFunctionCall","src":"11841:47:29"},"nodeType":"YulExpressionStatement","src":"11841:47:29"},{"nodeType":"YulAssignment","src":"11897:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:29"},"nodeType":"YulFunctionCall","src":"11905:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:29","type":""}],"src":"11624:419:29"},{"body":{"nodeType":"YulBlock","src":"12155:142:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:29"},"nodeType":"YulFunctionCall","src":"12173:14:29"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:29","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:29"},"nodeType":"YulFunctionCall","src":"12166:58:29"},"nodeType":"YulExpressionStatement","src":"12166:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:29"},"nodeType":"YulFunctionCall","src":"12241:15:29"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:31:29","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:29"},"nodeType":"YulFunctionCall","src":"12234:56:29"},"nodeType":"YulExpressionStatement","src":"12234:56:29"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:29","type":""}],"src":"12049:248:29"},{"body":{"nodeType":"YulBlock","src":"12449:220:29","statements":[{"nodeType":"YulAssignment","src":"12459:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12525:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:29","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12466:58:29"},"nodeType":"YulFunctionCall","src":"12466:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12631:3:29"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12542:88:29"},"nodeType":"YulFunctionCall","src":"12542:93:29"},"nodeType":"YulExpressionStatement","src":"12542:93:29"},{"nodeType":"YulAssignment","src":"12644:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12655:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"12660:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12651:3:29"},"nodeType":"YulFunctionCall","src":"12651:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12644:3:29"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12437:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12445:3:29","type":""}],"src":"12303:366:29"},{"body":{"nodeType":"YulBlock","src":"12846:248:29","statements":[{"nodeType":"YulAssignment","src":"12856:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:29"},"nodeType":"YulFunctionCall","src":"12864:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:29"},"nodeType":"YulFunctionCall","src":"12899:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12922:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12918:3:29"},"nodeType":"YulFunctionCall","src":"12918:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12892:6:29"},"nodeType":"YulFunctionCall","src":"12892:47:29"},"nodeType":"YulExpressionStatement","src":"12892:47:29"},{"nodeType":"YulAssignment","src":"12948:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13082:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12956:124:29"},"nodeType":"YulFunctionCall","src":"12956:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12948:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12826:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12841:4:29","type":""}],"src":"12675:419:29"},{"body":{"nodeType":"YulBlock","src":"13206:126:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13228:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13224:3:29"},"nodeType":"YulFunctionCall","src":"13224:14:29"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13240:34:29","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13217:6:29"},"nodeType":"YulFunctionCall","src":"13217:58:29"},"nodeType":"YulExpressionStatement","src":"13217:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13296:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13304:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13292:3:29"},"nodeType":"YulFunctionCall","src":"13292:15:29"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13309:15:29","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:29"},"nodeType":"YulFunctionCall","src":"13285:40:29"},"nodeType":"YulExpressionStatement","src":"13285:40:29"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13198:6:29","type":""}],"src":"13100:232:29"},{"body":{"nodeType":"YulBlock","src":"13484:220:29","statements":[{"nodeType":"YulAssignment","src":"13494:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:29","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13501:58:29"},"nodeType":"YulFunctionCall","src":"13501:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13666:3:29"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13577:88:29"},"nodeType":"YulFunctionCall","src":"13577:93:29"},"nodeType":"YulExpressionStatement","src":"13577:93:29"},{"nodeType":"YulAssignment","src":"13679:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13686:3:29"},"nodeType":"YulFunctionCall","src":"13686:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13679:3:29"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13472:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13480:3:29","type":""}],"src":"13338:366:29"},{"body":{"nodeType":"YulBlock","src":"13881:248:29","statements":[{"nodeType":"YulAssignment","src":"13891:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13903:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13899:3:29"},"nodeType":"YulFunctionCall","src":"13899:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13891:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:29"},"nodeType":"YulFunctionCall","src":"13934:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13957:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13953:3:29"},"nodeType":"YulFunctionCall","src":"13953:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:29"},"nodeType":"YulFunctionCall","src":"13927:47:29"},"nodeType":"YulExpressionStatement","src":"13927:47:29"},{"nodeType":"YulAssignment","src":"13983:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14117:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13991:124:29"},"nodeType":"YulFunctionCall","src":"13991:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13983:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13876:4:29","type":""}],"src":"13710:419:29"},{"body":{"nodeType":"YulBlock","src":"14241:68:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14263:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:29"},"nodeType":"YulFunctionCall","src":"14259:14:29"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14275:26:29","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:29"},"nodeType":"YulFunctionCall","src":"14252:50:29"},"nodeType":"YulExpressionStatement","src":"14252:50:29"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14233:6:29","type":""}],"src":"14135:174:29"},{"body":{"nodeType":"YulBlock","src":"14461:220:29","statements":[{"nodeType":"YulAssignment","src":"14471:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14537:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14542:2:29","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14478:58:29"},"nodeType":"YulFunctionCall","src":"14478:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14643:3:29"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14554:88:29"},"nodeType":"YulFunctionCall","src":"14554:93:29"},"nodeType":"YulExpressionStatement","src":"14554:93:29"},{"nodeType":"YulAssignment","src":"14656:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14667:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14672:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:29"},"nodeType":"YulFunctionCall","src":"14663:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:29"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14449:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14457:3:29","type":""}],"src":"14315:366:29"},{"body":{"nodeType":"YulBlock","src":"14858:248:29","statements":[{"nodeType":"YulAssignment","src":"14868:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:29"},"nodeType":"YulFunctionCall","src":"14876:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14868:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14926:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:29"},"nodeType":"YulFunctionCall","src":"14911:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14930:3:29"},"nodeType":"YulFunctionCall","src":"14930:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:29"},"nodeType":"YulFunctionCall","src":"14904:47:29"},"nodeType":"YulExpressionStatement","src":"14904:47:29"},{"nodeType":"YulAssignment","src":"14960:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14968:124:29"},"nodeType":"YulFunctionCall","src":"14968:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14960:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14838:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:29","type":""}],"src":"14687:419:29"},{"body":{"nodeType":"YulBlock","src":"15218:122:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15240:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15248:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:29"},"nodeType":"YulFunctionCall","src":"15236:14:29"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15252:34:29","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:29"},"nodeType":"YulFunctionCall","src":"15229:58:29"},"nodeType":"YulExpressionStatement","src":"15229:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15308:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15304:3:29"},"nodeType":"YulFunctionCall","src":"15304:15:29"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15321:11:29","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15297:6:29"},"nodeType":"YulFunctionCall","src":"15297:36:29"},"nodeType":"YulExpressionStatement","src":"15297:36:29"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15210:6:29","type":""}],"src":"15112:228:29"},{"body":{"nodeType":"YulBlock","src":"15492:220:29","statements":[{"nodeType":"YulAssignment","src":"15502:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15568:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:29","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:58:29"},"nodeType":"YulFunctionCall","src":"15509:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15502:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:29"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15585:88:29"},"nodeType":"YulFunctionCall","src":"15585:93:29"},"nodeType":"YulExpressionStatement","src":"15585:93:29"},{"nodeType":"YulAssignment","src":"15687:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:29"},"nodeType":"YulFunctionCall","src":"15694:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15687:3:29"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15480:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15488:3:29","type":""}],"src":"15346:366:29"},{"body":{"nodeType":"YulBlock","src":"15889:248:29","statements":[{"nodeType":"YulAssignment","src":"15899:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15922:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:29"},"nodeType":"YulFunctionCall","src":"15907:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15899:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15957:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:29"},"nodeType":"YulFunctionCall","src":"15942:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15961:3:29"},"nodeType":"YulFunctionCall","src":"15961:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15935:6:29"},"nodeType":"YulFunctionCall","src":"15935:47:29"},"nodeType":"YulExpressionStatement","src":"15935:47:29"},{"nodeType":"YulAssignment","src":"15991:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16125:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15999:124:29"},"nodeType":"YulFunctionCall","src":"15999:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15991:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15884:4:29","type":""}],"src":"15718:419:29"},{"body":{"nodeType":"YulBlock","src":"16257:34:29","statements":[{"nodeType":"YulAssignment","src":"16267:18:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"16282:3:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16267:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16229:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"16234:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16245:11:29","type":""}],"src":"16143:148:29"},{"body":{"nodeType":"YulBlock","src":"16407:267:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16417:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16464:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16431:32:29"},"nodeType":"YulFunctionCall","src":"16431:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16421:6:29","type":""}]},{"nodeType":"YulAssignment","src":"16479:96:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16563:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16568:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16486:76:29"},"nodeType":"YulFunctionCall","src":"16486:89:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16479:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16610:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"16617:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16606:3:29"},"nodeType":"YulFunctionCall","src":"16606:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"16624:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16629:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16584:21:29"},"nodeType":"YulFunctionCall","src":"16584:52:29"},"nodeType":"YulExpressionStatement","src":"16584:52:29"},{"nodeType":"YulAssignment","src":"16645:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16656:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16661:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16652:3:29"},"nodeType":"YulFunctionCall","src":"16652:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16645:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16388:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16395:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16403:3:29","type":""}],"src":"16297:377:29"},{"body":{"nodeType":"YulBlock","src":"16864:251:29","statements":[{"nodeType":"YulAssignment","src":"16875:102:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16964:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"16973:3:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16882:81:29"},"nodeType":"YulFunctionCall","src":"16882:95:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16875:3:29"}]},{"nodeType":"YulAssignment","src":"16987:102:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17076:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"17085:3:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16994:81:29"},"nodeType":"YulFunctionCall","src":"16994:95:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16987:3:29"}]},{"nodeType":"YulAssignment","src":"17099:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"17106:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17099:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16835:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16841:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16849:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16860:3:29","type":""}],"src":"16680:435:29"},{"body":{"nodeType":"YulBlock","src":"17227:118:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17249:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17257:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17245:3:29"},"nodeType":"YulFunctionCall","src":"17245:14:29"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17261:34:29","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17238:6:29"},"nodeType":"YulFunctionCall","src":"17238:58:29"},"nodeType":"YulExpressionStatement","src":"17238:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17317:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17325:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17313:3:29"},"nodeType":"YulFunctionCall","src":"17313:15:29"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17330:7:29","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17306:6:29"},"nodeType":"YulFunctionCall","src":"17306:32:29"},"nodeType":"YulExpressionStatement","src":"17306:32:29"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17219:6:29","type":""}],"src":"17121:224:29"},{"body":{"nodeType":"YulBlock","src":"17497:220:29","statements":[{"nodeType":"YulAssignment","src":"17507:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17573:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17578:2:29","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17514:58:29"},"nodeType":"YulFunctionCall","src":"17514:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17507:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17679:3:29"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17590:88:29"},"nodeType":"YulFunctionCall","src":"17590:93:29"},"nodeType":"YulExpressionStatement","src":"17590:93:29"},{"nodeType":"YulAssignment","src":"17692:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17703:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17708:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17699:3:29"},"nodeType":"YulFunctionCall","src":"17699:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17692:3:29"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17485:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17493:3:29","type":""}],"src":"17351:366:29"},{"body":{"nodeType":"YulBlock","src":"17894:248:29","statements":[{"nodeType":"YulAssignment","src":"17904:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17916:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17927:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17912:3:29"},"nodeType":"YulFunctionCall","src":"17912:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17904:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17951:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17962:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17947:3:29"},"nodeType":"YulFunctionCall","src":"17947:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17970:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17976:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17966:3:29"},"nodeType":"YulFunctionCall","src":"17966:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17940:6:29"},"nodeType":"YulFunctionCall","src":"17940:47:29"},"nodeType":"YulExpressionStatement","src":"17940:47:29"},{"nodeType":"YulAssignment","src":"17996:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18130:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18004:124:29"},"nodeType":"YulFunctionCall","src":"18004:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17996:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17874:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17889:4:29","type":""}],"src":"17723:419:29"},{"body":{"nodeType":"YulBlock","src":"18254:117:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18276:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18284:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18272:3:29"},"nodeType":"YulFunctionCall","src":"18272:14:29"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18288:34:29","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18265:6:29"},"nodeType":"YulFunctionCall","src":"18265:58:29"},"nodeType":"YulExpressionStatement","src":"18265:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18344:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18352:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18340:3:29"},"nodeType":"YulFunctionCall","src":"18340:15:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18357:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18333:6:29"},"nodeType":"YulFunctionCall","src":"18333:31:29"},"nodeType":"YulExpressionStatement","src":"18333:31:29"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18246:6:29","type":""}],"src":"18148:223:29"},{"body":{"nodeType":"YulBlock","src":"18523:220:29","statements":[{"nodeType":"YulAssignment","src":"18533:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18599:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"18604:2:29","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18540:58:29"},"nodeType":"YulFunctionCall","src":"18540:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18533:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18705:3:29"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18616:88:29"},"nodeType":"YulFunctionCall","src":"18616:93:29"},"nodeType":"YulExpressionStatement","src":"18616:93:29"},{"nodeType":"YulAssignment","src":"18718:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18729:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"18734:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18725:3:29"},"nodeType":"YulFunctionCall","src":"18725:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18718:3:29"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18511:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18519:3:29","type":""}],"src":"18377:366:29"},{"body":{"nodeType":"YulBlock","src":"18920:248:29","statements":[{"nodeType":"YulAssignment","src":"18930:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18942:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18953:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18938:3:29"},"nodeType":"YulFunctionCall","src":"18938:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18930:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18977:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18988:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18973:3:29"},"nodeType":"YulFunctionCall","src":"18973:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18996:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19002:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18992:3:29"},"nodeType":"YulFunctionCall","src":"18992:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18966:6:29"},"nodeType":"YulFunctionCall","src":"18966:47:29"},"nodeType":"YulExpressionStatement","src":"18966:47:29"},{"nodeType":"YulAssignment","src":"19022:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19156:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19030:124:29"},"nodeType":"YulFunctionCall","src":"19030:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19022:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18900:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18915:4:29","type":""}],"src":"18749:419:29"},{"body":{"nodeType":"YulBlock","src":"19280:69:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19302:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19310:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:29"},"nodeType":"YulFunctionCall","src":"19298:14:29"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19314:27:29","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19291:6:29"},"nodeType":"YulFunctionCall","src":"19291:51:29"},"nodeType":"YulExpressionStatement","src":"19291:51:29"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19272:6:29","type":""}],"src":"19174:175:29"},{"body":{"nodeType":"YulBlock","src":"19501:220:29","statements":[{"nodeType":"YulAssignment","src":"19511:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19577:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19582:2:29","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19518:58:29"},"nodeType":"YulFunctionCall","src":"19518:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19511:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19683:3:29"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19594:88:29"},"nodeType":"YulFunctionCall","src":"19594:93:29"},"nodeType":"YulExpressionStatement","src":"19594:93:29"},{"nodeType":"YulAssignment","src":"19696:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19707:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19712:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:29"},"nodeType":"YulFunctionCall","src":"19703:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19696:3:29"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19489:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19497:3:29","type":""}],"src":"19355:366:29"},{"body":{"nodeType":"YulBlock","src":"19898:248:29","statements":[{"nodeType":"YulAssignment","src":"19908:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19916:3:29"},"nodeType":"YulFunctionCall","src":"19916:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19908:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19955:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19966:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19951:3:29"},"nodeType":"YulFunctionCall","src":"19951:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19974:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19980:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19970:3:29"},"nodeType":"YulFunctionCall","src":"19970:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19944:6:29"},"nodeType":"YulFunctionCall","src":"19944:47:29"},"nodeType":"YulExpressionStatement","src":"19944:47:29"},{"nodeType":"YulAssignment","src":"20000:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20134:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20008:124:29"},"nodeType":"YulFunctionCall","src":"20008:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20000:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19878:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19893:4:29","type":""}],"src":"19727:419:29"},{"body":{"nodeType":"YulBlock","src":"20258:131:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20280:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20288:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20276:3:29"},"nodeType":"YulFunctionCall","src":"20276:14:29"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20292:34:29","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20269:6:29"},"nodeType":"YulFunctionCall","src":"20269:58:29"},"nodeType":"YulExpressionStatement","src":"20269:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20348:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20356:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20344:3:29"},"nodeType":"YulFunctionCall","src":"20344:15:29"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20361:20:29","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20337:6:29"},"nodeType":"YulFunctionCall","src":"20337:45:29"},"nodeType":"YulExpressionStatement","src":"20337:45:29"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20250:6:29","type":""}],"src":"20152:237:29"},{"body":{"nodeType":"YulBlock","src":"20541:220:29","statements":[{"nodeType":"YulAssignment","src":"20551:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20617:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20622:2:29","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20558:58:29"},"nodeType":"YulFunctionCall","src":"20558:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20551:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20723:3:29"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20634:88:29"},"nodeType":"YulFunctionCall","src":"20634:93:29"},"nodeType":"YulExpressionStatement","src":"20634:93:29"},{"nodeType":"YulAssignment","src":"20736:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20747:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20752:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20743:3:29"},"nodeType":"YulFunctionCall","src":"20743:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20736:3:29"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20529:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20537:3:29","type":""}],"src":"20395:366:29"},{"body":{"nodeType":"YulBlock","src":"20938:248:29","statements":[{"nodeType":"YulAssignment","src":"20948:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20960:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20971:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20956:3:29"},"nodeType":"YulFunctionCall","src":"20956:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20948:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20995:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21006:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20991:3:29"},"nodeType":"YulFunctionCall","src":"20991:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21014:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"21020:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21010:3:29"},"nodeType":"YulFunctionCall","src":"21010:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20984:6:29"},"nodeType":"YulFunctionCall","src":"20984:47:29"},"nodeType":"YulExpressionStatement","src":"20984:47:29"},{"nodeType":"YulAssignment","src":"21040:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21174:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21048:124:29"},"nodeType":"YulFunctionCall","src":"21048:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21040:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20918:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20933:4:29","type":""}],"src":"20767:419:29"},{"body":{"nodeType":"YulBlock","src":"21220:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21237:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21240:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21230:6:29"},"nodeType":"YulFunctionCall","src":"21230:88:29"},"nodeType":"YulExpressionStatement","src":"21230:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21334:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21337:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21327:6:29"},"nodeType":"YulFunctionCall","src":"21327:15:29"},"nodeType":"YulExpressionStatement","src":"21327:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21358:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21361:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21351:6:29"},"nodeType":"YulFunctionCall","src":"21351:15:29"},"nodeType":"YulExpressionStatement","src":"21351:15:29"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21192:180:29"},{"body":{"nodeType":"YulBlock","src":"21406:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21423:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21426:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21416:6:29"},"nodeType":"YulFunctionCall","src":"21416:88:29"},"nodeType":"YulExpressionStatement","src":"21416:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21520:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21523:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21513:6:29"},"nodeType":"YulFunctionCall","src":"21513:15:29"},"nodeType":"YulExpressionStatement","src":"21513:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21544:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21547:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21537:6:29"},"nodeType":"YulFunctionCall","src":"21537:15:29"},"nodeType":"YulExpressionStatement","src":"21537:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21378:180:29"},{"body":{"nodeType":"YulBlock","src":"21609:146:29","statements":[{"nodeType":"YulAssignment","src":"21619:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21642:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21624:17:29"},"nodeType":"YulFunctionCall","src":"21624:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21619:1:29"}]},{"nodeType":"YulAssignment","src":"21653:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21676:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21658:17:29"},"nodeType":"YulFunctionCall","src":"21658:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21653:1:29"}]},{"body":{"nodeType":"YulBlock","src":"21700:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21702:16:29"},"nodeType":"YulFunctionCall","src":"21702:18:29"},"nodeType":"YulExpressionStatement","src":"21702:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21694:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"21697:1:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21691:2:29"},"nodeType":"YulFunctionCall","src":"21691:8:29"},"nodeType":"YulIf","src":"21688:34:29"},{"nodeType":"YulAssignment","src":"21732:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21744:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"21747:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21740:3:29"},"nodeType":"YulFunctionCall","src":"21740:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21732:4:29"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21595:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"21598:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21604:4:29","type":""}],"src":"21564:191:29"},{"body":{"nodeType":"YulBlock","src":"21805:261:29","statements":[{"nodeType":"YulAssignment","src":"21815:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21838:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21820:17:29"},"nodeType":"YulFunctionCall","src":"21820:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21815:1:29"}]},{"nodeType":"YulAssignment","src":"21849:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21872:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21854:17:29"},"nodeType":"YulFunctionCall","src":"21854:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21849:1:29"}]},{"body":{"nodeType":"YulBlock","src":"22012:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22014:16:29"},"nodeType":"YulFunctionCall","src":"22014:18:29"},"nodeType":"YulExpressionStatement","src":"22014:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21933:1:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21940:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"22008:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21936:3:29"},"nodeType":"YulFunctionCall","src":"21936:74:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21930:2:29"},"nodeType":"YulFunctionCall","src":"21930:81:29"},"nodeType":"YulIf","src":"21927:107:29"},{"nodeType":"YulAssignment","src":"22044:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22055:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"22058:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22051:3:29"},"nodeType":"YulFunctionCall","src":"22051:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22044:3:29"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21792:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"21795:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21801:3:29","type":""}],"src":"21761:305:29"},{"body":{"nodeType":"YulBlock","src":"22130:40:29","statements":[{"nodeType":"YulAssignment","src":"22141:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22157:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22151:5:29"},"nodeType":"YulFunctionCall","src":"22151:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22141:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22113:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22123:6:29","type":""}],"src":"22072:98:29"},{"body":{"nodeType":"YulBlock","src":"22271:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22288:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"22293:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22281:6:29"},"nodeType":"YulFunctionCall","src":"22281:19:29"},"nodeType":"YulExpressionStatement","src":"22281:19:29"},{"nodeType":"YulAssignment","src":"22309:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22328:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22333:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22324:3:29"},"nodeType":"YulFunctionCall","src":"22324:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22309:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22243:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"22248:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22259:11:29","type":""}],"src":"22176:168:29"},{"body":{"nodeType":"YulBlock","src":"22440:270:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22450:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22496:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22464:31:29"},"nodeType":"YulFunctionCall","src":"22464:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22454:6:29","type":""}]},{"nodeType":"YulAssignment","src":"22511:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22576:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"22581:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22518:57:29"},"nodeType":"YulFunctionCall","src":"22518:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22511:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22623:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"22630:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22619:3:29"},"nodeType":"YulFunctionCall","src":"22619:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"22637:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"22642:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"22597:21:29"},"nodeType":"YulFunctionCall","src":"22597:52:29"},"nodeType":"YulExpressionStatement","src":"22597:52:29"},{"nodeType":"YulAssignment","src":"22658:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22669:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22696:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22674:21:29"},"nodeType":"YulFunctionCall","src":"22674:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22665:3:29"},"nodeType":"YulFunctionCall","src":"22665:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22658:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22421:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22428:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22436:3:29","type":""}],"src":"22350:360:29"},{"body":{"nodeType":"YulBlock","src":"22916:440:29","statements":[{"nodeType":"YulAssignment","src":"22926:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22938:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22949:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22934:3:29"},"nodeType":"YulFunctionCall","src":"22934:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22926:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23007:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23020:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23031:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23016:3:29"},"nodeType":"YulFunctionCall","src":"23016:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22963:43:29"},"nodeType":"YulFunctionCall","src":"22963:71:29"},"nodeType":"YulExpressionStatement","src":"22963:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23088:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23101:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23112:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23097:3:29"},"nodeType":"YulFunctionCall","src":"23097:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23044:43:29"},"nodeType":"YulFunctionCall","src":"23044:72:29"},"nodeType":"YulExpressionStatement","src":"23044:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23170:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23183:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23194:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23179:3:29"},"nodeType":"YulFunctionCall","src":"23179:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23126:43:29"},"nodeType":"YulFunctionCall","src":"23126:72:29"},"nodeType":"YulExpressionStatement","src":"23126:72:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23219:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23230:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23215:3:29"},"nodeType":"YulFunctionCall","src":"23215:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23239:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"23245:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23235:3:29"},"nodeType":"YulFunctionCall","src":"23235:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23208:6:29"},"nodeType":"YulFunctionCall","src":"23208:48:29"},"nodeType":"YulExpressionStatement","src":"23208:48:29"},{"nodeType":"YulAssignment","src":"23265:84:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23335:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"23344:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23273:61:29"},"nodeType":"YulFunctionCall","src":"23273:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23265:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22864:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22876:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22884:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22892:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22900:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22911:4:29","type":""}],"src":"22716:640:29"},{"body":{"nodeType":"YulBlock","src":"23424:79:29","statements":[{"nodeType":"YulAssignment","src":"23434:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23449:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23443:5:29"},"nodeType":"YulFunctionCall","src":"23443:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23434:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23491:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"23465:25:29"},"nodeType":"YulFunctionCall","src":"23465:32:29"},"nodeType":"YulExpressionStatement","src":"23465:32:29"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23402:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"23410:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23418:5:29","type":""}],"src":"23362:141:29"},{"body":{"nodeType":"YulBlock","src":"23585:273:29","statements":[{"body":{"nodeType":"YulBlock","src":"23631:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23633:77:29"},"nodeType":"YulFunctionCall","src":"23633:79:29"},"nodeType":"YulExpressionStatement","src":"23633:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23606:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"23615:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23602:3:29"},"nodeType":"YulFunctionCall","src":"23602:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"23627:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23598:3:29"},"nodeType":"YulFunctionCall","src":"23598:32:29"},"nodeType":"YulIf","src":"23595:119:29"},{"nodeType":"YulBlock","src":"23724:127:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23739:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"23753:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23743:6:29","type":""}]},{"nodeType":"YulAssignment","src":"23768:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23813:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"23824:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23809:3:29"},"nodeType":"YulFunctionCall","src":"23809:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23833:7:29"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23778:30:29"},"nodeType":"YulFunctionCall","src":"23778:63:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23768:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23555:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23566:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23578:6:29","type":""}],"src":"23509:349:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611633565b6102bc565b6040516100fb919061167b565b60405180910390f35b61010c61039e565b604051610119919061172f565b60405180910390f35b61013c60048036038101906101379190611787565b610430565b60405161014991906117f5565b60405180910390f35b61016c6004803603810190610167919061183c565b610476565b005b6101886004803603810190610183919061187c565b61058e565b005b6101a4600480360381019061019f919061187c565b6105ee565b005b6101c060048036038101906101bb9190611787565b61060e565b6040516101cd91906117f5565b60405180910390f35b6101f060048036038101906101eb91906118cf565b610695565b6040516101fd919061190b565b60405180910390f35b61020e61074d565b60405161021b919061172f565b60405180910390f35b61023e60048036038101906102399190611952565b6107df565b005b61025a60048036038101906102559190611ac7565b6107f5565b005b61027660048036038101906102719190611787565b610857565b604051610283919061172f565b60405180910390f35b6102a660048036038101906102a19190611b4a565b6108bf565b6040516102b3919061167b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611bb9565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611bb9565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c5d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cef565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611d81565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ded565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611e7f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611bb9565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611d81565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611edb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ded565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90612003565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611f71565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061206f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061167b565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612101565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a261199c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612121565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a919061217f565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a591906121b3565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b8152600401611326949392919061225e565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e91906122bf565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390612101565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4612121565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1612121565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510612121565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539612121565b5b0492506008810190505b612710831061156957612710838161155f5761155e612121565b5b0492506004810190505b6064831061158c576064838161158257611581612121565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611610816115db565b811461161b57600080fd5b50565b60008135905061162d81611607565b92915050565b600060208284031215611649576116486115d1565b5b60006116578482850161161e565b91505092915050565b60008115159050919050565b61167581611660565b82525050565b6000602082019050611690600083018461166c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116d05780820151818401526020810190506116b5565b838111156116df576000848401525b50505050565b6000601f19601f8301169050919050565b600061170182611696565b61170b81856116a1565b935061171b8185602086016116b2565b611724816116e5565b840191505092915050565b6000602082019050818103600083015261174981846116f6565b905092915050565b6000819050919050565b61176481611751565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60006020828403121561179d5761179c6115d1565b5b60006117ab84828501611772565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117df826117b4565b9050919050565b6117ef816117d4565b82525050565b600060208201905061180a60008301846117e6565b92915050565b611819816117d4565b811461182457600080fd5b50565b60008135905061183681611810565b92915050565b60008060408385031215611853576118526115d1565b5b600061186185828601611827565b925050602061187285828601611772565b9150509250929050565b600080600060608486031215611895576118946115d1565b5b60006118a386828701611827565b93505060206118b486828701611827565b92505060406118c586828701611772565b9150509250925092565b6000602082840312156118e5576118e46115d1565b5b60006118f384828501611827565b91505092915050565b61190581611751565b82525050565b600060208201905061192060008301846118fc565b92915050565b61192f81611660565b811461193a57600080fd5b50565b60008135905061194c81611926565b92915050565b60008060408385031215611969576119686115d1565b5b600061197785828601611827565b92505060206119888582860161193d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d4826116e5565b810181811067ffffffffffffffff821117156119f3576119f261199c565b5b80604052505050565b6000611a066115c7565b9050611a1282826119cb565b919050565b600067ffffffffffffffff821115611a3257611a3161199c565b5b611a3b826116e5565b9050602081019050919050565b82818337600083830152505050565b6000611a6a611a6584611a17565b6119fc565b905082815260208101848484011115611a8657611a85611997565b5b611a91848285611a48565b509392505050565b600082601f830112611aae57611aad611992565b5b8135611abe848260208601611a57565b91505092915050565b60008060008060808587031215611ae157611ae06115d1565b5b6000611aef87828801611827565b9450506020611b0087828801611827565b9350506040611b1187828801611772565b925050606085013567ffffffffffffffff811115611b3257611b316115d6565b5b611b3e87828801611a99565b91505092959194509250565b60008060408385031215611b6157611b606115d1565b5b6000611b6f85828601611827565b9250506020611b8085828601611827565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd157607f821691505b60208210811415611be557611be4611b8a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c476021836116a1565b9150611c5282611beb565b604082019050919050565b60006020820190508181036000830152611c7681611c3a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611cd9603d836116a1565b9150611ce482611c7d565b604082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d6b602d836116a1565b9150611d7682611d0f565b604082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611dd76018836116a1565b9150611de282611da1565b602082019050919050565b60006020820190508181036000830152611e0681611dca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e696029836116a1565b9150611e7482611e0d565b604082019050919050565b60006020820190508181036000830152611e9881611e5c565b9050919050565b600081905092915050565b6000611eb582611696565b611ebf8185611e9f565b9350611ecf8185602086016116b2565b80840191505092915050565b6000611ee78285611eaa565b9150611ef38284611eaa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f5b6025836116a1565b9150611f6682611eff565b604082019050919050565b60006020820190508181036000830152611f8a81611f4e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fed6024836116a1565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006120596019836116a1565b915061206482612023565b602082019050919050565b600060208201905081810360008301526120888161204c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120eb6032836116a1565b91506120f68261208f565b604082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218a82611751565b915061219583611751565b9250828210156121a8576121a7612150565b5b828203905092915050565b60006121be82611751565b91506121c983611751565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121fe576121fd612150565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b600061223082612209565b61223a8185612214565b935061224a8185602086016116b2565b612253816116e5565b840191505092915050565b600060808201905061227360008301876117e6565b61228060208301866117e6565b61228d60408301856118fc565b818103606083015261229f8184612225565b905095945050505050565b6000815190506122b981611607565b92915050565b6000602082840312156122d5576122d46115d1565b5b60006122e3848285016122aa565b9150509291505056fea2646970667358221220773aac1846fbb6554e39d2f4d3272c3082f1ea30229289fdb6a5f87ebcf98d7d64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x170B DUP2 DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x171B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1764 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP2 EQ PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1836 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1861 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1872 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1988 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19D4 DUP3 PUSH2 0x16E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A12 DUP3 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH2 0x1A3B DUP3 PUSH2 0x16E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH2 0x1A65 DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1A91 DUP5 DUP3 DUP6 PUSH2 0x1A48 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x1992 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ABE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3E DUP8 DUP3 DUP9 ADD PUSH2 0x1A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6F DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x21 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x3D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x2D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 PUSH1 0x18 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E06 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 PUSH1 0x29 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E74 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1EBF DUP2 DUP6 PUSH2 0x1E9F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP3 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP3 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B PUSH1 0x25 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP3 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x24 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH1 0x19 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x32 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2195 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BE DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C9 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x223A DUP2 DUP6 PUSH2 0x2214 JUMP JUMPDEST SWAP4 POP PUSH2 0x224A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2273 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x2280 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x228D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B9 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E3 DUP5 DUP3 DUP6 ADD PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x3AAC1846FBB6554E39D2F4D3272C3082F1EA30229289FDB6 0xA5 0xF8 PUSH31 0xBCF98D7D64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"628:16327:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:24:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:6:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:18:-;693:7;719:10;712:17;;640:96;:::o;12768:171:6:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:20:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:6:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:26:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:16:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:228::-;15252:34;15248:1;15240:6;15236:14;15229:58;15321:11;15316:2;15308:6;15304:15;15297:36;15112:228;:::o;15346:366::-;15488:3;15509:67;15573:2;15568:3;15509:67;:::i;:::-;15502:74;;15585:93;15674:3;15585:93;:::i;:::-;15703:2;15698:3;15694:12;15687:19;;15346:366;;;:::o;15718:419::-;15884:4;15922:2;15911:9;15907:18;15899:26;;15971:9;15965:4;15961:20;15957:1;15946:9;15942:17;15935:47;15999:131;16125:4;15999:131;:::i;:::-;15991:139;;15718:419;;;:::o;16143:148::-;16245:11;16282:3;16267:18;;16143:148;;;;:::o;16297:377::-;16403:3;16431:39;16464:5;16431:39;:::i;:::-;16486:89;16568:6;16563:3;16486:89;:::i;:::-;16479:96;;16584:52;16629:6;16624:3;16617:4;16610:5;16606:16;16584:52;:::i;:::-;16661:6;16656:3;16652:16;16645:23;;16407:267;16297:377;;;;:::o;16680:435::-;16860:3;16882:95;16973:3;16964:6;16882:95;:::i;:::-;16875:102;;16994:95;17085:3;17076:6;16994:95;:::i;:::-;16987:102;;17106:3;17099:10;;16680:435;;;;;:::o;17121:224::-;17261:34;17257:1;17249:6;17245:14;17238:58;17330:7;17325:2;17317:6;17313:15;17306:32;17121:224;:::o;17351:366::-;17493:3;17514:67;17578:2;17573:3;17514:67;:::i;:::-;17507:74;;17590:93;17679:3;17590:93;:::i;:::-;17708:2;17703:3;17699:12;17692:19;;17351:366;;;:::o;17723:419::-;17889:4;17927:2;17916:9;17912:18;17904:26;;17976:9;17970:4;17966:20;17962:1;17951:9;17947:17;17940:47;18004:131;18130:4;18004:131;:::i;:::-;17996:139;;17723:419;;;:::o;18148:223::-;18288:34;18284:1;18276:6;18272:14;18265:58;18357:6;18352:2;18344:6;18340:15;18333:31;18148:223;:::o;18377:366::-;18519:3;18540:67;18604:2;18599:3;18540:67;:::i;:::-;18533:74;;18616:93;18705:3;18616:93;:::i;:::-;18734:2;18729:3;18725:12;18718:19;;18377:366;;;:::o;18749:419::-;18915:4;18953:2;18942:9;18938:18;18930:26;;19002:9;18996:4;18992:20;18988:1;18977:9;18973:17;18966:47;19030:131;19156:4;19030:131;:::i;:::-;19022:139;;18749:419;;;:::o;19174:175::-;19314:27;19310:1;19302:6;19298:14;19291:51;19174:175;:::o;19355:366::-;19497:3;19518:67;19582:2;19577:3;19518:67;:::i;:::-;19511:74;;19594:93;19683:3;19594:93;:::i;:::-;19712:2;19707:3;19703:12;19696:19;;19355:366;;;:::o;19727:419::-;19893:4;19931:2;19920:9;19916:18;19908:26;;19980:9;19974:4;19970:20;19966:1;19955:9;19951:17;19944:47;20008:131;20134:4;20008:131;:::i;:::-;20000:139;;19727:419;;;:::o;20152:237::-;20292:34;20288:1;20280:6;20276:14;20269:58;20361:20;20356:2;20348:6;20344:15;20337:45;20152:237;:::o;20395:366::-;20537:3;20558:67;20622:2;20617:3;20558:67;:::i;:::-;20551:74;;20634:93;20723:3;20634:93;:::i;:::-;20752:2;20747:3;20743:12;20736:19;;20395:366;;;:::o;20767:419::-;20933:4;20971:2;20960:9;20956:18;20948:26;;21020:9;21014:4;21010:20;21006:1;20995:9;20991:17;20984:47;21048:131;21174:4;21048:131;:::i;:::-;21040:139;;20767:419;;;:::o;21192:180::-;21240:77;21237:1;21230:88;21337:4;21334:1;21327:15;21361:4;21358:1;21351:15;21378:180;21426:77;21423:1;21416:88;21523:4;21520:1;21513:15;21547:4;21544:1;21537:15;21564:191;21604:4;21624:20;21642:1;21624:20;:::i;:::-;21619:25;;21658:20;21676:1;21658:20;:::i;:::-;21653:25;;21697:1;21694;21691:8;21688:34;;;21702:18;;:::i;:::-;21688:34;21747:1;21744;21740:9;21732:17;;21564:191;;;;:::o;21761:305::-;21801:3;21820:20;21838:1;21820:20;:::i;:::-;21815:25;;21854:20;21872:1;21854:20;:::i;:::-;21849:25;;22008:1;21940:66;21936:74;21933:1;21930:81;21927:107;;;22014:18;;:::i;:::-;21927:107;22058:1;22055;22051:9;22044:16;;21761:305;;;;:::o;22072:98::-;22123:6;22157:5;22151:12;22141:22;;22072:98;;;:::o;22176:168::-;22259:11;22293:6;22288:3;22281:19;22333:4;22328:3;22324:14;22309:29;;22176:168;;;;:::o;22350:360::-;22436:3;22464:38;22496:5;22464:38;:::i;:::-;22518:70;22581:6;22576:3;22518:70;:::i;:::-;22511:77;;22597:52;22642:6;22637:3;22630:4;22623:5;22619:16;22597:52;:::i;:::-;22674:29;22696:6;22674:29;:::i;:::-;22669:3;22665:39;22658:46;;22440:270;22350:360;;;;:::o;22716:640::-;22911:4;22949:3;22938:9;22934:19;22926:27;;22963:71;23031:1;23020:9;23016:17;23007:6;22963:71;:::i;:::-;23044:72;23112:2;23101:9;23097:18;23088:6;23044:72;:::i;:::-;23126;23194:2;23183:9;23179:18;23170:6;23126:72;:::i;:::-;23245:9;23239:4;23235:20;23230:2;23219:9;23215:18;23208:48;23273:76;23344:4;23335:6;23273:76;:::i;:::-;23265:84;;22716:640;;;;;;;:::o;23362:141::-;23418:5;23449:6;23443:13;23434:22;;23465:32;23491:5;23465:32;:::i;:::-;23362:141;;;;:::o;23509:349::-;23578:6;23627:2;23615:9;23606:7;23602:23;23598:32;23595:119;;;23633:79;;:::i;:::-;23595:119;23753:1;23778:63;23833:7;23824:6;23813:9;23809:22;23778:63;:::i;:::-;23768:73;;23724:127;23509:349;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol":{"ERC721Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getApproved(uint256)":"081812fc","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","nonces(address)":"7ecebe00","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts as 1 vote unit. Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of the votes in governance decisions, or they can delegate to themselves to be their own representative. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the contract's {EIP712} domain separator.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`). Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nonces(address)\":{\"details\":\"Returns an address nonce.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\":\"ERC721Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xbf868a3a3cd497eb5896303474d25b9b5fe487ba30391db0a3e5b950573498d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a8a3be23b60a30f621c275c3195740501dc69a202b8364b383b5dc5470f0d\",\"dweb:/ipfs/Qma8bNQEtBeoG1N2tqiPN6dYPbp3S4WGN6eBXAopjYEPjV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\":{\"keccak256\":\"0x19cf96045e935b99fe8fc15018af1d74203ad6ae1b301b950da4e90ddec05f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6233da69d82699c102aa28e6f63ff2935655918ce8f44ae555185be73a1a3fbd\",\"dweb:/ipfs/QmPc2QL2xWY3UsbmAKV3KWREXU4omp3dodW6hSpzdMiqFC\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Checkpoints.sol":{"Checkpoints":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bed653aa196f6b26298b9327969c9be1f0c0819618dbd932b53cc77b213753da64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xD6 MSTORE8 0xAA NOT PUSH16 0x6B26298B9327969C9BE1F0C0819618DB 0xD9 ORIGIN 0xB5 EXTCODECOPY 0xC7 PUSH28 0x213753DA64736F6C6343000809003300000000000000000000000000 ","sourceMap":"708:18139:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bed653aa196f6b26298b9327969c9be1f0c0819618dbd932b53cc77b213753da64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xD6 MSTORE8 0xAA NOT PUSH16 0x6B26298B9327969C9BE1F0C0819618DB 0xD9 ORIGIN 0xB5 EXTCODECOPY 0xC7 PUSH28 0x213753DA64736F6C6343000809003300000000000000000000000000 ","sourceMap":"708:18139:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library defines the `History` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new checkpoint for the current transaction block using the {push} function. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1c31e7b962abcf83f83118011fe94b3f162b24dd0e3a485631d28652e7e89264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1C31E7B962ABCF83F8311801 0x1F 0xE9 0x4B EXTCODEHASH AND 0x2B 0x24 0xDD 0xE GASPRICE BASEFEE JUMP BALANCE 0xD2 DUP7 MSTORE 0xE7 0xE8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1c31e7b962abcf83f83118011fe94b3f162b24dd0e3a485631d28652e7e89264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1C31E7B962ABCF83F8311801 0x1F 0xE9 0x4B EXTCODEHASH AND 0x2B 0x24 0xDD 0xE GASPRICE BASEFEE JUMP BALANCE 0xD2 DUP7 MSTORE 0xE7 0xE8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afbc5b38bfb129f18c184525d965a8dab7a58ed0005ea6b41a960eafc78cbc864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0xC5 0xB3 DUP12 0xFB SLT SWAP16 XOR 0xC1 DUP5 MSTORE 0x5D SWAP7 GAS DUP14 0xAB PUSH27 0x58ED0005EA6B41A960EAFC78CBC864736F6C634300080900330000 ","sourceMap":"188:2065:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afbc5b38bfb129f18c184525d965a8dab7a58ed0005ea6b41a960eafc78cbc864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0xC5 0xB3 DUP12 0xFB SLT SWAP16 XOR 0xC1 DUP5 MSTORE 0x5D SWAP7 GAS DUP14 0xAB PUSH27 0x58ED0005EA6B41A960EAFC78CBC864736F6C634300080900330000 ","sourceMap":"188:2065:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab25f1ef58678c84a28cc84508335f288a5b617af9553d15b1448800049ae5a64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB2 0x5F 0x1E CREATE2 DUP7 PUSH25 0xC84A28CC84508335F288A5B617AF9553D15B1448800049AE5A PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8168:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab25f1ef58678c84a28cc84508335f288a5b617af9553d15b1448800049ae5a64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB2 0x5F 0x1E CREATE2 DUP7 PUSH25 0xC84A28CC84508335F288A5B617AF9553D15B1448800049AE5A PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8168:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c79a003a8186f14f4131b5cd92ba33af17ae859389ff59d5077d8043ae6fe2264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH26 0xA003A8186F14F4131B5CD92BA33AF17AE859389FF59D5077D804 GASPRICE 0xE6 INVALID 0x22 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12302:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c79a003a8186f14f4131b5cd92ba33af17ae859389ff59d5077d8043ae6fe2264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH26 0xA003A8186F14F4131B5CD92BA33AF17AE859389FF59D5077D804 GASPRICE 0xE6 INVALID 0x22 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12302:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203824c6771dcaaef335540ac2c0c6b4aa31d189d069ae1f18c030e9afaee0d41c64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x24 0xC6 PUSH24 0x1DCAAEF335540AC2C0C6B4AA31D189D069AE1F18C030E9AF 0xAE 0xE0 0xD4 SHR PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34153:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203824c6771dcaaef335540ac2c0c6b4aa31d189d069ae1f18c030e9afaee0d41c64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x24 0xC6 PUSH24 0x1DCAAEF335540AC2C0C6B4AA31D189D069AE1F18C030E9AF 0xAE 0xE0 0xD4 SHR PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34153:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"contracts/DelFactory.sol":{"DelFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"mintNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1204":{"entryPoint":null,"id":1204,"parameterSlots":2,"returnSlots":0},"@_412":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"@_7806":{"entryPoint":null,"id":7806,"parameterSlots":0,"returnSlots":0},"@_msgSender_4556":{"entryPoint":216,"id":4556,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_500":{"entryPoint":224,"id":500,"parameterSlots":1,"returnSlots":0},"extract_byte_array_length":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":598,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:29","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:29"},"nodeType":"YulFunctionCall","src":"45:88:29"},"nodeType":"YulExpressionStatement","src":"45:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:29"},"nodeType":"YulFunctionCall","src":"142:15:29"},"nodeType":"YulExpressionStatement","src":"142:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:29"},"nodeType":"YulFunctionCall","src":"166:15:29"},"nodeType":"YulExpressionStatement","src":"166:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7:180:29"},{"body":{"nodeType":"YulBlock","src":"244:269:29","statements":[{"nodeType":"YulAssignment","src":"254:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"268:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"274:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"264:3:29"},"nodeType":"YulFunctionCall","src":"264:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"254:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"285:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"315:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"311:3:29"},"nodeType":"YulFunctionCall","src":"311:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"289:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"362:51:29","statements":[{"nodeType":"YulAssignment","src":"376:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"390:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"398:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"386:3:29"},"nodeType":"YulFunctionCall","src":"386:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"376:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"342:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"335:6:29"},"nodeType":"YulFunctionCall","src":"335:26:29"},"nodeType":"YulIf","src":"332:81:29"},{"body":{"nodeType":"YulBlock","src":"465:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"479:16:29"},"nodeType":"YulFunctionCall","src":"479:18:29"},"nodeType":"YulExpressionStatement","src":"479:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"429:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"452:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"449:2:29"},"nodeType":"YulFunctionCall","src":"449:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"426:2:29"},"nodeType":"YulFunctionCall","src":"426:38:29"},"nodeType":"YulIf","src":"423:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"228:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"237:6:29","type":""}],"src":"193:320:29"}]},"contents":"{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f44454c204c6963656e73650000000000000000000000000000000000000000008152506040518060400160405280600381526020017f44454c0000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620001a6565b508060019080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b612e6280620002cb6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063e985e9c5146102f0578063eacabe1414610320578063f2fde38b146103505761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611e0e565b61036c565b6040516101379190611e56565b60405180910390f35b61014861044e565b6040516101559190611f0a565b60405180910390f35b61017860048036038101906101739190611f62565b6104e0565b6040516101859190611fd0565b60405180910390f35b6101a860048036038101906101a39190612017565b610526565b005b6101c460048036038101906101bf9190612057565b61063e565b005b6101e060048036038101906101db9190612057565b61069e565b005b6101fc60048036038101906101f79190611f62565b6106be565b6040516102099190611fd0565b60405180910390f35b61022c600480360381019061022791906120aa565b610745565b60405161023991906120e6565b60405180910390f35b61024a6107fd565b005b610254610811565b6040516102619190611fd0565b60405180910390f35b61027261083b565b60405161027f9190611f0a565b60405180910390f35b6102a2600480360381019061029d919061212d565b6108cd565b005b6102be60048036038101906102b991906122a2565b6108e3565b005b6102da60048036038101906102d59190611f62565b610945565b6040516102e79190611f0a565b60405180910390f35b61030a60048036038101906103059190612325565b610a58565b6040516103179190611e56565b60405180910390f35b61033a60048036038101906103359190612406565b610aec565b60405161034791906120e6565b60405180910390f35b61036a600480360381019061036591906120aa565b610b2c565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610447575061044682610bb0565b5b9050919050565b60606000805461045d90612491565b80601f016020809104026020016040519081016040528092919081815260200182805461048990612491565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b60006104eb82610c1a565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610531826106be565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059990612535565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105c1610c65565b73ffffffffffffffffffffffffffffffffffffffff1614806105f057506105ef816105ea610c65565b610a58565b5b61062f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610626906125c7565b60405180910390fd5b6106398383610c6d565b505050565b61064f610649610c65565b82610d26565b61068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590612659565b60405180910390fd5b610699838383610dbb565b505050565b6106b9838383604051806020016040528060008152506108e3565b505050565b6000806106ca836110b5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561073c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610733906126c5565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad90612757565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108056110f2565b61080f6000611170565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461084a90612491565b80601f016020809104026020016040519081016040528092919081815260200182805461087690612491565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b5050505050905090565b6108df6108d8610c65565b8383611236565b5050565b6108f46108ee610c65565b83610d26565b610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90612659565b60405180910390fd5b61093f848484846113a3565b50505050565b606061095082610c1a565b600060066000848152602001908152602001600020805461097090612491565b80601f016020809104026020016040519081016040528092919081815260200182805461099c90612491565b80156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b5050505050905060006109fa6113ff565b9050600081511415610a10578192505050610a53565b600082511115610a45578082604051602001610a2d9291906127b3565b60405160208183030381529060405292505050610a53565b610a4e84611416565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610af66110f2565b610b00600861147e565b6000610b0c6008611494565b9050610b1884826114a2565b610b2281846114c0565b8091505092915050565b610b346110f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ba4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9b90612849565b60405180910390fd5b610bad81611170565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c2381611534565b610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c59906126c5565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ce0836106be565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d32836106be565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d745750610d738185610a58565b5b80610db257508373ffffffffffffffffffffffffffffffffffffffff16610d9a846104e0565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ddb826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e28906128db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e989061296d565b60405180910390fd5b610eae8383836001611575565b8273ffffffffffffffffffffffffffffffffffffffff16610ece826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b906128db565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110b0838383600161169b565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110fa610c65565b73ffffffffffffffffffffffffffffffffffffffff16611118610811565b73ffffffffffffffffffffffffffffffffffffffff161461116e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611165906129d9565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c90612a45565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113969190611e56565b60405180910390a3505050565b6113ae848484610dbb565b6113ba848484846116a1565b6113f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f090612ad7565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061142182610c1a565b600061142b6113ff565b9050600081511161144b5760405180602001604052806000815250611476565b8061145584611838565b6040516020016114669291906127b3565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6114bc828260405180602001604052806000815250611910565b5050565b6114c982611534565b611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff90612b69565b60405180910390fd5b8060066000848152602001908152602001600020908051906020019061152f929190611cff565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff16611556836110b5565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600181111561169557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146116095780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116019190612bb8565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116945780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461168c9190612bec565b925050819055505b5b50505050565b50505050565b60006116c28473ffffffffffffffffffffffffffffffffffffffff1661196b565b1561182b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116eb610c65565b8786866040518563ffffffff1660e01b815260040161170d9493929190612c97565b602060405180830381600087803b15801561172757600080fd5b505af192505050801561175857506040513d601f19601f820116820180604052508101906117559190612cf8565b60015b6117db573d8060008114611788576040519150601f19603f3d011682016040523d82523d6000602084013e61178d565b606091505b506000815114156117d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ca90612ad7565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611830565b600190505b949350505050565b6060600060016118478461198e565b01905060008167ffffffffffffffff81111561186657611865612177565b5b6040519080825280601f01601f1916602001820160405280156118985781602001600182028036833780820191505090505b509050600082602001820190505b600115611905578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118ef576118ee612d25565b5b049450600085141561190057611905565b6118a6565b819350505050919050565b61191a8383611ae1565b61192760008484846116a1565b611966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195d90612ad7565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119ec577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119e2576119e1612d25565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a29576d04ee2d6d415b85acef81000000008381611a1f57611a1e612d25565b5b0492506020810190505b662386f26fc100008310611a5857662386f26fc100008381611a4e57611a4d612d25565b5b0492506010810190505b6305f5e1008310611a81576305f5e1008381611a7757611a76612d25565b5b0492506008810190505b6127108310611aa6576127108381611a9c57611a9b612d25565b5b0492506004810190505b60648310611ac95760648381611abf57611abe612d25565b5b0492506002810190505b600a8310611ad8576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4890612da0565b60405180910390fd5b611b5a81611534565b15611b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9190612e0c565b60405180910390fd5b611ba8600083836001611575565b611bb181611534565b15611bf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be890612e0c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611cfb60008383600161169b565b5050565b828054611d0b90612491565b90600052602060002090601f016020900481019282611d2d5760008555611d74565b82601f10611d4657805160ff1916838001178555611d74565b82800160010185558215611d74579182015b82811115611d73578251825591602001919060010190611d58565b5b509050611d819190611d85565b5090565b5b80821115611d9e576000816000905550600101611d86565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611deb81611db6565b8114611df657600080fd5b50565b600081359050611e0881611de2565b92915050565b600060208284031215611e2457611e23611dac565b5b6000611e3284828501611df9565b91505092915050565b60008115159050919050565b611e5081611e3b565b82525050565b6000602082019050611e6b6000830184611e47565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611eab578082015181840152602081019050611e90565b83811115611eba576000848401525b50505050565b6000601f19601f8301169050919050565b6000611edc82611e71565b611ee68185611e7c565b9350611ef6818560208601611e8d565b611eff81611ec0565b840191505092915050565b60006020820190508181036000830152611f248184611ed1565b905092915050565b6000819050919050565b611f3f81611f2c565b8114611f4a57600080fd5b50565b600081359050611f5c81611f36565b92915050565b600060208284031215611f7857611f77611dac565b5b6000611f8684828501611f4d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fba82611f8f565b9050919050565b611fca81611faf565b82525050565b6000602082019050611fe56000830184611fc1565b92915050565b611ff481611faf565b8114611fff57600080fd5b50565b60008135905061201181611feb565b92915050565b6000806040838503121561202e5761202d611dac565b5b600061203c85828601612002565b925050602061204d85828601611f4d565b9150509250929050565b6000806000606084860312156120705761206f611dac565b5b600061207e86828701612002565b935050602061208f86828701612002565b92505060406120a086828701611f4d565b9150509250925092565b6000602082840312156120c0576120bf611dac565b5b60006120ce84828501612002565b91505092915050565b6120e081611f2c565b82525050565b60006020820190506120fb60008301846120d7565b92915050565b61210a81611e3b565b811461211557600080fd5b50565b60008135905061212781612101565b92915050565b6000806040838503121561214457612143611dac565b5b600061215285828601612002565b925050602061216385828601612118565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6121af82611ec0565b810181811067ffffffffffffffff821117156121ce576121cd612177565b5b80604052505050565b60006121e1611da2565b90506121ed82826121a6565b919050565b600067ffffffffffffffff82111561220d5761220c612177565b5b61221682611ec0565b9050602081019050919050565b82818337600083830152505050565b6000612245612240846121f2565b6121d7565b90508281526020810184848401111561226157612260612172565b5b61226c848285612223565b509392505050565b600082601f8301126122895761228861216d565b5b8135612299848260208601612232565b91505092915050565b600080600080608085870312156122bc576122bb611dac565b5b60006122ca87828801612002565b94505060206122db87828801612002565b93505060406122ec87828801611f4d565b925050606085013567ffffffffffffffff81111561230d5761230c611db1565b5b61231987828801612274565b91505092959194509250565b6000806040838503121561233c5761233b611dac565b5b600061234a85828601612002565b925050602061235b85828601612002565b9150509250929050565b600067ffffffffffffffff8211156123805761237f612177565b5b61238982611ec0565b9050602081019050919050565b60006123a96123a484612365565b6121d7565b9050828152602081018484840111156123c5576123c4612172565b5b6123d0848285612223565b509392505050565b600082601f8301126123ed576123ec61216d565b5b81356123fd848260208601612396565b91505092915050565b6000806040838503121561241d5761241c611dac565b5b600061242b85828601612002565b925050602083013567ffffffffffffffff81111561244c5761244b611db1565b5b612458858286016123d8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124a957607f821691505b602082108114156124bd576124bc612462565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061251f602183611e7c565b915061252a826124c3565b604082019050919050565b6000602082019050818103600083015261254e81612512565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b60006125b1603d83611e7c565b91506125bc82612555565b604082019050919050565b600060208201905081810360008301526125e0816125a4565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000612643602d83611e7c565b915061264e826125e7565b604082019050919050565b6000602082019050818103600083015261267281612636565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006126af601883611e7c565b91506126ba82612679565b602082019050919050565b600060208201905081810360008301526126de816126a2565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612741602983611e7c565b915061274c826126e5565b604082019050919050565b6000602082019050818103600083015261277081612734565b9050919050565b600081905092915050565b600061278d82611e71565b6127978185612777565b93506127a7818560208601611e8d565b80840191505092915050565b60006127bf8285612782565b91506127cb8284612782565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612833602683611e7c565b915061283e826127d7565b604082019050919050565b6000602082019050818103600083015261286281612826565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006128c5602583611e7c565b91506128d082612869565b604082019050919050565b600060208201905081810360008301526128f4816128b8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612957602483611e7c565b9150612962826128fb565b604082019050919050565b600060208201905081810360008301526129868161294a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006129c3602083611e7c565b91506129ce8261298d565b602082019050919050565b600060208201905081810360008301526129f2816129b6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612a2f601983611e7c565b9150612a3a826129f9565b602082019050919050565b60006020820190508181036000830152612a5e81612a22565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612ac1603283611e7c565b9150612acc82612a65565b604082019050919050565b60006020820190508181036000830152612af081612ab4565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612b53602e83611e7c565b9150612b5e82612af7565b604082019050919050565b60006020820190508181036000830152612b8281612b46565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612bc382611f2c565b9150612bce83611f2c565b925082821015612be157612be0612b89565b5b828203905092915050565b6000612bf782611f2c565b9150612c0283611f2c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c3757612c36612b89565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000612c6982612c42565b612c738185612c4d565b9350612c83818560208601611e8d565b612c8c81611ec0565b840191505092915050565b6000608082019050612cac6000830187611fc1565b612cb96020830186611fc1565b612cc660408301856120d7565b8181036060830152612cd88184612c5e565b905095945050505050565b600081519050612cf281611de2565b92915050565b600060208284031215612d0e57612d0d611dac565b5b6000612d1c84828501612ce3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612d8a602083611e7c565b9150612d9582612d54565b602082019050919050565b60006020820190508181036000830152612db981612d7d565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612df6601c83611e7c565b9150612e0182612dc0565b602082019050919050565b60006020820190508181036000830152612e2581612de9565b905091905056fea26469706673582212201c0dab93d83811cbae9c6fa4960ce1169b556341ccab4b257f2db437a5425bd764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44454C204C6963656E7365000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44454C0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST POP POP POP PUSH3 0xD2 PUSH3 0xC6 PUSH3 0xD8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2BB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1B4 SWAP1 PUSH3 0x285 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1D8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x224 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1F3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x224 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x224 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x223 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x206 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x233 SWAP2 SWAP1 PUSH3 0x237 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x252 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x238 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x29E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2B5 JUMPI PUSH3 0x2B4 PUSH3 0x256 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E62 DUP1 PUSH3 0x2CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x350 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x212D JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x437 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x447 JUMPI POP PUSH2 0x446 DUP3 PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP3 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5C1 PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5F0 JUMPI POP PUSH2 0x5EF DUP2 PUSH2 0x5EA PUSH2 0xC65 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST JUMPDEST PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 DUP4 DUP4 PUSH2 0xC6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x64F PUSH2 0x649 PUSH2 0xC65 JUMP JUMPDEST DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP4 DUP4 DUP4 PUSH2 0xDBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6B9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6CA DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x80F PUSH1 0x0 PUSH2 0x1170 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x84A SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x876 SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x898 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x8D8 PUSH2 0xC65 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8F4 PUSH2 0x8EE PUSH2 0xC65 JUMP JUMPDEST DUP4 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93F DUP5 DUP5 DUP5 DUP5 PUSH2 0x13A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x950 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x970 SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99C SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x9FA PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xA10 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xA45 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x27B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xA4E DUP5 PUSH2 0x1416 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF6 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xB00 PUSH1 0x8 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0C PUSH1 0x8 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP PUSH2 0xB18 DUP5 DUP3 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0xB22 DUP2 DUP5 PUSH2 0x14C0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB34 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP1 PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0x1170 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE0 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD32 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD74 JUMPI POP PUSH2 0xD73 DUP2 DUP6 PUSH2 0xA58 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDB2 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9A DUP5 PUSH2 0x4E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDB DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x296D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1575 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xECE DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x169B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FA PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1118 PUSH2 0x811 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1165 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP1 PUSH2 0x2A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13AE DUP5 DUP5 DUP5 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x13BA DUP5 DUP5 DUP5 DUP5 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F0 SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1421 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142B PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1476 JUMP JUMPDEST DUP1 PUSH2 0x1455 DUP5 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1466 SWAP3 SWAP2 SWAP1 PUSH2 0x27B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1910 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C9 DUP3 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP1 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x152F SWAP3 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1556 DUP4 PUSH2 0x10B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1695 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1609 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x2BB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1694 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x196B JUMP JUMPDEST ISZERO PUSH2 0x182B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x16EB PUSH2 0xC65 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1758 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1755 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x17DB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1788 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x178D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1847 DUP5 PUSH2 0x198E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1866 JUMPI PUSH2 0x1865 PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1898 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1905 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1900 JUMPI PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x18A6 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191A DUP4 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST PUSH2 0x1927 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x1966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195D SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19EC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A29 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A1F JUMPI PUSH2 0x1A1E PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A58 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A4E JUMPI PUSH2 0x1A4D PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A81 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AA6 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AC9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1ABF JUMPI PUSH2 0x1ABE PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1AD8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B48 SWAP1 PUSH2 0x2DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x1534 JUMP JUMPDEST ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B91 SWAP1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x1BB1 DUP2 PUSH2 0x1534 JUMP JUMPDEST ISZERO PUSH2 0x1BF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE8 SWAP1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1CFB PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x169B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1D0B SWAP1 PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1D2D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D74 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1D46 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D74 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D74 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D73 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D9E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1D86 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DEB DUP2 PUSH2 0x1DB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E08 DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E24 JUMPI PUSH2 0x1E23 PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E32 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E50 DUP2 PUSH2 0x1E3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E90 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1EBA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x1EE6 DUP2 DUP6 PUSH2 0x1E7C JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1EFF DUP2 PUSH2 0x1EC0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F24 DUP2 DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3F DUP2 PUSH2 0x1F2C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F5C DUP2 PUSH2 0x1F36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F78 JUMPI PUSH2 0x1F77 PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F86 DUP5 DUP3 DUP6 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP3 PUSH2 0x1F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FF4 DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP2 EQ PUSH2 0x1FFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2011 DUP2 PUSH2 0x1FEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202E JUMPI PUSH2 0x202D PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x203C DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x204D DUP6 DUP3 DUP7 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2070 JUMPI PUSH2 0x206F PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x207E DUP7 DUP3 DUP8 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x208F DUP7 DUP3 DUP8 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20A0 DUP7 DUP3 DUP8 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C0 JUMPI PUSH2 0x20BF PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20CE DUP5 DUP3 DUP6 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E0 DUP2 PUSH2 0x1F2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x210A DUP2 PUSH2 0x1E3B JUMP JUMPDEST DUP2 EQ PUSH2 0x2115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2127 DUP2 PUSH2 0x2101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2144 JUMPI PUSH2 0x2143 PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2152 DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2163 DUP6 DUP3 DUP7 ADD PUSH2 0x2118 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21AF DUP3 PUSH2 0x1EC0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x2177 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E1 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x21ED DUP3 DUP3 PUSH2 0x21A6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x220D JUMPI PUSH2 0x220C PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH2 0x2216 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2245 PUSH2 0x2240 DUP5 PUSH2 0x21F2 JUMP JUMPDEST PUSH2 0x21D7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2261 JUMPI PUSH2 0x2260 PUSH2 0x2172 JUMP JUMPDEST JUMPDEST PUSH2 0x226C DUP5 DUP3 DUP6 PUSH2 0x2223 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2289 JUMPI PUSH2 0x2288 PUSH2 0x216D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2299 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CA DUP8 DUP3 DUP9 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22DB DUP8 DUP3 DUP9 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22EC DUP8 DUP3 DUP9 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230D JUMPI PUSH2 0x230C PUSH2 0x1DB1 JUMP JUMPDEST JUMPDEST PUSH2 0x2319 DUP8 DUP3 DUP9 ADD PUSH2 0x2274 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234A DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x235B DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2380 JUMPI PUSH2 0x237F PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH2 0x2389 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A9 PUSH2 0x23A4 DUP5 PUSH2 0x2365 JUMP JUMPDEST PUSH2 0x21D7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23C5 JUMPI PUSH2 0x23C4 PUSH2 0x2172 JUMP JUMPDEST JUMPDEST PUSH2 0x23D0 DUP5 DUP3 DUP6 PUSH2 0x2223 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23ED JUMPI PUSH2 0x23EC PUSH2 0x216D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241D JUMPI PUSH2 0x241C PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x242B DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x244C JUMPI PUSH2 0x244B PUSH2 0x1DB1 JUMP JUMPDEST JUMPDEST PUSH2 0x2458 DUP6 DUP3 DUP7 ADD PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x24BD JUMPI PUSH2 0x24BC PUSH2 0x2462 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251F PUSH1 0x21 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x252A DUP3 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254E DUP2 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B1 PUSH1 0x3D DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x25BC DUP3 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E0 DUP2 PUSH2 0x25A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2643 PUSH1 0x2D DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x264E DUP3 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2672 DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AF PUSH1 0x18 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x26BA DUP3 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26DE DUP2 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2741 PUSH1 0x29 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x274C DUP3 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2770 DUP2 PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278D DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x2797 DUP2 DUP6 PUSH2 0x2777 JUMP JUMPDEST SWAP4 POP PUSH2 0x27A7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BF DUP3 DUP6 PUSH2 0x2782 JUMP JUMPDEST SWAP2 POP PUSH2 0x27CB DUP3 DUP5 PUSH2 0x2782 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2833 PUSH1 0x26 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x283E DUP3 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2862 DUP2 PUSH2 0x2826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C5 PUSH1 0x25 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x28D0 DUP3 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F4 DUP2 PUSH2 0x28B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2957 PUSH1 0x24 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2962 DUP3 PUSH2 0x28FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2986 DUP2 PUSH2 0x294A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C3 PUSH1 0x20 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x29CE DUP3 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F2 DUP2 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2F PUSH1 0x19 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3A DUP3 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A5E DUP2 PUSH2 0x2A22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC1 PUSH1 0x32 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACC DUP3 PUSH2 0x2A65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AF0 DUP2 PUSH2 0x2AB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B53 PUSH1 0x2E DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5E DUP3 PUSH2 0x2AF7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B82 DUP2 PUSH2 0x2B46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BC3 DUP3 PUSH2 0x1F2C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCE DUP4 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2BE1 JUMPI PUSH2 0x2BE0 PUSH2 0x2B89 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF7 DUP3 PUSH2 0x1F2C JUMP JUMPDEST SWAP2 POP PUSH2 0x2C02 DUP4 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2C37 JUMPI PUSH2 0x2C36 PUSH2 0x2B89 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C69 DUP3 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x2C73 DUP2 DUP6 PUSH2 0x2C4D JUMP JUMPDEST SWAP4 POP PUSH2 0x2C83 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x2C8C DUP2 PUSH2 0x1EC0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2CAC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x2CC6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2CD8 DUP2 DUP5 PUSH2 0x2C5E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CF2 DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP5 DUP3 DUP6 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8A PUSH1 0x20 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2D95 DUP3 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB9 DUP2 PUSH2 0x2D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DF6 PUSH1 0x1C DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2E01 DUP3 PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E25 DUP2 PUSH2 0x2DE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xD 0xAB SWAP4 0xD8 CODESIZE GT 0xCB 0xAE SWAP13 PUSH16 0xA4960CE1169B556341CCAB4B257F2DB4 CALLDATACOPY 0xA5 TIMESTAMP JUMPDEST 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"721:507:28:-:0;;;858:47;;;;;;;;;;1390:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;721:507:28;;640:96:18;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;721:507:28:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:29:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;721:507:28:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2085":{"entryPoint":5787,"id":2085,"parameterSlots":4,"returnSlots":0},"@_approve_1918":{"entryPoint":3181,"id":1918,"parameterSlots":2,"returnSlots":0},"@_baseURI_1355":{"entryPoint":5119,"id":1355,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2072":{"entryPoint":5493,"id":2072,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2026":{"entryPoint":5793,"id":2026,"parameterSlots":4,"returnSlots":1},"@_checkOwner_443":{"entryPoint":4338,"id":443,"parameterSlots":0,"returnSlots":0},"@_exists_1587":{"entryPoint":5428,"id":1587,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1621":{"entryPoint":3366,"id":1621,"parameterSlots":2,"returnSlots":1},"@_mint_1742":{"entryPoint":6881,"id":1742,"parameterSlots":2,"returnSlots":0},"@_msgSender_4556":{"entryPoint":3173,"id":4556,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1569":{"entryPoint":4277,"id":1569,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1964":{"entryPoint":3098,"id":1964,"parameterSlots":1,"returnSlots":0},"@_safeMint_1636":{"entryPoint":5282,"id":1636,"parameterSlots":2,"returnSlots":0},"@_safeMint_1665":{"entryPoint":6416,"id":1665,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1556":{"entryPoint":5027,"id":1556,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1950":{"entryPoint":4662,"id":1950,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2698":{"entryPoint":5312,"id":2698,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_500":{"entryPoint":4464,"id":500,"parameterSlots":1,"returnSlots":0},"@_transfer_1894":{"entryPoint":3515,"id":1894,"parameterSlots":3,"returnSlots":0},"@approve_1398":{"entryPoint":1318,"id":1398,"parameterSlots":2,"returnSlots":0},"@balanceOf_1259":{"entryPoint":1861,"id":1259,"parameterSlots":1,"returnSlots":1},"@current_4584":{"entryPoint":5268,"id":4584,"parameterSlots":1,"returnSlots":1},"@getApproved_1416":{"entryPoint":1248,"id":1416,"parameterSlots":1,"returnSlots":1},"@increment_4598":{"entryPoint":5246,"id":4598,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_1451":{"entryPoint":2648,"id":1451,"parameterSlots":2,"returnSlots":1},"@isContract_2861":{"entryPoint":6507,"id":2861,"parameterSlots":1,"returnSlots":1},"@log10_6071":{"entryPoint":6542,"id":6071,"parameterSlots":1,"returnSlots":1},"@mintNFT_7841":{"entryPoint":2796,"id":7841,"parameterSlots":2,"returnSlots":1},"@name_1297":{"entryPoint":1102,"id":1297,"parameterSlots":0,"returnSlots":1},"@ownerOf_1287":{"entryPoint":1726,"id":1287,"parameterSlots":1,"returnSlots":1},"@owner_429":{"entryPoint":2065,"id":429,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_457":{"entryPoint":2045,"id":457,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1497":{"entryPoint":1694,"id":1497,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1527":{"entryPoint":2275,"id":1527,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1433":{"entryPoint":2253,"id":1433,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1235":{"entryPoint":876,"id":1235,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5356":{"entryPoint":2992,"id":5356,"parameterSlots":1,"returnSlots":1},"@symbol_1307":{"entryPoint":2107,"id":1307,"parameterSlots":0,"returnSlots":1},"@toString_4698":{"entryPoint":6200,"id":4698,"parameterSlots":1,"returnSlots":1},"@tokenURI_1346":{"entryPoint":5142,"id":1346,"parameterSlots":1,"returnSlots":1},"@tokenURI_2676":{"entryPoint":2373,"id":2676,"parameterSlots":1,"returnSlots":1},"@transferFrom_1478":{"entryPoint":1598,"id":1478,"parameterSlots":3,"returnSlots":0},"@transferOwnership_480":{"entryPoint":2860,"id":480,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8754,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":9110,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":11491,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8820,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":9176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8013,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8997,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8279,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8866,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8493,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":9222,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8215,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8129,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7751,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":9782,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":10932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":10278,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":10424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":11753,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":10570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":10786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":10036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":11078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":11645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":10678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":9890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":9490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":9636,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8407,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10163,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11415,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10967,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10313,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10459,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11788,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10605,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11113,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11680,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8422,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8663,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7586,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8690,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":9061,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11330,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7793,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11341,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7804,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10103,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11244,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11192,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8111,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7739,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7606,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7980,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8739,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7821,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9361,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8614,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":11145,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11557,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9314,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8567,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8557,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8562,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7601,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7596,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7872,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":9703,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":10853,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":10199,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":10345,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":11712,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":10491,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":10745,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":9957,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":10999,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":11604,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":10637,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9849,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9411,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":9557,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8171,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8449,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7650,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7990,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30628:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"378:105:29","statements":[{"nodeType":"YulAssignment","src":"388:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:29","type":""}],"src":"334:149:29"},{"body":{"nodeType":"YulBlock","src":"531:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:29"},"nodeType":"YulFunctionCall","src":"589:12:29"},"nodeType":"YulExpressionStatement","src":"589:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:29"},"nodeType":"YulFunctionCall","src":"561:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:29"},"nodeType":"YulFunctionCall","src":"544:42:29"},"nodeType":"YulIf","src":"541:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:29","type":""}],"src":"489:120:29"},{"body":{"nodeType":"YulBlock","src":"666:86:29","statements":[{"nodeType":"YulAssignment","src":"676:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:29"},"nodeType":"YulFunctionCall","src":"685:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:29"},"nodeType":"YulFunctionCall","src":"714:32:29"},"nodeType":"YulExpressionStatement","src":"714:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:29","type":""}],"src":"615:137:29"},{"body":{"nodeType":"YulBlock","src":"823:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:29"},"nodeType":"YulFunctionCall","src":"871:79:29"},"nodeType":"YulExpressionStatement","src":"871:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:29"},"nodeType":"YulFunctionCall","src":"840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:29"},"nodeType":"YulFunctionCall","src":"836:32:29"},"nodeType":"YulIf","src":"833:119:29"},{"nodeType":"YulBlock","src":"962:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:29"},"nodeType":"YulFunctionCall","src":"1016:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:29","type":""}],"src":"758:327:29"},{"body":{"nodeType":"YulBlock","src":"1133:48:29","statements":[{"nodeType":"YulAssignment","src":"1143:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:29"},"nodeType":"YulFunctionCall","src":"1161:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:29"},"nodeType":"YulFunctionCall","src":"1154:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:29","type":""}],"src":"1091:90:29"},{"body":{"nodeType":"YulBlock","src":"1246:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:29"},"nodeType":"YulFunctionCall","src":"1268:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:29"},"nodeType":"YulFunctionCall","src":"1256:34:29"},"nodeType":"YulExpressionStatement","src":"1256:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:29","type":""}],"src":"1187:109:29"},{"body":{"nodeType":"YulBlock","src":"1394:118:29","statements":[{"nodeType":"YulAssignment","src":"1404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:29"},"nodeType":"YulFunctionCall","src":"1487:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:29"},"nodeType":"YulFunctionCall","src":"1440:65:29"},"nodeType":"YulExpressionStatement","src":"1440:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:29","type":""}],"src":"1302:210:29"},{"body":{"nodeType":"YulBlock","src":"1577:40:29","statements":[{"nodeType":"YulAssignment","src":"1588:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:29"},"nodeType":"YulFunctionCall","src":"1598:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:29","type":""}],"src":"1518:99:29"},{"body":{"nodeType":"YulBlock","src":"1719:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:29"},"nodeType":"YulFunctionCall","src":"1729:19:29"},"nodeType":"YulExpressionStatement","src":"1729:19:29"},{"nodeType":"YulAssignment","src":"1757:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:29"},"nodeType":"YulFunctionCall","src":"1772:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:29","type":""}],"src":"1623:169:29"},{"body":{"nodeType":"YulBlock","src":"1847:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:29"},"nodeType":"YulFunctionCall","src":"1947:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:29"},"nodeType":"YulFunctionCall","src":"1966:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:29"},"nodeType":"YulFunctionCall","src":"1960:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:29"},"nodeType":"YulFunctionCall","src":"1940:39:29"},"nodeType":"YulExpressionStatement","src":"1940:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:29"},"nodeType":"YulFunctionCall","src":"1884:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:29","statements":[{"nodeType":"YulAssignment","src":"1900:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:29"},"nodeType":"YulFunctionCall","src":"1905:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:29","statements":[]},"src":"1876:113:29"},{"body":{"nodeType":"YulBlock","src":"2023:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:29"},"nodeType":"YulFunctionCall","src":"2069:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:29"},"nodeType":"YulFunctionCall","src":"2062:27:29"},"nodeType":"YulExpressionStatement","src":"2062:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:29"},"nodeType":"YulFunctionCall","src":"2001:13:29"},"nodeType":"YulIf","src":"1998:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:29","type":""}],"src":"1798:307:29"},{"body":{"nodeType":"YulBlock","src":"2159:54:29","statements":[{"nodeType":"YulAssignment","src":"2169:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:29"},"nodeType":"YulFunctionCall","src":"2183:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:29"},"nodeType":"YulFunctionCall","src":"2199:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:29"},"nodeType":"YulFunctionCall","src":"2179:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:29","type":""}],"src":"2111:102:29"},{"body":{"nodeType":"YulBlock","src":"2311:272:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:29"},"nodeType":"YulFunctionCall","src":"2335:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:29"},"nodeType":"YulFunctionCall","src":"2390:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:29"},"nodeType":"YulFunctionCall","src":"2492:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:29"},"nodeType":"YulFunctionCall","src":"2470:52:29"},"nodeType":"YulExpressionStatement","src":"2470:52:29"},{"nodeType":"YulAssignment","src":"2531:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:29"},"nodeType":"YulFunctionCall","src":"2547:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:29"},"nodeType":"YulFunctionCall","src":"2538:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:29","type":""}],"src":"2219:364:29"},{"body":{"nodeType":"YulBlock","src":"2707:195:29","statements":[{"nodeType":"YulAssignment","src":"2717:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:29"},"nodeType":"YulFunctionCall","src":"2725:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:29"},"nodeType":"YulFunctionCall","src":"2760:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:29"},"nodeType":"YulFunctionCall","src":"2779:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:29"},"nodeType":"YulFunctionCall","src":"2753:47:29"},"nodeType":"YulExpressionStatement","src":"2753:47:29"},{"nodeType":"YulAssignment","src":"2809:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:29"},"nodeType":"YulFunctionCall","src":"2817:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:29","type":""}],"src":"2589:313:29"},{"body":{"nodeType":"YulBlock","src":"2953:32:29","statements":[{"nodeType":"YulAssignment","src":"2963:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:29","type":""}],"src":"2908:77:29"},{"body":{"nodeType":"YulBlock","src":"3034:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:29"},"nodeType":"YulFunctionCall","src":"3093:12:29"},"nodeType":"YulExpressionStatement","src":"3093:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:29"},"nodeType":"YulFunctionCall","src":"3064:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:29"},"nodeType":"YulFunctionCall","src":"3054:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:29"},"nodeType":"YulFunctionCall","src":"3047:43:29"},"nodeType":"YulIf","src":"3044:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:29","type":""}],"src":"2991:122:29"},{"body":{"nodeType":"YulBlock","src":"3171:87:29","statements":[{"nodeType":"YulAssignment","src":"3181:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:29"},"nodeType":"YulFunctionCall","src":"3190:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:29"},"nodeType":"YulFunctionCall","src":"3219:33:29"},"nodeType":"YulExpressionStatement","src":"3219:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:29","type":""}],"src":"3119:139:29"},{"body":{"nodeType":"YulBlock","src":"3330:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:29"},"nodeType":"YulFunctionCall","src":"3378:79:29"},"nodeType":"YulExpressionStatement","src":"3378:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:29"},"nodeType":"YulFunctionCall","src":"3347:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:29"},"nodeType":"YulFunctionCall","src":"3343:32:29"},"nodeType":"YulIf","src":"3340:119:29"},{"nodeType":"YulBlock","src":"3469:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:29"},"nodeType":"YulFunctionCall","src":"3544:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:29"},"nodeType":"YulFunctionCall","src":"3523:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:29","type":""}],"src":"3264:329:29"},{"body":{"nodeType":"YulBlock","src":"3644:81:29","statements":[{"nodeType":"YulAssignment","src":"3654:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:29"},"nodeType":"YulFunctionCall","src":"3665:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:29","type":""}],"src":"3599:126:29"},{"body":{"nodeType":"YulBlock","src":"3776:51:29","statements":[{"nodeType":"YulAssignment","src":"3786:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:29"},"nodeType":"YulFunctionCall","src":"3797:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:29","type":""}],"src":"3731:96:29"},{"body":{"nodeType":"YulBlock","src":"3898:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:29"},"nodeType":"YulFunctionCall","src":"3920:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:29"},"nodeType":"YulFunctionCall","src":"3908:37:29"},"nodeType":"YulExpressionStatement","src":"3908:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:29","type":""}],"src":"3833:118:29"},{"body":{"nodeType":"YulBlock","src":"4055:124:29","statements":[{"nodeType":"YulAssignment","src":"4065:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:29"},"nodeType":"YulFunctionCall","src":"4073:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:29"},"nodeType":"YulFunctionCall","src":"4154:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:29"},"nodeType":"YulFunctionCall","src":"4101:71:29"},"nodeType":"YulExpressionStatement","src":"4101:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:29","type":""}],"src":"3957:222:29"},{"body":{"nodeType":"YulBlock","src":"4228:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:29"},"nodeType":"YulFunctionCall","src":"4287:12:29"},"nodeType":"YulExpressionStatement","src":"4287:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:29"},"nodeType":"YulFunctionCall","src":"4258:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:29"},"nodeType":"YulFunctionCall","src":"4248:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:29"},"nodeType":"YulFunctionCall","src":"4241:43:29"},"nodeType":"YulIf","src":"4238:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:29","type":""}],"src":"4185:122:29"},{"body":{"nodeType":"YulBlock","src":"4365:87:29","statements":[{"nodeType":"YulAssignment","src":"4375:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:29"},"nodeType":"YulFunctionCall","src":"4384:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:29"},"nodeType":"YulFunctionCall","src":"4413:33:29"},"nodeType":"YulExpressionStatement","src":"4413:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:29","type":""}],"src":"4313:139:29"},{"body":{"nodeType":"YulBlock","src":"4541:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:29"},"nodeType":"YulFunctionCall","src":"4589:79:29"},"nodeType":"YulExpressionStatement","src":"4589:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:29"},"nodeType":"YulFunctionCall","src":"4558:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:29"},"nodeType":"YulFunctionCall","src":"4554:32:29"},"nodeType":"YulIf","src":"4551:119:29"},{"nodeType":"YulBlock","src":"4680:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:29"},"nodeType":"YulFunctionCall","src":"4755:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:29"},"nodeType":"YulFunctionCall","src":"4734:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:29"}]}]},{"nodeType":"YulBlock","src":"4807:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:29"},"nodeType":"YulFunctionCall","src":"4883:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:29"},"nodeType":"YulFunctionCall","src":"4862:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:29","type":""}],"src":"4458:474:29"},{"body":{"nodeType":"YulBlock","src":"5038:519:29","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:29"},"nodeType":"YulFunctionCall","src":"5086:79:29"},"nodeType":"YulExpressionStatement","src":"5086:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:29"},"nodeType":"YulFunctionCall","src":"5055:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:29"},"nodeType":"YulFunctionCall","src":"5051:32:29"},"nodeType":"YulIf","src":"5048:119:29"},{"nodeType":"YulBlock","src":"5177:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:29"},"nodeType":"YulFunctionCall","src":"5252:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:29"},"nodeType":"YulFunctionCall","src":"5231:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:29"}]}]},{"nodeType":"YulBlock","src":"5304:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:29"},"nodeType":"YulFunctionCall","src":"5380:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:29"},"nodeType":"YulFunctionCall","src":"5359:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:29"}]}]},{"nodeType":"YulBlock","src":"5432:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:29"},"nodeType":"YulFunctionCall","src":"5508:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:29"},"nodeType":"YulFunctionCall","src":"5487:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:29","type":""}],"src":"4938:619:29"},{"body":{"nodeType":"YulBlock","src":"5629:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:29"},"nodeType":"YulFunctionCall","src":"5677:79:29"},"nodeType":"YulExpressionStatement","src":"5677:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:29"},"nodeType":"YulFunctionCall","src":"5646:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:29"},"nodeType":"YulFunctionCall","src":"5642:32:29"},"nodeType":"YulIf","src":"5639:119:29"},{"nodeType":"YulBlock","src":"5768:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:29"},"nodeType":"YulFunctionCall","src":"5843:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:29"},"nodeType":"YulFunctionCall","src":"5822:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:29","type":""}],"src":"5563:329:29"},{"body":{"nodeType":"YulBlock","src":"5963:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:29"},"nodeType":"YulFunctionCall","src":"5985:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:29"},"nodeType":"YulFunctionCall","src":"5973:37:29"},"nodeType":"YulExpressionStatement","src":"5973:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:29","type":""}],"src":"5898:118:29"},{"body":{"nodeType":"YulBlock","src":"6120:124:29","statements":[{"nodeType":"YulAssignment","src":"6130:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:29"},"nodeType":"YulFunctionCall","src":"6138:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:29"},"nodeType":"YulFunctionCall","src":"6219:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:29"},"nodeType":"YulFunctionCall","src":"6166:71:29"},"nodeType":"YulExpressionStatement","src":"6166:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:29","type":""}],"src":"6022:222:29"},{"body":{"nodeType":"YulBlock","src":"6290:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:29"},"nodeType":"YulFunctionCall","src":"6346:12:29"},"nodeType":"YulExpressionStatement","src":"6346:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:29"},"nodeType":"YulFunctionCall","src":"6320:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:29"},"nodeType":"YulFunctionCall","src":"6310:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:29"},"nodeType":"YulFunctionCall","src":"6303:40:29"},"nodeType":"YulIf","src":"6300:60:29"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:29","type":""}],"src":"6250:116:29"},{"body":{"nodeType":"YulBlock","src":"6421:84:29","statements":[{"nodeType":"YulAssignment","src":"6431:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:29"},"nodeType":"YulFunctionCall","src":"6440:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:29"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:29"},"nodeType":"YulFunctionCall","src":"6469:30:29"},"nodeType":"YulExpressionStatement","src":"6469:30:29"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:29","type":""}],"src":"6372:133:29"},{"body":{"nodeType":"YulBlock","src":"6591:388:29","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:29"},"nodeType":"YulFunctionCall","src":"6639:79:29"},"nodeType":"YulExpressionStatement","src":"6639:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:29"},"nodeType":"YulFunctionCall","src":"6608:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:29"},"nodeType":"YulFunctionCall","src":"6604:32:29"},"nodeType":"YulIf","src":"6601:119:29"},{"nodeType":"YulBlock","src":"6730:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:29"},"nodeType":"YulFunctionCall","src":"6805:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:29"},"nodeType":"YulFunctionCall","src":"6784:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:29"}]}]},{"nodeType":"YulBlock","src":"6857:115:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:29"},"nodeType":"YulFunctionCall","src":"6930:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:29"},"nodeType":"YulFunctionCall","src":"6912:50:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:29","type":""}],"src":"6511:468:29"},{"body":{"nodeType":"YulBlock","src":"7074:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:29"},"nodeType":"YulFunctionCall","src":"7084:12:29"},"nodeType":"YulExpressionStatement","src":"7084:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:29"},{"body":{"nodeType":"YulBlock","src":"7197:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:29"},"nodeType":"YulFunctionCall","src":"7207:12:29"},"nodeType":"YulExpressionStatement","src":"7207:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:29"},{"body":{"nodeType":"YulBlock","src":"7259:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:29"},"nodeType":"YulFunctionCall","src":"7269:88:29"},"nodeType":"YulExpressionStatement","src":"7269:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:29"},"nodeType":"YulFunctionCall","src":"7366:15:29"},"nodeType":"YulExpressionStatement","src":"7366:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:29"},"nodeType":"YulFunctionCall","src":"7390:15:29"},"nodeType":"YulExpressionStatement","src":"7390:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:29"},{"body":{"nodeType":"YulBlock","src":"7460:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:29"},"nodeType":"YulFunctionCall","src":"7500:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:29"},"nodeType":"YulFunctionCall","src":"7488:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:29"},"nodeType":"YulFunctionCall","src":"7641:18:29"},"nodeType":"YulExpressionStatement","src":"7641:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:29"},"nodeType":"YulFunctionCall","src":"7579:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:29"},"nodeType":"YulFunctionCall","src":"7615:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:29"},"nodeType":"YulFunctionCall","src":"7576:62:29"},"nodeType":"YulIf","src":"7573:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:29"},"nodeType":"YulFunctionCall","src":"7670:22:29"},"nodeType":"YulExpressionStatement","src":"7670:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:29","type":""}],"src":"7417:281:29"},{"body":{"nodeType":"YulBlock","src":"7745:88:29","statements":[{"nodeType":"YulAssignment","src":"7755:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:29"},"nodeType":"YulFunctionCall","src":"7765:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:29"},"nodeType":"YulFunctionCall","src":"7794:33:29"},"nodeType":"YulExpressionStatement","src":"7794:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:29","type":""}],"src":"7704:129:29"},{"body":{"nodeType":"YulBlock","src":"7905:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:29"},"nodeType":"YulFunctionCall","src":"8012:18:29"},"nodeType":"YulExpressionStatement","src":"8012:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:29"},"nodeType":"YulFunctionCall","src":"7979:30:29"},"nodeType":"YulIf","src":"7976:56:29"},{"nodeType":"YulAssignment","src":"8042:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:29"},"nodeType":"YulFunctionCall","src":"8050:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:29"}]},{"nodeType":"YulAssignment","src":"8116:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:29"},"nodeType":"YulFunctionCall","src":"8124:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:29","type":""}],"src":"7839:307:29"},{"body":{"nodeType":"YulBlock","src":"8203:103:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:29"},"nodeType":"YulFunctionCall","src":"8213:30:29"},"nodeType":"YulExpressionStatement","src":"8213:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:29"},"nodeType":"YulFunctionCall","src":"8280:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:29"},"nodeType":"YulFunctionCall","src":"8273:27:29"},"nodeType":"YulExpressionStatement","src":"8273:27:29"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:29","type":""}],"src":"8152:154:29"},{"body":{"nodeType":"YulBlock","src":"8395:327:29","statements":[{"nodeType":"YulAssignment","src":"8405:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:29"},"nodeType":"YulFunctionCall","src":"8430:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:29"},"nodeType":"YulFunctionCall","src":"8414:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:29"},"nodeType":"YulFunctionCall","src":"8488:21:29"},"nodeType":"YulExpressionStatement","src":"8488:21:29"},{"nodeType":"YulVariableDeclaration","src":"8518:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:29"},"nodeType":"YulFunctionCall","src":"8529:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:29"},"nodeType":"YulFunctionCall","src":"8585:79:29"},"nodeType":"YulExpressionStatement","src":"8585:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:29"},"nodeType":"YulFunctionCall","src":"8560:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:29"},"nodeType":"YulFunctionCall","src":"8557:25:29"},"nodeType":"YulIf","src":"8554:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:29"},"nodeType":"YulFunctionCall","src":"8675:41:29"},"nodeType":"YulExpressionStatement","src":"8675:41:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:29","type":""}],"src":"8312:410:29"},{"body":{"nodeType":"YulBlock","src":"8802:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:29"},"nodeType":"YulFunctionCall","src":"8853:79:29"},"nodeType":"YulExpressionStatement","src":"8853:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:29"},"nodeType":"YulFunctionCall","src":"8826:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:29"},"nodeType":"YulFunctionCall","src":"8822:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:29"},"nodeType":"YulFunctionCall","src":"8815:35:29"},"nodeType":"YulIf","src":"8812:122:29"},{"nodeType":"YulVariableDeclaration","src":"8943:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:29"},"nodeType":"YulFunctionCall","src":"8957:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:29"},"nodeType":"YulFunctionCall","src":"9042:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:29"},"nodeType":"YulFunctionCall","src":"8995:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:29","type":""}],"src":"8741:338:29"},{"body":{"nodeType":"YulBlock","src":"9211:817:29","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:29"},"nodeType":"YulFunctionCall","src":"9260:79:29"},"nodeType":"YulExpressionStatement","src":"9260:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:29"},"nodeType":"YulFunctionCall","src":"9228:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:29"},"nodeType":"YulFunctionCall","src":"9224:33:29"},"nodeType":"YulIf","src":"9221:120:29"},{"nodeType":"YulBlock","src":"9351:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:29"},"nodeType":"YulFunctionCall","src":"9426:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:29"},"nodeType":"YulFunctionCall","src":"9405:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:29"}]}]},{"nodeType":"YulBlock","src":"9478:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:29"},"nodeType":"YulFunctionCall","src":"9554:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:29"},"nodeType":"YulFunctionCall","src":"9533:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:29"}]}]},{"nodeType":"YulBlock","src":"9606:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:29"},"nodeType":"YulFunctionCall","src":"9682:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:29"},"nodeType":"YulFunctionCall","src":"9661:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:29"}]}]},{"nodeType":"YulBlock","src":"9734:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:29"},"nodeType":"YulFunctionCall","src":"9776:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:29"},"nodeType":"YulFunctionCall","src":"9763:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:29"},"nodeType":"YulFunctionCall","src":"9844:79:29"},"nodeType":"YulExpressionStatement","src":"9844:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:29"},"nodeType":"YulFunctionCall","src":"9811:30:29"},"nodeType":"YulIf","src":"9808:117:29"},{"nodeType":"YulAssignment","src":"9939:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:29"},"nodeType":"YulFunctionCall","src":"9979:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:29"},"nodeType":"YulFunctionCall","src":"9949:62:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:29","type":""}],"src":"9085:943:29"},{"body":{"nodeType":"YulBlock","src":"10117:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:29"},"nodeType":"YulFunctionCall","src":"10165:79:29"},"nodeType":"YulExpressionStatement","src":"10165:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:29"},"nodeType":"YulFunctionCall","src":"10134:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:29"},"nodeType":"YulFunctionCall","src":"10130:32:29"},"nodeType":"YulIf","src":"10127:119:29"},{"nodeType":"YulBlock","src":"10256:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:29"},"nodeType":"YulFunctionCall","src":"10331:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:29"},"nodeType":"YulFunctionCall","src":"10310:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:29"}]}]},{"nodeType":"YulBlock","src":"10383:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:29"},"nodeType":"YulFunctionCall","src":"10459:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:29"},"nodeType":"YulFunctionCall","src":"10438:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:29","type":""}],"src":"10034:474:29"},{"body":{"nodeType":"YulBlock","src":"10581:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"10686:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10688:16:29"},"nodeType":"YulFunctionCall","src":"10688:18:29"},"nodeType":"YulExpressionStatement","src":"10688:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10658:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10666:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10655:2:29"},"nodeType":"YulFunctionCall","src":"10655:30:29"},"nodeType":"YulIf","src":"10652:56:29"},{"nodeType":"YulAssignment","src":"10718:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10748:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10726:21:29"},"nodeType":"YulFunctionCall","src":"10726:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10718:4:29"}]},{"nodeType":"YulAssignment","src":"10792:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10804:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"10810:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10800:3:29"},"nodeType":"YulFunctionCall","src":"10800:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10792:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10565:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10576:4:29","type":""}],"src":"10514:308:29"},{"body":{"nodeType":"YulBlock","src":"10912:328:29","statements":[{"nodeType":"YulAssignment","src":"10922:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10989:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10947:41:29"},"nodeType":"YulFunctionCall","src":"10947:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10931:15:29"},"nodeType":"YulFunctionCall","src":"10931:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10922:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11013:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"11020:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11006:6:29"},"nodeType":"YulFunctionCall","src":"11006:21:29"},"nodeType":"YulExpressionStatement","src":"11006:21:29"},{"nodeType":"YulVariableDeclaration","src":"11036:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11051:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11058:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11047:3:29"},"nodeType":"YulFunctionCall","src":"11047:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11040:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11101:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11103:77:29"},"nodeType":"YulFunctionCall","src":"11103:79:29"},"nodeType":"YulExpressionStatement","src":"11103:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11082:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11087:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11078:3:29"},"nodeType":"YulFunctionCall","src":"11078:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"11096:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11075:2:29"},"nodeType":"YulFunctionCall","src":"11075:25:29"},"nodeType":"YulIf","src":"11072:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11217:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"11222:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11227:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"11193:23:29"},"nodeType":"YulFunctionCall","src":"11193:41:29"},"nodeType":"YulExpressionStatement","src":"11193:41:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10885:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"10890:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"10898:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10906:5:29","type":""}],"src":"10828:412:29"},{"body":{"nodeType":"YulBlock","src":"11322:278:29","statements":[{"body":{"nodeType":"YulBlock","src":"11371:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11373:77:29"},"nodeType":"YulFunctionCall","src":"11373:79:29"},"nodeType":"YulExpressionStatement","src":"11373:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11350:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11358:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11346:3:29"},"nodeType":"YulFunctionCall","src":"11346:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"11365:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11342:3:29"},"nodeType":"YulFunctionCall","src":"11342:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11335:6:29"},"nodeType":"YulFunctionCall","src":"11335:35:29"},"nodeType":"YulIf","src":"11332:122:29"},{"nodeType":"YulVariableDeclaration","src":"11463:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11490:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11477:12:29"},"nodeType":"YulFunctionCall","src":"11477:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11467:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11506:88:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11567:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11575:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11563:3:29"},"nodeType":"YulFunctionCall","src":"11563:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"11582:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"11590:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11515:47:29"},"nodeType":"YulFunctionCall","src":"11515:79:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11506:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11300:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"11308:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11316:5:29","type":""}],"src":"11260:340:29"},{"body":{"nodeType":"YulBlock","src":"11699:561:29","statements":[{"body":{"nodeType":"YulBlock","src":"11745:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11747:77:29"},"nodeType":"YulFunctionCall","src":"11747:79:29"},"nodeType":"YulExpressionStatement","src":"11747:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11720:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11729:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11716:3:29"},"nodeType":"YulFunctionCall","src":"11716:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11741:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11712:3:29"},"nodeType":"YulFunctionCall","src":"11712:32:29"},"nodeType":"YulIf","src":"11709:119:29"},{"nodeType":"YulBlock","src":"11838:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11853:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11867:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11857:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11882:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11917:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11928:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11913:3:29"},"nodeType":"YulFunctionCall","src":"11913:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11937:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11892:20:29"},"nodeType":"YulFunctionCall","src":"11892:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11882:6:29"}]}]},{"nodeType":"YulBlock","src":"11965:288:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11980:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12011:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12022:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12007:3:29"},"nodeType":"YulFunctionCall","src":"12007:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11994:12:29"},"nodeType":"YulFunctionCall","src":"11994:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11984:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12073:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12075:77:29"},"nodeType":"YulFunctionCall","src":"12075:79:29"},"nodeType":"YulExpressionStatement","src":"12075:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12045:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12053:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12042:2:29"},"nodeType":"YulFunctionCall","src":"12042:30:29"},"nodeType":"YulIf","src":"12039:117:29"},{"nodeType":"YulAssignment","src":"12170:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12215:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12226:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12211:3:29"},"nodeType":"YulFunctionCall","src":"12211:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12235:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12180:30:29"},"nodeType":"YulFunctionCall","src":"12180:63:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12170:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11661:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11672:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11684:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11692:6:29","type":""}],"src":"11606:654:29"},{"body":{"nodeType":"YulBlock","src":"12294:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12311:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12314:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12304:6:29"},"nodeType":"YulFunctionCall","src":"12304:88:29"},"nodeType":"YulExpressionStatement","src":"12304:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12408:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12411:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12401:6:29"},"nodeType":"YulFunctionCall","src":"12401:15:29"},"nodeType":"YulExpressionStatement","src":"12401:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12432:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12435:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12425:6:29"},"nodeType":"YulFunctionCall","src":"12425:15:29"},"nodeType":"YulExpressionStatement","src":"12425:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12266:180:29"},{"body":{"nodeType":"YulBlock","src":"12503:269:29","statements":[{"nodeType":"YulAssignment","src":"12513:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12527:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"12533:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12523:3:29"},"nodeType":"YulFunctionCall","src":"12523:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12513:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12544:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12574:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"12580:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12570:3:29"},"nodeType":"YulFunctionCall","src":"12570:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12548:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12621:51:29","statements":[{"nodeType":"YulAssignment","src":"12635:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12649:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12657:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12645:3:29"},"nodeType":"YulFunctionCall","src":"12645:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12635:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12601:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12594:6:29"},"nodeType":"YulFunctionCall","src":"12594:26:29"},"nodeType":"YulIf","src":"12591:81:29"},{"body":{"nodeType":"YulBlock","src":"12724:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12738:16:29"},"nodeType":"YulFunctionCall","src":"12738:18:29"},"nodeType":"YulExpressionStatement","src":"12738:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12688:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12711:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12719:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12708:2:29"},"nodeType":"YulFunctionCall","src":"12708:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12685:2:29"},"nodeType":"YulFunctionCall","src":"12685:38:29"},"nodeType":"YulIf","src":"12682:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12487:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12496:6:29","type":""}],"src":"12452:320:29"},{"body":{"nodeType":"YulBlock","src":"12884:114:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12906:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12902:3:29"},"nodeType":"YulFunctionCall","src":"12902:14:29"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"12918:34:29","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12895:6:29"},"nodeType":"YulFunctionCall","src":"12895:58:29"},"nodeType":"YulExpressionStatement","src":"12895:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12974:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12982:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12970:3:29"},"nodeType":"YulFunctionCall","src":"12970:15:29"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"12987:3:29","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12963:6:29"},"nodeType":"YulFunctionCall","src":"12963:28:29"},"nodeType":"YulExpressionStatement","src":"12963:28:29"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12876:6:29","type":""}],"src":"12778:220:29"},{"body":{"nodeType":"YulBlock","src":"13150:220:29","statements":[{"nodeType":"YulAssignment","src":"13160:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13226:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13231:2:29","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13167:58:29"},"nodeType":"YulFunctionCall","src":"13167:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13160:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13332:3:29"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"13243:88:29"},"nodeType":"YulFunctionCall","src":"13243:93:29"},"nodeType":"YulExpressionStatement","src":"13243:93:29"},{"nodeType":"YulAssignment","src":"13345:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13356:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13361:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13352:3:29"},"nodeType":"YulFunctionCall","src":"13352:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13345:3:29"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13138:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13146:3:29","type":""}],"src":"13004:366:29"},{"body":{"nodeType":"YulBlock","src":"13547:248:29","statements":[{"nodeType":"YulAssignment","src":"13557:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13569:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13580:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13565:3:29"},"nodeType":"YulFunctionCall","src":"13565:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13557:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13604:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13615:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13600:3:29"},"nodeType":"YulFunctionCall","src":"13600:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13623:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13629:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13619:3:29"},"nodeType":"YulFunctionCall","src":"13619:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13593:6:29"},"nodeType":"YulFunctionCall","src":"13593:47:29"},"nodeType":"YulExpressionStatement","src":"13593:47:29"},{"nodeType":"YulAssignment","src":"13649:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13783:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13657:124:29"},"nodeType":"YulFunctionCall","src":"13657:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13649:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13527:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13542:4:29","type":""}],"src":"13376:419:29"},{"body":{"nodeType":"YulBlock","src":"13907:142:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13929:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13937:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13925:3:29"},"nodeType":"YulFunctionCall","src":"13925:14:29"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"13941:34:29","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13918:6:29"},"nodeType":"YulFunctionCall","src":"13918:58:29"},"nodeType":"YulExpressionStatement","src":"13918:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13997:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14005:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13993:3:29"},"nodeType":"YulFunctionCall","src":"13993:15:29"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"14010:31:29","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13986:6:29"},"nodeType":"YulFunctionCall","src":"13986:56:29"},"nodeType":"YulExpressionStatement","src":"13986:56:29"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13899:6:29","type":""}],"src":"13801:248:29"},{"body":{"nodeType":"YulBlock","src":"14201:220:29","statements":[{"nodeType":"YulAssignment","src":"14211:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14277:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14282:2:29","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14218:58:29"},"nodeType":"YulFunctionCall","src":"14218:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14211:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14383:3:29"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"14294:88:29"},"nodeType":"YulFunctionCall","src":"14294:93:29"},"nodeType":"YulExpressionStatement","src":"14294:93:29"},{"nodeType":"YulAssignment","src":"14396:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14407:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14412:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14403:3:29"},"nodeType":"YulFunctionCall","src":"14403:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14396:3:29"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14189:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14197:3:29","type":""}],"src":"14055:366:29"},{"body":{"nodeType":"YulBlock","src":"14598:248:29","statements":[{"nodeType":"YulAssignment","src":"14608:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14620:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14631:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14616:3:29"},"nodeType":"YulFunctionCall","src":"14616:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14608:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14655:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14666:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14651:3:29"},"nodeType":"YulFunctionCall","src":"14651:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14674:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14680:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14670:3:29"},"nodeType":"YulFunctionCall","src":"14670:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14644:6:29"},"nodeType":"YulFunctionCall","src":"14644:47:29"},"nodeType":"YulExpressionStatement","src":"14644:47:29"},{"nodeType":"YulAssignment","src":"14700:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14834:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14708:124:29"},"nodeType":"YulFunctionCall","src":"14708:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14700:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14578:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14593:4:29","type":""}],"src":"14427:419:29"},{"body":{"nodeType":"YulBlock","src":"14958:126:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14980:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14988:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14976:3:29"},"nodeType":"YulFunctionCall","src":"14976:14:29"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"14992:34:29","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14969:6:29"},"nodeType":"YulFunctionCall","src":"14969:58:29"},"nodeType":"YulExpressionStatement","src":"14969:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15048:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15056:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:29"},"nodeType":"YulFunctionCall","src":"15044:15:29"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"15061:15:29","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15037:6:29"},"nodeType":"YulFunctionCall","src":"15037:40:29"},"nodeType":"YulExpressionStatement","src":"15037:40:29"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14950:6:29","type":""}],"src":"14852:232:29"},{"body":{"nodeType":"YulBlock","src":"15236:220:29","statements":[{"nodeType":"YulAssignment","src":"15246:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15312:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15317:2:29","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15253:58:29"},"nodeType":"YulFunctionCall","src":"15253:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15246:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15418:3:29"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"15329:88:29"},"nodeType":"YulFunctionCall","src":"15329:93:29"},"nodeType":"YulExpressionStatement","src":"15329:93:29"},{"nodeType":"YulAssignment","src":"15431:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15442:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"15447:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15438:3:29"},"nodeType":"YulFunctionCall","src":"15438:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15431:3:29"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15224:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15232:3:29","type":""}],"src":"15090:366:29"},{"body":{"nodeType":"YulBlock","src":"15633:248:29","statements":[{"nodeType":"YulAssignment","src":"15643:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15655:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15666:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15651:3:29"},"nodeType":"YulFunctionCall","src":"15651:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15643:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15690:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15701:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15686:3:29"},"nodeType":"YulFunctionCall","src":"15686:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15709:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"15715:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15705:3:29"},"nodeType":"YulFunctionCall","src":"15705:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15679:6:29"},"nodeType":"YulFunctionCall","src":"15679:47:29"},"nodeType":"YulExpressionStatement","src":"15679:47:29"},{"nodeType":"YulAssignment","src":"15735:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15869:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15743:124:29"},"nodeType":"YulFunctionCall","src":"15743:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15735:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15613:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15628:4:29","type":""}],"src":"15462:419:29"},{"body":{"nodeType":"YulBlock","src":"15993:68:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16015:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16023:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16011:3:29"},"nodeType":"YulFunctionCall","src":"16011:14:29"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"16027:26:29","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16004:6:29"},"nodeType":"YulFunctionCall","src":"16004:50:29"},"nodeType":"YulExpressionStatement","src":"16004:50:29"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15985:6:29","type":""}],"src":"15887:174:29"},{"body":{"nodeType":"YulBlock","src":"16213:220:29","statements":[{"nodeType":"YulAssignment","src":"16223:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16289:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"16294:2:29","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16230:58:29"},"nodeType":"YulFunctionCall","src":"16230:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16223:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16395:3:29"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"16306:88:29"},"nodeType":"YulFunctionCall","src":"16306:93:29"},"nodeType":"YulExpressionStatement","src":"16306:93:29"},{"nodeType":"YulAssignment","src":"16408:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16419:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"16424:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16415:3:29"},"nodeType":"YulFunctionCall","src":"16415:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16408:3:29"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16201:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16209:3:29","type":""}],"src":"16067:366:29"},{"body":{"nodeType":"YulBlock","src":"16610:248:29","statements":[{"nodeType":"YulAssignment","src":"16620:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16643:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16628:3:29"},"nodeType":"YulFunctionCall","src":"16628:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16620:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16667:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16678:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16663:3:29"},"nodeType":"YulFunctionCall","src":"16663:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16686:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"16692:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16682:3:29"},"nodeType":"YulFunctionCall","src":"16682:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16656:6:29"},"nodeType":"YulFunctionCall","src":"16656:47:29"},"nodeType":"YulExpressionStatement","src":"16656:47:29"},{"nodeType":"YulAssignment","src":"16712:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16846:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16720:124:29"},"nodeType":"YulFunctionCall","src":"16720:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16712:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16590:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16605:4:29","type":""}],"src":"16439:419:29"},{"body":{"nodeType":"YulBlock","src":"16970:122:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16992:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17000:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16988:3:29"},"nodeType":"YulFunctionCall","src":"16988:14:29"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"17004:34:29","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16981:6:29"},"nodeType":"YulFunctionCall","src":"16981:58:29"},"nodeType":"YulExpressionStatement","src":"16981:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17060:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17068:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17056:3:29"},"nodeType":"YulFunctionCall","src":"17056:15:29"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17073:11:29","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17049:6:29"},"nodeType":"YulFunctionCall","src":"17049:36:29"},"nodeType":"YulExpressionStatement","src":"17049:36:29"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16962:6:29","type":""}],"src":"16864:228:29"},{"body":{"nodeType":"YulBlock","src":"17244:220:29","statements":[{"nodeType":"YulAssignment","src":"17254:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17320:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17325:2:29","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17261:58:29"},"nodeType":"YulFunctionCall","src":"17261:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17254:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17426:3:29"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"17337:88:29"},"nodeType":"YulFunctionCall","src":"17337:93:29"},"nodeType":"YulExpressionStatement","src":"17337:93:29"},{"nodeType":"YulAssignment","src":"17439:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17450:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17455:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17446:3:29"},"nodeType":"YulFunctionCall","src":"17446:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17439:3:29"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17232:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17240:3:29","type":""}],"src":"17098:366:29"},{"body":{"nodeType":"YulBlock","src":"17641:248:29","statements":[{"nodeType":"YulAssignment","src":"17651:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17663:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17674:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17659:3:29"},"nodeType":"YulFunctionCall","src":"17659:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17651:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17698:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17709:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17694:3:29"},"nodeType":"YulFunctionCall","src":"17694:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17717:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17723:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17713:3:29"},"nodeType":"YulFunctionCall","src":"17713:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17687:6:29"},"nodeType":"YulFunctionCall","src":"17687:47:29"},"nodeType":"YulExpressionStatement","src":"17687:47:29"},{"nodeType":"YulAssignment","src":"17743:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17877:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17751:124:29"},"nodeType":"YulFunctionCall","src":"17751:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17743:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17621:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17636:4:29","type":""}],"src":"17470:419:29"},{"body":{"nodeType":"YulBlock","src":"18009:34:29","statements":[{"nodeType":"YulAssignment","src":"18019:18:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"18034:3:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18019:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17981:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"17986:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17997:11:29","type":""}],"src":"17895:148:29"},{"body":{"nodeType":"YulBlock","src":"18159:267:29","statements":[{"nodeType":"YulVariableDeclaration","src":"18169:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18216:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18183:32:29"},"nodeType":"YulFunctionCall","src":"18183:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18173:6:29","type":""}]},{"nodeType":"YulAssignment","src":"18231:96:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18315:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"18320:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18238:76:29"},"nodeType":"YulFunctionCall","src":"18238:89:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18231:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18362:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"18369:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18358:3:29"},"nodeType":"YulFunctionCall","src":"18358:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"18376:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"18381:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"18336:21:29"},"nodeType":"YulFunctionCall","src":"18336:52:29"},"nodeType":"YulExpressionStatement","src":"18336:52:29"},{"nodeType":"YulAssignment","src":"18397:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18408:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"18413:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18404:3:29"},"nodeType":"YulFunctionCall","src":"18404:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18397:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18140:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18147:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18155:3:29","type":""}],"src":"18049:377:29"},{"body":{"nodeType":"YulBlock","src":"18616:251:29","statements":[{"nodeType":"YulAssignment","src":"18627:102:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18716:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"18725:3:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18634:81:29"},"nodeType":"YulFunctionCall","src":"18634:95:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18627:3:29"}]},{"nodeType":"YulAssignment","src":"18739:102:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18828:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"18837:3:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18746:81:29"},"nodeType":"YulFunctionCall","src":"18746:95:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18739:3:29"}]},{"nodeType":"YulAssignment","src":"18851:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"18858:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18851:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18587:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18593:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18601:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18612:3:29","type":""}],"src":"18432:435:29"},{"body":{"nodeType":"YulBlock","src":"18979:119:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19001:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19009:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18997:3:29"},"nodeType":"YulFunctionCall","src":"18997:14:29"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"19013:34:29","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18990:6:29"},"nodeType":"YulFunctionCall","src":"18990:58:29"},"nodeType":"YulExpressionStatement","src":"18990:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19069:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19077:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19065:3:29"},"nodeType":"YulFunctionCall","src":"19065:15:29"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"19082:8:29","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19058:6:29"},"nodeType":"YulFunctionCall","src":"19058:33:29"},"nodeType":"YulExpressionStatement","src":"19058:33:29"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18971:6:29","type":""}],"src":"18873:225:29"},{"body":{"nodeType":"YulBlock","src":"19250:220:29","statements":[{"nodeType":"YulAssignment","src":"19260:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19326:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19331:2:29","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19267:58:29"},"nodeType":"YulFunctionCall","src":"19267:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19260:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19432:3:29"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"19343:88:29"},"nodeType":"YulFunctionCall","src":"19343:93:29"},"nodeType":"YulExpressionStatement","src":"19343:93:29"},{"nodeType":"YulAssignment","src":"19445:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19456:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19461:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19452:3:29"},"nodeType":"YulFunctionCall","src":"19452:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19445:3:29"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19238:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19246:3:29","type":""}],"src":"19104:366:29"},{"body":{"nodeType":"YulBlock","src":"19647:248:29","statements":[{"nodeType":"YulAssignment","src":"19657:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19669:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19680:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19665:3:29"},"nodeType":"YulFunctionCall","src":"19665:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19657:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19704:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19715:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19700:3:29"},"nodeType":"YulFunctionCall","src":"19700:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19723:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19729:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19719:3:29"},"nodeType":"YulFunctionCall","src":"19719:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19693:6:29"},"nodeType":"YulFunctionCall","src":"19693:47:29"},"nodeType":"YulExpressionStatement","src":"19693:47:29"},{"nodeType":"YulAssignment","src":"19749:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19883:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19757:124:29"},"nodeType":"YulFunctionCall","src":"19757:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19749:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19627:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19642:4:29","type":""}],"src":"19476:419:29"},{"body":{"nodeType":"YulBlock","src":"20007:118:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20029:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20037:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20025:3:29"},"nodeType":"YulFunctionCall","src":"20025:14:29"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"20041:34:29","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20018:6:29"},"nodeType":"YulFunctionCall","src":"20018:58:29"},"nodeType":"YulExpressionStatement","src":"20018:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20097:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20105:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20093:3:29"},"nodeType":"YulFunctionCall","src":"20093:15:29"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"20110:7:29","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20086:6:29"},"nodeType":"YulFunctionCall","src":"20086:32:29"},"nodeType":"YulExpressionStatement","src":"20086:32:29"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19999:6:29","type":""}],"src":"19901:224:29"},{"body":{"nodeType":"YulBlock","src":"20277:220:29","statements":[{"nodeType":"YulAssignment","src":"20287:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20353:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20358:2:29","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20294:58:29"},"nodeType":"YulFunctionCall","src":"20294:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20287:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20459:3:29"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"20370:88:29"},"nodeType":"YulFunctionCall","src":"20370:93:29"},"nodeType":"YulExpressionStatement","src":"20370:93:29"},{"nodeType":"YulAssignment","src":"20472:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20483:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20488:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20479:3:29"},"nodeType":"YulFunctionCall","src":"20479:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20472:3:29"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20265:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20273:3:29","type":""}],"src":"20131:366:29"},{"body":{"nodeType":"YulBlock","src":"20674:248:29","statements":[{"nodeType":"YulAssignment","src":"20684:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20696:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20707:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20692:3:29"},"nodeType":"YulFunctionCall","src":"20692:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20684:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20742:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20727:3:29"},"nodeType":"YulFunctionCall","src":"20727:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20750:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"20756:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20746:3:29"},"nodeType":"YulFunctionCall","src":"20746:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20720:6:29"},"nodeType":"YulFunctionCall","src":"20720:47:29"},"nodeType":"YulExpressionStatement","src":"20720:47:29"},{"nodeType":"YulAssignment","src":"20776:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20910:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20784:124:29"},"nodeType":"YulFunctionCall","src":"20784:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20776:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20654:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20669:4:29","type":""}],"src":"20503:419:29"},{"body":{"nodeType":"YulBlock","src":"21034:117:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21056:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21064:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21052:3:29"},"nodeType":"YulFunctionCall","src":"21052:14:29"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"21068:34:29","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21045:6:29"},"nodeType":"YulFunctionCall","src":"21045:58:29"},"nodeType":"YulExpressionStatement","src":"21045:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21124:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21132:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21120:3:29"},"nodeType":"YulFunctionCall","src":"21120:15:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"21137:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21113:6:29"},"nodeType":"YulFunctionCall","src":"21113:31:29"},"nodeType":"YulExpressionStatement","src":"21113:31:29"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21026:6:29","type":""}],"src":"20928:223:29"},{"body":{"nodeType":"YulBlock","src":"21303:220:29","statements":[{"nodeType":"YulAssignment","src":"21313:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21379:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"21384:2:29","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21320:58:29"},"nodeType":"YulFunctionCall","src":"21320:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21313:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21485:3:29"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"21396:88:29"},"nodeType":"YulFunctionCall","src":"21396:93:29"},"nodeType":"YulExpressionStatement","src":"21396:93:29"},{"nodeType":"YulAssignment","src":"21498:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21509:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"21514:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21505:3:29"},"nodeType":"YulFunctionCall","src":"21505:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21498:3:29"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21291:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21299:3:29","type":""}],"src":"21157:366:29"},{"body":{"nodeType":"YulBlock","src":"21700:248:29","statements":[{"nodeType":"YulAssignment","src":"21710:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21722:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21733:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21718:3:29"},"nodeType":"YulFunctionCall","src":"21718:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21710:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21757:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21768:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21753:3:29"},"nodeType":"YulFunctionCall","src":"21753:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21776:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"21782:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21772:3:29"},"nodeType":"YulFunctionCall","src":"21772:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21746:6:29"},"nodeType":"YulFunctionCall","src":"21746:47:29"},"nodeType":"YulExpressionStatement","src":"21746:47:29"},{"nodeType":"YulAssignment","src":"21802:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21936:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21810:124:29"},"nodeType":"YulFunctionCall","src":"21810:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21802:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21680:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21695:4:29","type":""}],"src":"21529:419:29"},{"body":{"nodeType":"YulBlock","src":"22060:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22082:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22090:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22078:3:29"},"nodeType":"YulFunctionCall","src":"22078:14:29"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22094:34:29","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22071:6:29"},"nodeType":"YulFunctionCall","src":"22071:58:29"},"nodeType":"YulExpressionStatement","src":"22071:58:29"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22052:6:29","type":""}],"src":"21954:182:29"},{"body":{"nodeType":"YulBlock","src":"22288:220:29","statements":[{"nodeType":"YulAssignment","src":"22298:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22364:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22369:2:29","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22305:58:29"},"nodeType":"YulFunctionCall","src":"22305:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22298:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22470:3:29"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"22381:88:29"},"nodeType":"YulFunctionCall","src":"22381:93:29"},"nodeType":"YulExpressionStatement","src":"22381:93:29"},{"nodeType":"YulAssignment","src":"22483:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22494:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22499:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22490:3:29"},"nodeType":"YulFunctionCall","src":"22490:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22483:3:29"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22276:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22284:3:29","type":""}],"src":"22142:366:29"},{"body":{"nodeType":"YulBlock","src":"22685:248:29","statements":[{"nodeType":"YulAssignment","src":"22695:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22707:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22718:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22703:3:29"},"nodeType":"YulFunctionCall","src":"22703:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22695:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22742:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22753:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22738:3:29"},"nodeType":"YulFunctionCall","src":"22738:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22761:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"22767:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22757:3:29"},"nodeType":"YulFunctionCall","src":"22757:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22731:6:29"},"nodeType":"YulFunctionCall","src":"22731:47:29"},"nodeType":"YulExpressionStatement","src":"22731:47:29"},{"nodeType":"YulAssignment","src":"22787:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22921:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22795:124:29"},"nodeType":"YulFunctionCall","src":"22795:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22787:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22665:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22680:4:29","type":""}],"src":"22514:419:29"},{"body":{"nodeType":"YulBlock","src":"23045:69:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23067:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"23075:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23063:3:29"},"nodeType":"YulFunctionCall","src":"23063:14:29"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"23079:27:29","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23056:6:29"},"nodeType":"YulFunctionCall","src":"23056:51:29"},"nodeType":"YulExpressionStatement","src":"23056:51:29"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23037:6:29","type":""}],"src":"22939:175:29"},{"body":{"nodeType":"YulBlock","src":"23266:220:29","statements":[{"nodeType":"YulAssignment","src":"23276:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23342:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"23347:2:29","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23283:58:29"},"nodeType":"YulFunctionCall","src":"23283:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23276:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23448:3:29"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"23359:88:29"},"nodeType":"YulFunctionCall","src":"23359:93:29"},"nodeType":"YulExpressionStatement","src":"23359:93:29"},{"nodeType":"YulAssignment","src":"23461:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23472:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"23477:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23468:3:29"},"nodeType":"YulFunctionCall","src":"23468:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23461:3:29"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23254:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23262:3:29","type":""}],"src":"23120:366:29"},{"body":{"nodeType":"YulBlock","src":"23663:248:29","statements":[{"nodeType":"YulAssignment","src":"23673:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23685:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23696:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23681:3:29"},"nodeType":"YulFunctionCall","src":"23681:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23673:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23720:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23731:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23716:3:29"},"nodeType":"YulFunctionCall","src":"23716:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23739:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"23745:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23735:3:29"},"nodeType":"YulFunctionCall","src":"23735:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23709:6:29"},"nodeType":"YulFunctionCall","src":"23709:47:29"},"nodeType":"YulExpressionStatement","src":"23709:47:29"},{"nodeType":"YulAssignment","src":"23765:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23899:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23773:124:29"},"nodeType":"YulFunctionCall","src":"23773:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23765:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23643:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23658:4:29","type":""}],"src":"23492:419:29"},{"body":{"nodeType":"YulBlock","src":"24023:131:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24045:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24053:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24041:3:29"},"nodeType":"YulFunctionCall","src":"24041:14:29"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"24057:34:29","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24034:6:29"},"nodeType":"YulFunctionCall","src":"24034:58:29"},"nodeType":"YulExpressionStatement","src":"24034:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24113:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24121:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24109:3:29"},"nodeType":"YulFunctionCall","src":"24109:15:29"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"24126:20:29","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24102:6:29"},"nodeType":"YulFunctionCall","src":"24102:45:29"},"nodeType":"YulExpressionStatement","src":"24102:45:29"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24015:6:29","type":""}],"src":"23917:237:29"},{"body":{"nodeType":"YulBlock","src":"24306:220:29","statements":[{"nodeType":"YulAssignment","src":"24316:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24382:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"24387:2:29","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24323:58:29"},"nodeType":"YulFunctionCall","src":"24323:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24316:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24488:3:29"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"24399:88:29"},"nodeType":"YulFunctionCall","src":"24399:93:29"},"nodeType":"YulExpressionStatement","src":"24399:93:29"},{"nodeType":"YulAssignment","src":"24501:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24512:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"24517:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24508:3:29"},"nodeType":"YulFunctionCall","src":"24508:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24501:3:29"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24294:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24302:3:29","type":""}],"src":"24160:366:29"},{"body":{"nodeType":"YulBlock","src":"24703:248:29","statements":[{"nodeType":"YulAssignment","src":"24713:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24725:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24736:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24721:3:29"},"nodeType":"YulFunctionCall","src":"24721:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24713:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24760:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24771:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24756:3:29"},"nodeType":"YulFunctionCall","src":"24756:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24779:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"24785:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24775:3:29"},"nodeType":"YulFunctionCall","src":"24775:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24749:6:29"},"nodeType":"YulFunctionCall","src":"24749:47:29"},"nodeType":"YulExpressionStatement","src":"24749:47:29"},{"nodeType":"YulAssignment","src":"24805:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24939:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24813:124:29"},"nodeType":"YulFunctionCall","src":"24813:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24805:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24683:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24698:4:29","type":""}],"src":"24532:419:29"},{"body":{"nodeType":"YulBlock","src":"25063:127:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25085:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25093:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25081:3:29"},"nodeType":"YulFunctionCall","src":"25081:14:29"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"25097:34:29","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25074:6:29"},"nodeType":"YulFunctionCall","src":"25074:58:29"},"nodeType":"YulExpressionStatement","src":"25074:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25153:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25161:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25149:3:29"},"nodeType":"YulFunctionCall","src":"25149:15:29"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"25166:16:29","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25142:6:29"},"nodeType":"YulFunctionCall","src":"25142:41:29"},"nodeType":"YulExpressionStatement","src":"25142:41:29"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25055:6:29","type":""}],"src":"24957:233:29"},{"body":{"nodeType":"YulBlock","src":"25342:220:29","statements":[{"nodeType":"YulAssignment","src":"25352:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25418:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"25423:2:29","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25359:58:29"},"nodeType":"YulFunctionCall","src":"25359:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25352:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25524:3:29"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"25435:88:29"},"nodeType":"YulFunctionCall","src":"25435:93:29"},"nodeType":"YulExpressionStatement","src":"25435:93:29"},{"nodeType":"YulAssignment","src":"25537:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25548:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"25553:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25544:3:29"},"nodeType":"YulFunctionCall","src":"25544:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25537:3:29"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25330:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25338:3:29","type":""}],"src":"25196:366:29"},{"body":{"nodeType":"YulBlock","src":"25739:248:29","statements":[{"nodeType":"YulAssignment","src":"25749:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25761:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25772:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25757:3:29"},"nodeType":"YulFunctionCall","src":"25757:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25749:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25796:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25807:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25792:3:29"},"nodeType":"YulFunctionCall","src":"25792:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25815:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"25821:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25811:3:29"},"nodeType":"YulFunctionCall","src":"25811:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25785:6:29"},"nodeType":"YulFunctionCall","src":"25785:47:29"},"nodeType":"YulExpressionStatement","src":"25785:47:29"},{"nodeType":"YulAssignment","src":"25841:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25975:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25849:124:29"},"nodeType":"YulFunctionCall","src":"25849:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25841:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25719:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25734:4:29","type":""}],"src":"25568:419:29"},{"body":{"nodeType":"YulBlock","src":"26021:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26038:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26041:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26031:6:29"},"nodeType":"YulFunctionCall","src":"26031:88:29"},"nodeType":"YulExpressionStatement","src":"26031:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26135:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26138:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26128:6:29"},"nodeType":"YulFunctionCall","src":"26128:15:29"},"nodeType":"YulExpressionStatement","src":"26128:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26159:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26162:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26152:6:29"},"nodeType":"YulFunctionCall","src":"26152:15:29"},"nodeType":"YulExpressionStatement","src":"26152:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25993:180:29"},{"body":{"nodeType":"YulBlock","src":"26224:146:29","statements":[{"nodeType":"YulAssignment","src":"26234:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26257:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26239:17:29"},"nodeType":"YulFunctionCall","src":"26239:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26234:1:29"}]},{"nodeType":"YulAssignment","src":"26268:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26291:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26273:17:29"},"nodeType":"YulFunctionCall","src":"26273:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26268:1:29"}]},{"body":{"nodeType":"YulBlock","src":"26315:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26317:16:29"},"nodeType":"YulFunctionCall","src":"26317:18:29"},"nodeType":"YulExpressionStatement","src":"26317:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26309:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"26312:1:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26306:2:29"},"nodeType":"YulFunctionCall","src":"26306:8:29"},"nodeType":"YulIf","src":"26303:34:29"},{"nodeType":"YulAssignment","src":"26347:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26359:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"26362:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26355:3:29"},"nodeType":"YulFunctionCall","src":"26355:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"26347:4:29"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26210:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"26213:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"26219:4:29","type":""}],"src":"26179:191:29"},{"body":{"nodeType":"YulBlock","src":"26420:261:29","statements":[{"nodeType":"YulAssignment","src":"26430:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26453:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26435:17:29"},"nodeType":"YulFunctionCall","src":"26435:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26430:1:29"}]},{"nodeType":"YulAssignment","src":"26464:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26487:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26469:17:29"},"nodeType":"YulFunctionCall","src":"26469:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26464:1:29"}]},{"body":{"nodeType":"YulBlock","src":"26627:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26629:16:29"},"nodeType":"YulFunctionCall","src":"26629:18:29"},"nodeType":"YulExpressionStatement","src":"26629:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26548:1:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26555:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"26623:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26551:3:29"},"nodeType":"YulFunctionCall","src":"26551:74:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26545:2:29"},"nodeType":"YulFunctionCall","src":"26545:81:29"},"nodeType":"YulIf","src":"26542:107:29"},{"nodeType":"YulAssignment","src":"26659:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26670:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"26673:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26666:3:29"},"nodeType":"YulFunctionCall","src":"26666:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26659:3:29"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26407:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"26410:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26416:3:29","type":""}],"src":"26376:305:29"},{"body":{"nodeType":"YulBlock","src":"26745:40:29","statements":[{"nodeType":"YulAssignment","src":"26756:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26772:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26766:5:29"},"nodeType":"YulFunctionCall","src":"26766:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26756:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26728:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26738:6:29","type":""}],"src":"26687:98:29"},{"body":{"nodeType":"YulBlock","src":"26886:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26903:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"26908:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26896:6:29"},"nodeType":"YulFunctionCall","src":"26896:19:29"},"nodeType":"YulExpressionStatement","src":"26896:19:29"},{"nodeType":"YulAssignment","src":"26924:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26943:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"26948:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26939:3:29"},"nodeType":"YulFunctionCall","src":"26939:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26924:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26858:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"26863:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"26874:11:29","type":""}],"src":"26791:168:29"},{"body":{"nodeType":"YulBlock","src":"27055:270:29","statements":[{"nodeType":"YulVariableDeclaration","src":"27065:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27111:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27079:31:29"},"nodeType":"YulFunctionCall","src":"27079:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27069:6:29","type":""}]},{"nodeType":"YulAssignment","src":"27126:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27191:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"27196:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27133:57:29"},"nodeType":"YulFunctionCall","src":"27133:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27126:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27238:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"27245:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27234:3:29"},"nodeType":"YulFunctionCall","src":"27234:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"27252:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"27257:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"27212:21:29"},"nodeType":"YulFunctionCall","src":"27212:52:29"},"nodeType":"YulExpressionStatement","src":"27212:52:29"},{"nodeType":"YulAssignment","src":"27273:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27284:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27311:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"27289:21:29"},"nodeType":"YulFunctionCall","src":"27289:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27280:3:29"},"nodeType":"YulFunctionCall","src":"27280:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27273:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27036:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27043:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27051:3:29","type":""}],"src":"26965:360:29"},{"body":{"nodeType":"YulBlock","src":"27531:440:29","statements":[{"nodeType":"YulAssignment","src":"27541:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27553:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27564:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27549:3:29"},"nodeType":"YulFunctionCall","src":"27549:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27541:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27622:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27635:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27646:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27631:3:29"},"nodeType":"YulFunctionCall","src":"27631:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27578:43:29"},"nodeType":"YulFunctionCall","src":"27578:71:29"},"nodeType":"YulExpressionStatement","src":"27578:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27703:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27716:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27727:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27712:3:29"},"nodeType":"YulFunctionCall","src":"27712:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27659:43:29"},"nodeType":"YulFunctionCall","src":"27659:72:29"},"nodeType":"YulExpressionStatement","src":"27659:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27785:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27798:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27809:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27794:3:29"},"nodeType":"YulFunctionCall","src":"27794:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27741:43:29"},"nodeType":"YulFunctionCall","src":"27741:72:29"},"nodeType":"YulExpressionStatement","src":"27741:72:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27834:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27845:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27830:3:29"},"nodeType":"YulFunctionCall","src":"27830:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27854:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"27860:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27850:3:29"},"nodeType":"YulFunctionCall","src":"27850:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27823:6:29"},"nodeType":"YulFunctionCall","src":"27823:48:29"},"nodeType":"YulExpressionStatement","src":"27823:48:29"},{"nodeType":"YulAssignment","src":"27880:84:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27950:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"27959:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27888:61:29"},"nodeType":"YulFunctionCall","src":"27888:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27880:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27479:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27491:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27499:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27507:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27515:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27526:4:29","type":""}],"src":"27331:640:29"},{"body":{"nodeType":"YulBlock","src":"28039:79:29","statements":[{"nodeType":"YulAssignment","src":"28049:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28064:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28058:5:29"},"nodeType":"YulFunctionCall","src":"28058:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28049:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28106:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"28080:25:29"},"nodeType":"YulFunctionCall","src":"28080:32:29"},"nodeType":"YulExpressionStatement","src":"28080:32:29"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28017:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"28025:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"28033:5:29","type":""}],"src":"27977:141:29"},{"body":{"nodeType":"YulBlock","src":"28200:273:29","statements":[{"body":{"nodeType":"YulBlock","src":"28246:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28248:77:29"},"nodeType":"YulFunctionCall","src":"28248:79:29"},"nodeType":"YulExpressionStatement","src":"28248:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28221:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"28230:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28217:3:29"},"nodeType":"YulFunctionCall","src":"28217:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"28242:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28213:3:29"},"nodeType":"YulFunctionCall","src":"28213:32:29"},"nodeType":"YulIf","src":"28210:119:29"},{"nodeType":"YulBlock","src":"28339:127:29","statements":[{"nodeType":"YulVariableDeclaration","src":"28354:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"28368:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28358:6:29","type":""}]},{"nodeType":"YulAssignment","src":"28383:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28428:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"28439:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28424:3:29"},"nodeType":"YulFunctionCall","src":"28424:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28448:7:29"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"28393:30:29"},"nodeType":"YulFunctionCall","src":"28393:63:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28383:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28170:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28181:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28193:6:29","type":""}],"src":"28124:349:29"},{"body":{"nodeType":"YulBlock","src":"28507:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28524:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28527:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28517:6:29"},"nodeType":"YulFunctionCall","src":"28517:88:29"},"nodeType":"YulExpressionStatement","src":"28517:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28621:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28624:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28614:6:29"},"nodeType":"YulFunctionCall","src":"28614:15:29"},"nodeType":"YulExpressionStatement","src":"28614:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28645:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28648:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28638:6:29"},"nodeType":"YulFunctionCall","src":"28638:15:29"},"nodeType":"YulExpressionStatement","src":"28638:15:29"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"28479:180:29"},{"body":{"nodeType":"YulBlock","src":"28771:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28793:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28801:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28789:3:29"},"nodeType":"YulFunctionCall","src":"28789:14:29"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"28805:34:29","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28782:6:29"},"nodeType":"YulFunctionCall","src":"28782:58:29"},"nodeType":"YulExpressionStatement","src":"28782:58:29"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28763:6:29","type":""}],"src":"28665:182:29"},{"body":{"nodeType":"YulBlock","src":"28999:220:29","statements":[{"nodeType":"YulAssignment","src":"29009:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29075:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29080:2:29","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29016:58:29"},"nodeType":"YulFunctionCall","src":"29016:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29009:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29181:3:29"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"29092:88:29"},"nodeType":"YulFunctionCall","src":"29092:93:29"},"nodeType":"YulExpressionStatement","src":"29092:93:29"},{"nodeType":"YulAssignment","src":"29194:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29205:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29210:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29201:3:29"},"nodeType":"YulFunctionCall","src":"29201:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29194:3:29"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28987:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28995:3:29","type":""}],"src":"28853:366:29"},{"body":{"nodeType":"YulBlock","src":"29396:248:29","statements":[{"nodeType":"YulAssignment","src":"29406:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29418:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29429:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29414:3:29"},"nodeType":"YulFunctionCall","src":"29414:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29406:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29453:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29464:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29449:3:29"},"nodeType":"YulFunctionCall","src":"29449:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29472:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"29478:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29468:3:29"},"nodeType":"YulFunctionCall","src":"29468:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29442:6:29"},"nodeType":"YulFunctionCall","src":"29442:47:29"},"nodeType":"YulExpressionStatement","src":"29442:47:29"},{"nodeType":"YulAssignment","src":"29498:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29632:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29506:124:29"},"nodeType":"YulFunctionCall","src":"29506:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29498:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29376:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29391:4:29","type":""}],"src":"29225:419:29"},{"body":{"nodeType":"YulBlock","src":"29756:72:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29778:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"29786:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29774:3:29"},"nodeType":"YulFunctionCall","src":"29774:14:29"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"29790:30:29","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29767:6:29"},"nodeType":"YulFunctionCall","src":"29767:54:29"},"nodeType":"YulExpressionStatement","src":"29767:54:29"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29748:6:29","type":""}],"src":"29650:178:29"},{"body":{"nodeType":"YulBlock","src":"29980:220:29","statements":[{"nodeType":"YulAssignment","src":"29990:74:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30056:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"30061:2:29","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29997:58:29"},"nodeType":"YulFunctionCall","src":"29997:67:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29990:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30162:3:29"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"30073:88:29"},"nodeType":"YulFunctionCall","src":"30073:93:29"},"nodeType":"YulExpressionStatement","src":"30073:93:29"},{"nodeType":"YulAssignment","src":"30175:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30186:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"30191:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30182:3:29"},"nodeType":"YulFunctionCall","src":"30182:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30175:3:29"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29968:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29976:3:29","type":""}],"src":"29834:366:29"},{"body":{"nodeType":"YulBlock","src":"30377:248:29","statements":[{"nodeType":"YulAssignment","src":"30387:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30399:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30410:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30395:3:29"},"nodeType":"YulFunctionCall","src":"30395:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30387:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30434:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30445:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30430:3:29"},"nodeType":"YulFunctionCall","src":"30430:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30453:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"30459:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30449:3:29"},"nodeType":"YulFunctionCall","src":"30449:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30423:6:29"},"nodeType":"YulFunctionCall","src":"30423:47:29"},"nodeType":"YulExpressionStatement","src":"30423:47:29"},{"nodeType":"YulAssignment","src":"30479:139:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30613:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30487:124:29"},"nodeType":"YulFunctionCall","src":"30487:131:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30479:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30357:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30372:4:29","type":""}],"src":"30206:419:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063e985e9c5146102f0578063eacabe1414610320578063f2fde38b146103505761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611e0e565b61036c565b6040516101379190611e56565b60405180910390f35b61014861044e565b6040516101559190611f0a565b60405180910390f35b61017860048036038101906101739190611f62565b6104e0565b6040516101859190611fd0565b60405180910390f35b6101a860048036038101906101a39190612017565b610526565b005b6101c460048036038101906101bf9190612057565b61063e565b005b6101e060048036038101906101db9190612057565b61069e565b005b6101fc60048036038101906101f79190611f62565b6106be565b6040516102099190611fd0565b60405180910390f35b61022c600480360381019061022791906120aa565b610745565b60405161023991906120e6565b60405180910390f35b61024a6107fd565b005b610254610811565b6040516102619190611fd0565b60405180910390f35b61027261083b565b60405161027f9190611f0a565b60405180910390f35b6102a2600480360381019061029d919061212d565b6108cd565b005b6102be60048036038101906102b991906122a2565b6108e3565b005b6102da60048036038101906102d59190611f62565b610945565b6040516102e79190611f0a565b60405180910390f35b61030a60048036038101906103059190612325565b610a58565b6040516103179190611e56565b60405180910390f35b61033a60048036038101906103359190612406565b610aec565b60405161034791906120e6565b60405180910390f35b61036a600480360381019061036591906120aa565b610b2c565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610447575061044682610bb0565b5b9050919050565b60606000805461045d90612491565b80601f016020809104026020016040519081016040528092919081815260200182805461048990612491565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b60006104eb82610c1a565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610531826106be565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059990612535565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105c1610c65565b73ffffffffffffffffffffffffffffffffffffffff1614806105f057506105ef816105ea610c65565b610a58565b5b61062f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610626906125c7565b60405180910390fd5b6106398383610c6d565b505050565b61064f610649610c65565b82610d26565b61068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590612659565b60405180910390fd5b610699838383610dbb565b505050565b6106b9838383604051806020016040528060008152506108e3565b505050565b6000806106ca836110b5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561073c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610733906126c5565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad90612757565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108056110f2565b61080f6000611170565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461084a90612491565b80601f016020809104026020016040519081016040528092919081815260200182805461087690612491565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b5050505050905090565b6108df6108d8610c65565b8383611236565b5050565b6108f46108ee610c65565b83610d26565b610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90612659565b60405180910390fd5b61093f848484846113a3565b50505050565b606061095082610c1a565b600060066000848152602001908152602001600020805461097090612491565b80601f016020809104026020016040519081016040528092919081815260200182805461099c90612491565b80156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b5050505050905060006109fa6113ff565b9050600081511415610a10578192505050610a53565b600082511115610a45578082604051602001610a2d9291906127b3565b60405160208183030381529060405292505050610a53565b610a4e84611416565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610af66110f2565b610b00600861147e565b6000610b0c6008611494565b9050610b1884826114a2565b610b2281846114c0565b8091505092915050565b610b346110f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ba4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9b90612849565b60405180910390fd5b610bad81611170565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c2381611534565b610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c59906126c5565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ce0836106be565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d32836106be565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d745750610d738185610a58565b5b80610db257508373ffffffffffffffffffffffffffffffffffffffff16610d9a846104e0565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ddb826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e28906128db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e989061296d565b60405180910390fd5b610eae8383836001611575565b8273ffffffffffffffffffffffffffffffffffffffff16610ece826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b906128db565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110b0838383600161169b565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110fa610c65565b73ffffffffffffffffffffffffffffffffffffffff16611118610811565b73ffffffffffffffffffffffffffffffffffffffff161461116e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611165906129d9565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c90612a45565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113969190611e56565b60405180910390a3505050565b6113ae848484610dbb565b6113ba848484846116a1565b6113f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f090612ad7565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061142182610c1a565b600061142b6113ff565b9050600081511161144b5760405180602001604052806000815250611476565b8061145584611838565b6040516020016114669291906127b3565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6114bc828260405180602001604052806000815250611910565b5050565b6114c982611534565b611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff90612b69565b60405180910390fd5b8060066000848152602001908152602001600020908051906020019061152f929190611cff565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff16611556836110b5565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600181111561169557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146116095780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116019190612bb8565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116945780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461168c9190612bec565b925050819055505b5b50505050565b50505050565b60006116c28473ffffffffffffffffffffffffffffffffffffffff1661196b565b1561182b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116eb610c65565b8786866040518563ffffffff1660e01b815260040161170d9493929190612c97565b602060405180830381600087803b15801561172757600080fd5b505af192505050801561175857506040513d601f19601f820116820180604052508101906117559190612cf8565b60015b6117db573d8060008114611788576040519150601f19603f3d011682016040523d82523d6000602084013e61178d565b606091505b506000815114156117d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ca90612ad7565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611830565b600190505b949350505050565b6060600060016118478461198e565b01905060008167ffffffffffffffff81111561186657611865612177565b5b6040519080825280601f01601f1916602001820160405280156118985781602001600182028036833780820191505090505b509050600082602001820190505b600115611905578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118ef576118ee612d25565b5b049450600085141561190057611905565b6118a6565b819350505050919050565b61191a8383611ae1565b61192760008484846116a1565b611966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195d90612ad7565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119ec577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119e2576119e1612d25565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a29576d04ee2d6d415b85acef81000000008381611a1f57611a1e612d25565b5b0492506020810190505b662386f26fc100008310611a5857662386f26fc100008381611a4e57611a4d612d25565b5b0492506010810190505b6305f5e1008310611a81576305f5e1008381611a7757611a76612d25565b5b0492506008810190505b6127108310611aa6576127108381611a9c57611a9b612d25565b5b0492506004810190505b60648310611ac95760648381611abf57611abe612d25565b5b0492506002810190505b600a8310611ad8576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4890612da0565b60405180910390fd5b611b5a81611534565b15611b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9190612e0c565b60405180910390fd5b611ba8600083836001611575565b611bb181611534565b15611bf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be890612e0c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611cfb60008383600161169b565b5050565b828054611d0b90612491565b90600052602060002090601f016020900481019282611d2d5760008555611d74565b82601f10611d4657805160ff1916838001178555611d74565b82800160010185558215611d74579182015b82811115611d73578251825591602001919060010190611d58565b5b509050611d819190611d85565b5090565b5b80821115611d9e576000816000905550600101611d86565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611deb81611db6565b8114611df657600080fd5b50565b600081359050611e0881611de2565b92915050565b600060208284031215611e2457611e23611dac565b5b6000611e3284828501611df9565b91505092915050565b60008115159050919050565b611e5081611e3b565b82525050565b6000602082019050611e6b6000830184611e47565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611eab578082015181840152602081019050611e90565b83811115611eba576000848401525b50505050565b6000601f19601f8301169050919050565b6000611edc82611e71565b611ee68185611e7c565b9350611ef6818560208601611e8d565b611eff81611ec0565b840191505092915050565b60006020820190508181036000830152611f248184611ed1565b905092915050565b6000819050919050565b611f3f81611f2c565b8114611f4a57600080fd5b50565b600081359050611f5c81611f36565b92915050565b600060208284031215611f7857611f77611dac565b5b6000611f8684828501611f4d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fba82611f8f565b9050919050565b611fca81611faf565b82525050565b6000602082019050611fe56000830184611fc1565b92915050565b611ff481611faf565b8114611fff57600080fd5b50565b60008135905061201181611feb565b92915050565b6000806040838503121561202e5761202d611dac565b5b600061203c85828601612002565b925050602061204d85828601611f4d565b9150509250929050565b6000806000606084860312156120705761206f611dac565b5b600061207e86828701612002565b935050602061208f86828701612002565b92505060406120a086828701611f4d565b9150509250925092565b6000602082840312156120c0576120bf611dac565b5b60006120ce84828501612002565b91505092915050565b6120e081611f2c565b82525050565b60006020820190506120fb60008301846120d7565b92915050565b61210a81611e3b565b811461211557600080fd5b50565b60008135905061212781612101565b92915050565b6000806040838503121561214457612143611dac565b5b600061215285828601612002565b925050602061216385828601612118565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6121af82611ec0565b810181811067ffffffffffffffff821117156121ce576121cd612177565b5b80604052505050565b60006121e1611da2565b90506121ed82826121a6565b919050565b600067ffffffffffffffff82111561220d5761220c612177565b5b61221682611ec0565b9050602081019050919050565b82818337600083830152505050565b6000612245612240846121f2565b6121d7565b90508281526020810184848401111561226157612260612172565b5b61226c848285612223565b509392505050565b600082601f8301126122895761228861216d565b5b8135612299848260208601612232565b91505092915050565b600080600080608085870312156122bc576122bb611dac565b5b60006122ca87828801612002565b94505060206122db87828801612002565b93505060406122ec87828801611f4d565b925050606085013567ffffffffffffffff81111561230d5761230c611db1565b5b61231987828801612274565b91505092959194509250565b6000806040838503121561233c5761233b611dac565b5b600061234a85828601612002565b925050602061235b85828601612002565b9150509250929050565b600067ffffffffffffffff8211156123805761237f612177565b5b61238982611ec0565b9050602081019050919050565b60006123a96123a484612365565b6121d7565b9050828152602081018484840111156123c5576123c4612172565b5b6123d0848285612223565b509392505050565b600082601f8301126123ed576123ec61216d565b5b81356123fd848260208601612396565b91505092915050565b6000806040838503121561241d5761241c611dac565b5b600061242b85828601612002565b925050602083013567ffffffffffffffff81111561244c5761244b611db1565b5b612458858286016123d8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124a957607f821691505b602082108114156124bd576124bc612462565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061251f602183611e7c565b915061252a826124c3565b604082019050919050565b6000602082019050818103600083015261254e81612512565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b60006125b1603d83611e7c565b91506125bc82612555565b604082019050919050565b600060208201905081810360008301526125e0816125a4565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000612643602d83611e7c565b915061264e826125e7565b604082019050919050565b6000602082019050818103600083015261267281612636565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006126af601883611e7c565b91506126ba82612679565b602082019050919050565b600060208201905081810360008301526126de816126a2565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612741602983611e7c565b915061274c826126e5565b604082019050919050565b6000602082019050818103600083015261277081612734565b9050919050565b600081905092915050565b600061278d82611e71565b6127978185612777565b93506127a7818560208601611e8d565b80840191505092915050565b60006127bf8285612782565b91506127cb8284612782565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612833602683611e7c565b915061283e826127d7565b604082019050919050565b6000602082019050818103600083015261286281612826565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006128c5602583611e7c565b91506128d082612869565b604082019050919050565b600060208201905081810360008301526128f4816128b8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612957602483611e7c565b9150612962826128fb565b604082019050919050565b600060208201905081810360008301526129868161294a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006129c3602083611e7c565b91506129ce8261298d565b602082019050919050565b600060208201905081810360008301526129f2816129b6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612a2f601983611e7c565b9150612a3a826129f9565b602082019050919050565b60006020820190508181036000830152612a5e81612a22565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612ac1603283611e7c565b9150612acc82612a65565b604082019050919050565b60006020820190508181036000830152612af081612ab4565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612b53602e83611e7c565b9150612b5e82612af7565b604082019050919050565b60006020820190508181036000830152612b8281612b46565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612bc382611f2c565b9150612bce83611f2c565b925082821015612be157612be0612b89565b5b828203905092915050565b6000612bf782611f2c565b9150612c0283611f2c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c3757612c36612b89565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000612c6982612c42565b612c738185612c4d565b9350612c83818560208601611e8d565b612c8c81611ec0565b840191505092915050565b6000608082019050612cac6000830187611fc1565b612cb96020830186611fc1565b612cc660408301856120d7565b8181036060830152612cd88184612c5e565b905095945050505050565b600081519050612cf281611de2565b92915050565b600060208284031215612d0e57612d0d611dac565b5b6000612d1c84828501612ce3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612d8a602083611e7c565b9150612d9582612d54565b602082019050919050565b60006020820190508181036000830152612db981612d7d565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612df6601c83611e7c565b9150612e0182612dc0565b602082019050919050565b60006020820190508181036000830152612e2581612de9565b905091905056fea26469706673582212201c0dab93d83811cbae9c6fa4960ce1169b556341ccab4b257f2db437a5425bd764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x350 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x212D JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x437 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x447 JUMPI POP PUSH2 0x446 DUP3 PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP3 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5C1 PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5F0 JUMPI POP PUSH2 0x5EF DUP2 PUSH2 0x5EA PUSH2 0xC65 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST JUMPDEST PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 DUP4 DUP4 PUSH2 0xC6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x64F PUSH2 0x649 PUSH2 0xC65 JUMP JUMPDEST DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP4 DUP4 DUP4 PUSH2 0xDBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6B9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6CA DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x80F PUSH1 0x0 PUSH2 0x1170 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x84A SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x876 SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x898 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x8D8 PUSH2 0xC65 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8F4 PUSH2 0x8EE PUSH2 0xC65 JUMP JUMPDEST DUP4 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93F DUP5 DUP5 DUP5 DUP5 PUSH2 0x13A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x950 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x970 SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99C SWAP1 PUSH2 0x2491 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x9FA PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xA10 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xA45 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x27B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xA4E DUP5 PUSH2 0x1416 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF6 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xB00 PUSH1 0x8 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0C PUSH1 0x8 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP PUSH2 0xB18 DUP5 DUP3 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0xB22 DUP2 DUP5 PUSH2 0x14C0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB34 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP1 PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0x1170 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE0 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD32 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD74 JUMPI POP PUSH2 0xD73 DUP2 DUP6 PUSH2 0xA58 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDB2 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9A DUP5 PUSH2 0x4E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDB DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x296D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1575 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xECE DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x169B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FA PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1118 PUSH2 0x811 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1165 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP1 PUSH2 0x2A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13AE DUP5 DUP5 DUP5 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x13BA DUP5 DUP5 DUP5 DUP5 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F0 SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1421 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142B PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1476 JUMP JUMPDEST DUP1 PUSH2 0x1455 DUP5 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1466 SWAP3 SWAP2 SWAP1 PUSH2 0x27B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1910 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C9 DUP3 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP1 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x152F SWAP3 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1556 DUP4 PUSH2 0x10B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1695 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1609 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x2BB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1694 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x196B JUMP JUMPDEST ISZERO PUSH2 0x182B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x16EB PUSH2 0xC65 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1758 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1755 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x17DB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1788 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x178D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1847 DUP5 PUSH2 0x198E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1866 JUMPI PUSH2 0x1865 PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1898 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1905 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1900 JUMPI PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x18A6 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191A DUP4 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST PUSH2 0x1927 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x1966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195D SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19EC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A29 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A1F JUMPI PUSH2 0x1A1E PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A58 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A4E JUMPI PUSH2 0x1A4D PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A81 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AA6 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AC9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1ABF JUMPI PUSH2 0x1ABE PUSH2 0x2D25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1AD8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B48 SWAP1 PUSH2 0x2DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x1534 JUMP JUMPDEST ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B91 SWAP1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x1BB1 DUP2 PUSH2 0x1534 JUMP JUMPDEST ISZERO PUSH2 0x1BF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE8 SWAP1 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1CFB PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x169B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1D0B SWAP1 PUSH2 0x2491 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1D2D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D74 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1D46 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D74 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D74 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D73 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D9E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1D86 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DEB DUP2 PUSH2 0x1DB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E08 DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E24 JUMPI PUSH2 0x1E23 PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E32 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E50 DUP2 PUSH2 0x1E3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E90 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1EBA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x1EE6 DUP2 DUP6 PUSH2 0x1E7C JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1EFF DUP2 PUSH2 0x1EC0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F24 DUP2 DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3F DUP2 PUSH2 0x1F2C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F5C DUP2 PUSH2 0x1F36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F78 JUMPI PUSH2 0x1F77 PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F86 DUP5 DUP3 DUP6 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP3 PUSH2 0x1F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FF4 DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP2 EQ PUSH2 0x1FFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2011 DUP2 PUSH2 0x1FEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202E JUMPI PUSH2 0x202D PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x203C DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x204D DUP6 DUP3 DUP7 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2070 JUMPI PUSH2 0x206F PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x207E DUP7 DUP3 DUP8 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x208F DUP7 DUP3 DUP8 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20A0 DUP7 DUP3 DUP8 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C0 JUMPI PUSH2 0x20BF PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20CE DUP5 DUP3 DUP6 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E0 DUP2 PUSH2 0x1F2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x210A DUP2 PUSH2 0x1E3B JUMP JUMPDEST DUP2 EQ PUSH2 0x2115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2127 DUP2 PUSH2 0x2101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2144 JUMPI PUSH2 0x2143 PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2152 DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2163 DUP6 DUP3 DUP7 ADD PUSH2 0x2118 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21AF DUP3 PUSH2 0x1EC0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x2177 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E1 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x21ED DUP3 DUP3 PUSH2 0x21A6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x220D JUMPI PUSH2 0x220C PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH2 0x2216 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2245 PUSH2 0x2240 DUP5 PUSH2 0x21F2 JUMP JUMPDEST PUSH2 0x21D7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2261 JUMPI PUSH2 0x2260 PUSH2 0x2172 JUMP JUMPDEST JUMPDEST PUSH2 0x226C DUP5 DUP3 DUP6 PUSH2 0x2223 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2289 JUMPI PUSH2 0x2288 PUSH2 0x216D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2299 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CA DUP8 DUP3 DUP9 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22DB DUP8 DUP3 DUP9 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22EC DUP8 DUP3 DUP9 ADD PUSH2 0x1F4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230D JUMPI PUSH2 0x230C PUSH2 0x1DB1 JUMP JUMPDEST JUMPDEST PUSH2 0x2319 DUP8 DUP3 DUP9 ADD PUSH2 0x2274 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234A DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x235B DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2380 JUMPI PUSH2 0x237F PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH2 0x2389 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A9 PUSH2 0x23A4 DUP5 PUSH2 0x2365 JUMP JUMPDEST PUSH2 0x21D7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23C5 JUMPI PUSH2 0x23C4 PUSH2 0x2172 JUMP JUMPDEST JUMPDEST PUSH2 0x23D0 DUP5 DUP3 DUP6 PUSH2 0x2223 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23ED JUMPI PUSH2 0x23EC PUSH2 0x216D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241D JUMPI PUSH2 0x241C PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x242B DUP6 DUP3 DUP7 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x244C JUMPI PUSH2 0x244B PUSH2 0x1DB1 JUMP JUMPDEST JUMPDEST PUSH2 0x2458 DUP6 DUP3 DUP7 ADD PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x24BD JUMPI PUSH2 0x24BC PUSH2 0x2462 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251F PUSH1 0x21 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x252A DUP3 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254E DUP2 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B1 PUSH1 0x3D DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x25BC DUP3 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E0 DUP2 PUSH2 0x25A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2643 PUSH1 0x2D DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x264E DUP3 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2672 DUP2 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AF PUSH1 0x18 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x26BA DUP3 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26DE DUP2 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2741 PUSH1 0x29 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x274C DUP3 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2770 DUP2 PUSH2 0x2734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278D DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x2797 DUP2 DUP6 PUSH2 0x2777 JUMP JUMPDEST SWAP4 POP PUSH2 0x27A7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BF DUP3 DUP6 PUSH2 0x2782 JUMP JUMPDEST SWAP2 POP PUSH2 0x27CB DUP3 DUP5 PUSH2 0x2782 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2833 PUSH1 0x26 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x283E DUP3 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2862 DUP2 PUSH2 0x2826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C5 PUSH1 0x25 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x28D0 DUP3 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F4 DUP2 PUSH2 0x28B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2957 PUSH1 0x24 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2962 DUP3 PUSH2 0x28FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2986 DUP2 PUSH2 0x294A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C3 PUSH1 0x20 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x29CE DUP3 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F2 DUP2 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2F PUSH1 0x19 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3A DUP3 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A5E DUP2 PUSH2 0x2A22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC1 PUSH1 0x32 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACC DUP3 PUSH2 0x2A65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AF0 DUP2 PUSH2 0x2AB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B53 PUSH1 0x2E DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5E DUP3 PUSH2 0x2AF7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B82 DUP2 PUSH2 0x2B46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BC3 DUP3 PUSH2 0x1F2C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCE DUP4 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2BE1 JUMPI PUSH2 0x2BE0 PUSH2 0x2B89 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF7 DUP3 PUSH2 0x1F2C JUMP JUMPDEST SWAP2 POP PUSH2 0x2C02 DUP4 PUSH2 0x1F2C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2C37 JUMPI PUSH2 0x2C36 PUSH2 0x2B89 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C69 DUP3 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x2C73 DUP2 DUP6 PUSH2 0x2C4D JUMP JUMPDEST SWAP4 POP PUSH2 0x2C83 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x2C8C DUP2 PUSH2 0x1EC0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2CAC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x2CC6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2CD8 DUP2 DUP5 PUSH2 0x2C5E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CF2 DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x1DAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP5 DUP3 DUP6 ADD PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8A PUSH1 0x20 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2D95 DUP3 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB9 DUP2 PUSH2 0x2D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DF6 PUSH1 0x1C DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP PUSH2 0x2E01 DUP3 PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E25 DUP2 PUSH2 0x2DE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xD 0xAB SWAP4 0xD8 CODESIZE GT 0xCB 0xAE SWAP13 PUSH16 0xA4960CE1169B556341CCAB4B257F2DB4 CALLDATACOPY 0xA5 TIMESTAMP JUMPDEST 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"721:507:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;482:608:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:314:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1570:300:6;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2633:102:6:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;482:608:11:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;912:314:28:-;1014:7;1094:13:2;:11;:13::i;:::-;1037:21:28::1;:9;:19;:21::i;:::-;1069:17;1089:19;:9;:17;:19::i;:::-;1069:39;;1118:31;1128:9;1139;1118;:31::i;:::-;1159:33;1172:9;1183:8;1159:12;:33::i;:::-;1210:9;1203:16;;;912:314:::0;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;829:155:24:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:6:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:18:-;693:7;719:10;712:17;;640:96;:::o;12768:171:6:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;13075:307:6:-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;945:123:19:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;8131:108:6:-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;1237:214:11:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;7256:126:6:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;415:696:20:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;8460:309:6:-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:16:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9889:890:26:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;9091:920:6:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:308::-;10576:4;10666:18;10658:6;10655:30;10652:56;;;10688:18;;:::i;:::-;10652:56;10726:29;10748:6;10726:29;:::i;:::-;10718:37;;10810:4;10804;10800:15;10792:23;;10514:308;;;:::o;10828:412::-;10906:5;10931:66;10947:49;10989:6;10947:49;:::i;:::-;10931:66;:::i;:::-;10922:75;;11020:6;11013:5;11006:21;11058:4;11051:5;11047:16;11096:3;11087:6;11082:3;11078:16;11075:25;11072:112;;;11103:79;;:::i;:::-;11072:112;11193:41;11227:6;11222:3;11217;11193:41;:::i;:::-;10912:328;10828:412;;;;;:::o;11260:340::-;11316:5;11365:3;11358:4;11350:6;11346:17;11342:27;11332:122;;11373:79;;:::i;:::-;11332:122;11490:6;11477:20;11515:79;11590:3;11582:6;11575:4;11567:6;11563:17;11515:79;:::i;:::-;11506:88;;11322:278;11260:340;;;;:::o;11606:654::-;11684:6;11692;11741:2;11729:9;11720:7;11716:23;11712:32;11709:119;;;11747:79;;:::i;:::-;11709:119;11867:1;11892:53;11937:7;11928:6;11917:9;11913:22;11892:53;:::i;:::-;11882:63;;11838:117;12022:2;12011:9;12007:18;11994:32;12053:18;12045:6;12042:30;12039:117;;;12075:79;;:::i;:::-;12039:117;12180:63;12235:7;12226:6;12215:9;12211:22;12180:63;:::i;:::-;12170:73;;11965:288;11606:654;;;;;:::o;12266:180::-;12314:77;12311:1;12304:88;12411:4;12408:1;12401:15;12435:4;12432:1;12425:15;12452:320;12496:6;12533:1;12527:4;12523:12;12513:22;;12580:1;12574:4;12570:12;12601:18;12591:81;;12657:4;12649:6;12645:17;12635:27;;12591:81;12719:2;12711:6;12708:14;12688:18;12685:38;12682:84;;;12738:18;;:::i;:::-;12682:84;12503:269;12452:320;;;:::o;12778:220::-;12918:34;12914:1;12906:6;12902:14;12895:58;12987:3;12982:2;12974:6;12970:15;12963:28;12778:220;:::o;13004:366::-;13146:3;13167:67;13231:2;13226:3;13167:67;:::i;:::-;13160:74;;13243:93;13332:3;13243:93;:::i;:::-;13361:2;13356:3;13352:12;13345:19;;13004:366;;;:::o;13376:419::-;13542:4;13580:2;13569:9;13565:18;13557:26;;13629:9;13623:4;13619:20;13615:1;13604:9;13600:17;13593:47;13657:131;13783:4;13657:131;:::i;:::-;13649:139;;13376:419;;;:::o;13801:248::-;13941:34;13937:1;13929:6;13925:14;13918:58;14010:31;14005:2;13997:6;13993:15;13986:56;13801:248;:::o;14055:366::-;14197:3;14218:67;14282:2;14277:3;14218:67;:::i;:::-;14211:74;;14294:93;14383:3;14294:93;:::i;:::-;14412:2;14407:3;14403:12;14396:19;;14055:366;;;:::o;14427:419::-;14593:4;14631:2;14620:9;14616:18;14608:26;;14680:9;14674:4;14670:20;14666:1;14655:9;14651:17;14644:47;14708:131;14834:4;14708:131;:::i;:::-;14700:139;;14427:419;;;:::o;14852:232::-;14992:34;14988:1;14980:6;14976:14;14969:58;15061:15;15056:2;15048:6;15044:15;15037:40;14852:232;:::o;15090:366::-;15232:3;15253:67;15317:2;15312:3;15253:67;:::i;:::-;15246:74;;15329:93;15418:3;15329:93;:::i;:::-;15447:2;15442:3;15438:12;15431:19;;15090:366;;;:::o;15462:419::-;15628:4;15666:2;15655:9;15651:18;15643:26;;15715:9;15709:4;15705:20;15701:1;15690:9;15686:17;15679:47;15743:131;15869:4;15743:131;:::i;:::-;15735:139;;15462:419;;;:::o;15887:174::-;16027:26;16023:1;16015:6;16011:14;16004:50;15887:174;:::o;16067:366::-;16209:3;16230:67;16294:2;16289:3;16230:67;:::i;:::-;16223:74;;16306:93;16395:3;16306:93;:::i;:::-;16424:2;16419:3;16415:12;16408:19;;16067:366;;;:::o;16439:419::-;16605:4;16643:2;16632:9;16628:18;16620:26;;16692:9;16686:4;16682:20;16678:1;16667:9;16663:17;16656:47;16720:131;16846:4;16720:131;:::i;:::-;16712:139;;16439:419;;;:::o;16864:228::-;17004:34;17000:1;16992:6;16988:14;16981:58;17073:11;17068:2;17060:6;17056:15;17049:36;16864:228;:::o;17098:366::-;17240:3;17261:67;17325:2;17320:3;17261:67;:::i;:::-;17254:74;;17337:93;17426:3;17337:93;:::i;:::-;17455:2;17450:3;17446:12;17439:19;;17098:366;;;:::o;17470:419::-;17636:4;17674:2;17663:9;17659:18;17651:26;;17723:9;17717:4;17713:20;17709:1;17698:9;17694:17;17687:47;17751:131;17877:4;17751:131;:::i;:::-;17743:139;;17470:419;;;:::o;17895:148::-;17997:11;18034:3;18019:18;;17895:148;;;;:::o;18049:377::-;18155:3;18183:39;18216:5;18183:39;:::i;:::-;18238:89;18320:6;18315:3;18238:89;:::i;:::-;18231:96;;18336:52;18381:6;18376:3;18369:4;18362:5;18358:16;18336:52;:::i;:::-;18413:6;18408:3;18404:16;18397:23;;18159:267;18049:377;;;;:::o;18432:435::-;18612:3;18634:95;18725:3;18716:6;18634:95;:::i;:::-;18627:102;;18746:95;18837:3;18828:6;18746:95;:::i;:::-;18739:102;;18858:3;18851:10;;18432:435;;;;;:::o;18873:225::-;19013:34;19009:1;19001:6;18997:14;18990:58;19082:8;19077:2;19069:6;19065:15;19058:33;18873:225;:::o;19104:366::-;19246:3;19267:67;19331:2;19326:3;19267:67;:::i;:::-;19260:74;;19343:93;19432:3;19343:93;:::i;:::-;19461:2;19456:3;19452:12;19445:19;;19104:366;;;:::o;19476:419::-;19642:4;19680:2;19669:9;19665:18;19657:26;;19729:9;19723:4;19719:20;19715:1;19704:9;19700:17;19693:47;19757:131;19883:4;19757:131;:::i;:::-;19749:139;;19476:419;;;:::o;19901:224::-;20041:34;20037:1;20029:6;20025:14;20018:58;20110:7;20105:2;20097:6;20093:15;20086:32;19901:224;:::o;20131:366::-;20273:3;20294:67;20358:2;20353:3;20294:67;:::i;:::-;20287:74;;20370:93;20459:3;20370:93;:::i;:::-;20488:2;20483:3;20479:12;20472:19;;20131:366;;;:::o;20503:419::-;20669:4;20707:2;20696:9;20692:18;20684:26;;20756:9;20750:4;20746:20;20742:1;20731:9;20727:17;20720:47;20784:131;20910:4;20784:131;:::i;:::-;20776:139;;20503:419;;;:::o;20928:223::-;21068:34;21064:1;21056:6;21052:14;21045:58;21137:6;21132:2;21124:6;21120:15;21113:31;20928:223;:::o;21157:366::-;21299:3;21320:67;21384:2;21379:3;21320:67;:::i;:::-;21313:74;;21396:93;21485:3;21396:93;:::i;:::-;21514:2;21509:3;21505:12;21498:19;;21157:366;;;:::o;21529:419::-;21695:4;21733:2;21722:9;21718:18;21710:26;;21782:9;21776:4;21772:20;21768:1;21757:9;21753:17;21746:47;21810:131;21936:4;21810:131;:::i;:::-;21802:139;;21529:419;;;:::o;21954:182::-;22094:34;22090:1;22082:6;22078:14;22071:58;21954:182;:::o;22142:366::-;22284:3;22305:67;22369:2;22364:3;22305:67;:::i;:::-;22298:74;;22381:93;22470:3;22381:93;:::i;:::-;22499:2;22494:3;22490:12;22483:19;;22142:366;;;:::o;22514:419::-;22680:4;22718:2;22707:9;22703:18;22695:26;;22767:9;22761:4;22757:20;22753:1;22742:9;22738:17;22731:47;22795:131;22921:4;22795:131;:::i;:::-;22787:139;;22514:419;;;:::o;22939:175::-;23079:27;23075:1;23067:6;23063:14;23056:51;22939:175;:::o;23120:366::-;23262:3;23283:67;23347:2;23342:3;23283:67;:::i;:::-;23276:74;;23359:93;23448:3;23359:93;:::i;:::-;23477:2;23472:3;23468:12;23461:19;;23120:366;;;:::o;23492:419::-;23658:4;23696:2;23685:9;23681:18;23673:26;;23745:9;23739:4;23735:20;23731:1;23720:9;23716:17;23709:47;23773:131;23899:4;23773:131;:::i;:::-;23765:139;;23492:419;;;:::o;23917:237::-;24057:34;24053:1;24045:6;24041:14;24034:58;24126:20;24121:2;24113:6;24109:15;24102:45;23917:237;:::o;24160:366::-;24302:3;24323:67;24387:2;24382:3;24323:67;:::i;:::-;24316:74;;24399:93;24488:3;24399:93;:::i;:::-;24517:2;24512:3;24508:12;24501:19;;24160:366;;;:::o;24532:419::-;24698:4;24736:2;24725:9;24721:18;24713:26;;24785:9;24779:4;24775:20;24771:1;24760:9;24756:17;24749:47;24813:131;24939:4;24813:131;:::i;:::-;24805:139;;24532:419;;;:::o;24957:233::-;25097:34;25093:1;25085:6;25081:14;25074:58;25166:16;25161:2;25153:6;25149:15;25142:41;24957:233;:::o;25196:366::-;25338:3;25359:67;25423:2;25418:3;25359:67;:::i;:::-;25352:74;;25435:93;25524:3;25435:93;:::i;:::-;25553:2;25548:3;25544:12;25537:19;;25196:366;;;:::o;25568:419::-;25734:4;25772:2;25761:9;25757:18;25749:26;;25821:9;25815:4;25811:20;25807:1;25796:9;25792:17;25785:47;25849:131;25975:4;25849:131;:::i;:::-;25841:139;;25568:419;;;:::o;25993:180::-;26041:77;26038:1;26031:88;26138:4;26135:1;26128:15;26162:4;26159:1;26152:15;26179:191;26219:4;26239:20;26257:1;26239:20;:::i;:::-;26234:25;;26273:20;26291:1;26273:20;:::i;:::-;26268:25;;26312:1;26309;26306:8;26303:34;;;26317:18;;:::i;:::-;26303:34;26362:1;26359;26355:9;26347:17;;26179:191;;;;:::o;26376:305::-;26416:3;26435:20;26453:1;26435:20;:::i;:::-;26430:25;;26469:20;26487:1;26469:20;:::i;:::-;26464:25;;26623:1;26555:66;26551:74;26548:1;26545:81;26542:107;;;26629:18;;:::i;:::-;26542:107;26673:1;26670;26666:9;26659:16;;26376:305;;;;:::o;26687:98::-;26738:6;26772:5;26766:12;26756:22;;26687:98;;;:::o;26791:168::-;26874:11;26908:6;26903:3;26896:19;26948:4;26943:3;26939:14;26924:29;;26791:168;;;;:::o;26965:360::-;27051:3;27079:38;27111:5;27079:38;:::i;:::-;27133:70;27196:6;27191:3;27133:70;:::i;:::-;27126:77;;27212:52;27257:6;27252:3;27245:4;27238:5;27234:16;27212:52;:::i;:::-;27289:29;27311:6;27289:29;:::i;:::-;27284:3;27280:39;27273:46;;27055:270;26965:360;;;;:::o;27331:640::-;27526:4;27564:3;27553:9;27549:19;27541:27;;27578:71;27646:1;27635:9;27631:17;27622:6;27578:71;:::i;:::-;27659:72;27727:2;27716:9;27712:18;27703:6;27659:72;:::i;:::-;27741;27809:2;27798:9;27794:18;27785:6;27741:72;:::i;:::-;27860:9;27854:4;27850:20;27845:2;27834:9;27830:18;27823:48;27888:76;27959:4;27950:6;27888:76;:::i;:::-;27880:84;;27331:640;;;;;;;:::o;27977:141::-;28033:5;28064:6;28058:13;28049:22;;28080:32;28106:5;28080:32;:::i;:::-;27977:141;;;;:::o;28124:349::-;28193:6;28242:2;28230:9;28221:7;28217:23;28213:32;28210:119;;;28248:79;;:::i;:::-;28210:119;28368:1;28393:63;28448:7;28439:6;28428:9;28424:22;28393:63;:::i;:::-;28383:73;;28339:127;28124:349;;;;:::o;28479:180::-;28527:77;28524:1;28517:88;28624:4;28621:1;28614:15;28648:4;28645:1;28638:15;28665:182;28805:34;28801:1;28793:6;28789:14;28782:58;28665:182;:::o;28853:366::-;28995:3;29016:67;29080:2;29075:3;29016:67;:::i;:::-;29009:74;;29092:93;29181:3;29092:93;:::i;:::-;29210:2;29205:3;29201:12;29194:19;;28853:366;;;:::o;29225:419::-;29391:4;29429:2;29418:9;29414:18;29406:26;;29478:9;29472:4;29468:20;29464:1;29453:9;29449:17;29442:47;29506:131;29632:4;29506:131;:::i;:::-;29498:139;;29225:419;;;:::o;29650:178::-;29790:30;29786:1;29778:6;29774:14;29767:54;29650:178;:::o;29834:366::-;29976:3;29997:67;30061:2;30056:3;29997:67;:::i;:::-;29990:74;;30073:93;30162:3;30073:93;:::i;:::-;30191:2;30186:3;30182:12;30175:19;;29834:366;;;:::o;30206:419::-;30372:4;30410:2;30399:9;30395:18;30387:26;;30459:9;30453:4;30449:20;30445:1;30434:9;30430:17;30423:47;30487:131;30613:4;30487:131;:::i;:::-;30479:139;;30206:419;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintNFT(address,string)":"eacabe14","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DelFactory.sol\":\"DelFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xbf868a3a3cd497eb5896303474d25b9b5fe487ba30391db0a3e5b950573498d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a8a3be23b60a30f621c275c3195740501dc69a202b8364b383b5dc5470f0d\",\"dweb:/ipfs/Qma8bNQEtBeoG1N2tqiPN6dYPbp3S4WGN6eBXAopjYEPjV\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Votes.sol\":{\"keccak256\":\"0x19cf96045e935b99fe8fc15018af1d74203ad6ae1b301b950da4e90ddec05f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6233da69d82699c102aa28e6f63ff2935655918ce8f44ae555185be73a1a3fbd\",\"dweb:/ipfs/QmPc2QL2xWY3UsbmAKV3KWREXU4omp3dodW6hSpzdMiqFC\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC721/extensions/draft-ERC721Votes.sol\":{\"keccak256\":\"0x73fda7d6b96b657acbf36817a64ad875a601747798725b0aa68f8652f72dbe29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0779655d6b2a1f83a8624a65139410525890fa6320f1bf84e2593ba255b9ef81\",\"dweb:/ipfs/QmPDn1wdShJxaHUk3WQC2jD5drWoCerHoknTGNV6v1vA2T\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/DelFactory.sol\":{\"keccak256\":\"0xf5e98fa3ac6983e49aef8c92c8b04191e028886d0aaa1eb8c8b383f16c1e61bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc6475acee1640895b2a43493be508d4858b86e5be7facd98ed7863e154a2902\",\"dweb:/ipfs/QmTDnVEDJaDdEzBYaFRAR2LBmstXhcwmVYrWQbSroPw488\"]}},\"version\":1}"}}}}}